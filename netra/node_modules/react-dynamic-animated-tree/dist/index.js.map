{"version":3,"file":"index.js","sources":["../src/TreeComponent.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tree from 'react-animated-tree'\r\n\r\n\r\nclass TreeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nodeData: [],\r\n            showIcon: \"hidden\",\r\n            isActive: \"\"\r\n        };\r\n    }\r\n   \r\n    render() {\r\n            return this.props.nodeData.length < 0 ? null : (<div style={{ textAlign: 'left' }}>\r\n                <Tree key={this.props.id} open={this.props.open} \r\n                    content={\r\n                        <div style={{ ...this.props.styles.node }}>\r\n                            <span key={this.props.id} value={this.props.content} className=\"treeNode\"\r\n                                style={( this.props.isActive && this.props.id == this.props.isActive.id) ? this.props.styles.selected : { color: 'black'} }\r\n                                onClick={ this.props.treeNodeClick ?\r\n                                    () => this.props.treeNodeClick({ \r\n                                        id: this.props.id,\r\n                                        title: this.props.content, \r\n                                        parentNode: this.props.parentNode,\r\n                                        childNodes: this.props.nodeData \r\n                                }) : null} >{this.props.content}</span>\r\n                        </div>\r\n                    }>\r\n                    {this.props.nodeData.map((currentNode, index) => (\r\n                        !currentNode.childNodes.length > 0 ?\r\n                            <Tree key={currentNode.id} \r\n                                content={\r\n                                    <div style={{ ...this.props.styles.node }}>\r\n                                        <span key={currentNode.id} \r\n                                            style={( this.props.isActive && currentNode.id == this.props.isActive.id) ? this.props.styles.selected : null }\r\n                                            value={currentNode.id} className=\"treeNode\" \r\n                                            onClick={this.props.treeNodeClick ? () => this.props.treeNodeClick(currentNode) : null }>{currentNode.title}</span>\r\n                                    </div>\r\n                                } ></Tree> :\r\n                            <TreeComponent nodeData={currentNode.childNodes}\r\n                                isActive={this.props.isActive}\r\n                                key={currentNode.id}\r\n                                id={currentNode.id}\r\n                                parentNode={currentNode.parentNode}\r\n                                content={currentNode.title}\r\n                                treeNodeClick={this.props.treeNodeClick}\r\n                                open={false}\r\n                                styles={this.props.styles}></TreeComponent>\r\n                    )\r\n                    )}\r\n                </Tree>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTreeComponent.propTypes = {\r\n    content: PropTypes.string,\r\n    id: PropTypes.string,\r\n    nodeData: PropTypes.array\r\n  }\r\n \r\nexport default TreeComponent;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TreeComponent  from './TreeComponent'\r\n\r\nconst styles = {\r\n  leaf: {\r\n      cursor: 'pointer',\r\n      display: 'inline'\r\n  },\r\n  node: {\r\n      cursor: 'pointer',\r\n      display: 'inline',\r\n      color: 'black'\r\n  },\r\n  icon: {\r\n      width: '1em',\r\n      height: '1em',\r\n      marginLeft: 5,\r\n      cursor: 'cursor',\r\n  },\r\n  selected: {\r\n      color: 'blue'\r\n  }\r\n}\r\n\r\nclass DynamicTree extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null}\r\n     this.handleTreeNodeClick = this.handleTreeNodeClick.bind(this)\r\n  }\r\n\r\n  handleTreeNodeClick = e => {\r\n    this.setState({ selected: e})\r\n    if(this.props.onClick){\r\n      this.props.onClick(e)\r\n    }\r\n}\r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n    <TreeComponent key=\"dynamicTree\" id={this.props.id} nodeData={this.props.data} content={this.props.title} open\r\n      treeNodeClick={this.handleTreeNodeClick} isActive={this.state.selected} styles={styles} />\r\n  </div>\r\n     );\r\n  }\r\n}\r\n \r\nDynamicTree.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n  data: PropTypes.array\r\n}\r\n\r\nexport default DynamicTree;\r\n"],"names":["TreeComponent","props","state","nodeData","showIcon","isActive","render","length","React","textAlign","id","open","styles","node","content","selected","color","treeNodeClick","title","parentNode","childNodes","map","currentNode","index","Component","propTypes","PropTypes","string","array","leaf","cursor","display","icon","width","height","marginLeft","DynamicTree","handleTreeNodeClick","e","setState","onClick","bind","data"],"mappings":"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"}