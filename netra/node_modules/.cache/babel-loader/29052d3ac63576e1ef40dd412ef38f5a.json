{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = dragOffset;\nexports.getSourceClientOffset = getSourceClientOffset;\nexports.getDifferenceFromInitialOffset = getDifferenceFromInitialOffset;\n\nvar _dragDrop = require('../actions/dragDrop');\n\nvar initialState = {\n  initialSourceClientOffset: null,\n  initialClientOffset: null,\n  clientOffset: null\n};\n\nfunction areOffsetsEqual(offsetA, offsetB) {\n  if (offsetA === offsetB) {\n    return true;\n  }\n\n  return offsetA && offsetB && offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n}\n\nfunction dragOffset() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case _dragDrop.BEGIN_DRAG:\n      return {\n        initialSourceClientOffset: action.sourceClientOffset,\n        initialClientOffset: action.clientOffset,\n        clientOffset: action.clientOffset\n      };\n\n    case _dragDrop.HOVER:\n      if (areOffsetsEqual(state.clientOffset, action.clientOffset)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        clientOffset: action.clientOffset\n      });\n\n    case _dragDrop.END_DRAG:\n    case _dragDrop.DROP:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nfunction getSourceClientOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset,\n      initialSourceClientOffset = state.initialSourceClientOffset;\n\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n    return null;\n  }\n\n  return {\n    x: clientOffset.x + initialSourceClientOffset.x - initialClientOffset.x,\n    y: clientOffset.y + initialSourceClientOffset.y - initialClientOffset.y\n  };\n}\n\nfunction getDifferenceFromInitialOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset;\n\n  if (!clientOffset || !initialClientOffset) {\n    return null;\n  }\n\n  return {\n    x: clientOffset.x - initialClientOffset.x,\n    y: clientOffset.y - initialClientOffset.y\n  };\n}","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/node_modules/dnd-core/lib/reducers/dragOffset.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","dragOffset","getSourceClientOffset","getDifferenceFromInitialOffset","_dragDrop","require","initialState","initialSourceClientOffset","initialClientOffset","clientOffset","areOffsetsEqual","offsetA","offsetB","x","y","state","undefined","action","type","BEGIN_DRAG","sourceClientOffset","HOVER","END_DRAG","DROP"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n\tvalue: true\r\n});\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nexports.default = dragOffset;\r\nexports.getSourceClientOffset = getSourceClientOffset;\r\nexports.getDifferenceFromInitialOffset = getDifferenceFromInitialOffset;\r\n\r\nvar _dragDrop = require('../actions/dragDrop');\r\n\r\nvar initialState = {\r\n\tinitialSourceClientOffset: null,\r\n\tinitialClientOffset: null,\r\n\tclientOffset: null\r\n};\r\n\r\nfunction areOffsetsEqual(offsetA, offsetB) {\r\n\tif (offsetA === offsetB) {\r\n\t\treturn true;\r\n\t}\r\n\treturn offsetA && offsetB && offsetA.x === offsetB.x && offsetA.y === offsetB.y;\r\n}\r\n\r\nfunction dragOffset() {\r\n\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\r\n\tvar action = arguments[1];\r\n\r\n\tswitch (action.type) {\r\n\t\tcase _dragDrop.BEGIN_DRAG:\r\n\t\t\treturn {\r\n\t\t\t\tinitialSourceClientOffset: action.sourceClientOffset,\r\n\t\t\t\tinitialClientOffset: action.clientOffset,\r\n\t\t\t\tclientOffset: action.clientOffset\r\n\t\t\t};\r\n\t\tcase _dragDrop.HOVER:\r\n\t\t\tif (areOffsetsEqual(state.clientOffset, action.clientOffset)) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\treturn _extends({}, state, {\r\n\t\t\t\tclientOffset: action.clientOffset\r\n\t\t\t});\r\n\t\tcase _dragDrop.END_DRAG:\r\n\t\tcase _dragDrop.DROP:\r\n\t\t\treturn initialState;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nfunction getSourceClientOffset(state) {\r\n\tvar clientOffset = state.clientOffset,\r\n\t    initialClientOffset = state.initialClientOffset,\r\n\t    initialSourceClientOffset = state.initialSourceClientOffset;\r\n\r\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\r\n\t\treturn null;\r\n\t}\r\n\treturn {\r\n\t\tx: clientOffset.x + initialSourceClientOffset.x - initialClientOffset.x,\r\n\t\ty: clientOffset.y + initialSourceClientOffset.y - initialClientOffset.y\r\n\t};\r\n}\r\n\r\nfunction getDifferenceFromInitialOffset(state) {\r\n\tvar clientOffset = state.clientOffset,\r\n\t    initialClientOffset = state.initialClientOffset;\r\n\r\n\tif (!clientOffset || !initialClientOffset) {\r\n\t\treturn null;\r\n\t}\r\n\treturn {\r\n\t\tx: clientOffset.x - initialClientOffset.x,\r\n\t\ty: clientOffset.y - initialClientOffset.y\r\n\t};\r\n}"]},"metadata":{},"sourceType":"script"}