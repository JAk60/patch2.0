{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\TaskDashboard\\\\TaskDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; // import styles from \"./TaskDashboard.module.css\";\n\nimport { InputLabel, TextField, makeStyles, Button, Switch, Input } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Label, ReferenceLine } from 'recharts'; // import { arr,arr2 } from \"./data\";\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport styles from \"./tDashboard.module.css\";\nimport moment from \"moment\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Loader from \"react-loader-spinner\";\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\"; // import RenderParallelComponent from \"../systen_configuration/redundancy/RenderParallelComponent\";\n\nimport RenderMultipleComponent from \"./TaskRenderMultipleComponent\";\nimport { taskActions } from \"../../store/taskStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MissionData = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.missionData,\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.target,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-target\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#374c93\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \", \"Target: \", props.mission.target, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actual,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-shield-check\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#f8f8f8\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M9 12l2 2l4 -4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \"Actual:\", props.mission.actual.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [data.name, \" \", data.rel.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probabilityHead,\n        children: \"Probability of Achieving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probability,\n        children: props.mission.actual.map(data => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data.name, \" \", data.prob.toFixed(2) == 100 ? \">99%\" : `${data.prob.toFixed(2)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MissionData;\n\nconst TaskDashboard = () => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [missionProfileData, setMissionData] = useState([]);\n  const [rowState, setRows] = useState([]);\n  const dispatch = useDispatch();\n  let ParallelIds = [];\n\n  const setParallelIds = d => {\n    console.log(\"This is shit!!\");\n    console.log(d);\n    ParallelIds = d;\n  };\n\n  const [shipOption, setshipOption] = useState([]);\n  const [taskOption, settaskOption] = useState([]);\n  const [missionOption, setmissionOption] = useState([]);\n  const [taskShipNameOption, settaskShipNameOption] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTaskShip, setselectedTaskShip] = useState(\"\");\n  const [selectedTaskName, setselectedTaskName] = useState(\"\");\n  const [selectedShipName, setselectedShipName] = useState(\"\"); // Reliability Dashboard\n\n  const [showSubsystem, setSubSystem] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isCardFlipped, setCardFlipped] = useState(false);\n  const [currentMission, setMission] = useState(0);\n  const [eqDataOption, setEqDataOption] = useState([]);\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n  const [selectedEqName, setEquipmentName] = useState(null);\n  const [entireData, setentireData] = useState(null); // const [selectedShipName, setShipName] = useState(null);\n\n  const [selectedMissionName, setMissionName] = useState(null);\n  const [graphData, setGraphData] = useState([]);\n  const [missionPhaseGraphData, setMissionPhaseGraphData] = useState([]);\n  const currentShip = useSelector(state => state.taskData.currentShip);\n  const currentTaskName = useSelector(state => state.taskData.currentTaskName);\n  const [subSystemData, setSubSystemData] = useState([]);\n  const [eventInfo, setEventInfo] = useState(null);\n  const [cardData, setCardData] = useState(null);\n  const missionName = useRef();\n  const thReliab = useRef();\n\n  const handleStartDateChange = date => {\n    setStartDate(date);\n  };\n\n  const [endDate, setEndDate] = useState(new Date());\n\n  const handleEndDateChange = date => {\n    setEndDate(date);\n  };\n\n  const ImportColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"missionType\",\n    headerName: \"Mission Type\",\n    headerTooltip: \"Mission Type\",\n    cellEditor: \"agSelectCellEditor\",\n    checkboxSelection: true,\n    cellEditorParams: {\n      values: [\"\", \"Harbour\", \"Entry Leaving Harbour\", \"Cruise\", \"Defense Station\", \"Action Station\"]\n    },\n    width: \"220\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"duration\",\n    headerName: \"Duration\",\n    headerTooltip: \"Duration\",\n    type: \"number\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"component\",\n    headerName: \"Select Component for Mission\",\n    headerTooltip: \"Select Component for Mission\" // cellEditor=\"agSelectCellEditor\"\n    ,\n    cellEditorFramework: RenderMultipleComponent,\n    cellEditorParams: {\n      setParallelIds: setParallelIds,\n      label: \"Select Component for Mission\",\n      isMultiple: true,\n      currentTask: selectedTaskName\n    } //onCellClicked={onCellChanged}\n    ,\n    width: \"220\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 3\n  }, this)];\n\n  const AddRow = () => {\n    const defaultRow = [{\n      id: uuidv4(),\n      duration: 0,\n      missionType: \"\",\n      components: []\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n  };\n\n  const resetRow = () => {\n    // rowState\n    gridApi.resetRow();\n  };\n\n  const deleteRows = () => {\n    debugger;\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    let allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    setMissionData(allRowData); // console.log(selectedRows);\n  };\n\n  const handleEventCheck = () => {\n    let start = moment(startDate).subtract(1, \"day\");\n    let end = moment(endDate).add(1, \"day\");\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\n    console.log(total);\n    let days = {\n      working: 0,\n      down: 0,\n      maintenance: 0,\n      total: total\n    };\n    events.forEach(event => {\n      if (event.start < end && event.end > start) {\n        if (event.start >= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start >= start && event.end >= end) {\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end >= end) {\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        }\n      }\n    });\n    setEventInfo(days);\n    setCardFlipped(!isCardFlipped);\n  };\n\n  useEffect(() => {\n    fetch(\"/task_dash_populate\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      const mission_data = data[\"missionData\"];\n      const taskNames = data[\"tasks\"];\n      const taskData = data[\"tasks_data\"];\n      const task_ship_name = data[\"ship_name\"];\n      setmissionOption(mission_data);\n      setentireData(data); // settaskOption(taskNames);      \n\n      settaskShipNameOption(task_ship_name);\n      dispatch(taskActions.onLoad({\n        'taskData': data\n      }));\n    });\n  }, []);\n  const dropDownStyle = makeStyles({\n    root: {\n      paddingLeft: 10,\n      background: \"#fff\",\n      border: \"1px solid #0263a1\",\n      borderRadius: \"5px\",\n      width: \"320px\",\n      minHeight: \"40px\",\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  });\n  const classes = dropDownStyle();\n  let arr = [];\n  let arr2 = [];\n\n  for (let i = 0; i < 50; i++) {\n    // const maxDate = Date.now();\n    // const timestamp = Math.floor(Math.random() * maxDate);\n    arr = [...arr, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    }];\n    arr2 = [...arr2, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (75 - 30 + 1)) + 30\n    }];\n  }\n\n  const [showGraph, setShowGraph] = useState(false);\n\n  const onSubmitHandler = () => {\n    // setMission(0);\n    if (missionProfileData.length > 0) {\n      const data = {\n        \"taskName\": currentTaskName,\n        \"shipName\": currentShip,\n        \"selectedMission\": missionName.current.value,\n        \"missionProfileData\": missionProfileData\n      };\n      fetch(\"/task_rel\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(d => {\n        debugger;\n        let phase_data = d[\"phase_data\"];\n        d = d[\"main_data\"]; // console.log(d);\n\n        if (d.length > 0) {\n          let newGraphData = [];\n          let newSubSystem = [];\n          let newCardData = [];\n          console.log(d);\n          let mid = 0;\n          let missionData = d[mid][data[\"selectedMission\"]];\n          newGraphData = [...newGraphData, {\n            name: \"Target Reliability\",\n            Reliability: thReliab.current.value\n          }];\n          newCardData[mid] = { ...newCardData[mid],\n            name: data[\"selectedMission\"],\n            target: thReliab.current.value\n          }; // missionOption.forEach((element) => {\n          //   debugger;\n          //   if (element.missionName === data[\"selectedMission\"]) {\n          //     newCardData[mid] = {\n          //       ...newCardData[mid],\n          //       name: data[\"selectedMission\"],\n          //       target: element.tar_rel,\n          //     };\n          //   }\n          // })//missionOption\n\n          data.taskName.forEach(taskN => {\n            debugger;\n            let shipData = missionData[taskN.name]; //console.log(shipData);\n\n            let actual = [];\n            actual[0] = {\n              name: taskN.name,\n              rel: Math.round(100 * shipData[0].rel, 2),\n              prob: Math.round(100 * shipData[0].prob_ac, 2)\n            };\n            newCardData[mid].actual = actual;\n            newGraphData = [...newGraphData, {\n              name: `${taskN.name}`,\n              Reliability: Math.round(100 * shipData[0].rel, 2)\n            }];\n            let eqptData = shipData[0];\n            eqptData.child.forEach((child, cid) => {\n              newSubSystem[cid] = { ...newSubSystem[cid],\n                name: child.name,\n                [taskN.name]: Math.round(100 * child.rel, 2)\n              };\n            });\n          }); // More arrays populate\n          // data.selectedMission.forEach((mission,mid) => {\n          //   debugger;\n          // })\n\n          debugger;\n          let phaseGraphData = []; // let keys = Object.keys(phase_data);\n\n          phase_data.forEach((item, cid) => {\n            phaseGraphData.push({\n              name: item[\"missionTypeName\"],\n              Reliability: item[\"rel\"]\n            });\n          });\n          setGraphData(newGraphData);\n          setMissionPhaseGraphData(phaseGraphData);\n          setSubSystemData(newSubSystem);\n          setCardData(newCardData);\n          setLoading(false);\n        }\n      });\n    } else {\n      // alert(\"Please add Mission Definition!!\")\n      setSnackBarMessage({\n        severity: \"error\",\n        message: \"Please Select data and Enter Mission Phase Data!!\",\n        showSnackBar: true\n      });\n    }\n  };\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  };\n\n  const updateFinalRowData = d => {\n    setMissionData(d);\n  };\n\n  const shipNameChange = (event, value) => {\n    debugger;\n    let tt = entireData;\n    let sNames = tt[\"task_ship_name\"][value[0][\"name\"]];\n    let fNames = [];\n    sNames.forEach(s => fNames.push({\n      \"name\": s\n    }));\n    settaskOption(fNames); // setselectedTaskShip(value)\n\n    dispatch(taskActions.updateCurrentShip({\n      'ship': value[0].name\n    }));\n  };\n\n  const TaskNameChange = (event, value) => {\n    dispatch(taskActions.updateCurrentTask({\n      'task': value[0].name\n    }));\n  };\n\n  const minThreshold = 45;\n  const maxThreshold = 60;\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Ship Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskShipNameOption,\n            getOptionLabel: option => option.name,\n            onChange: shipNameChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskOption,\n            getOptionLabel: option => option.name,\n            onChange: TaskNameChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Mission Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.missionName,\n            ref: missionName // onChange={onHandleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Threshold Reliability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.missionName,\n            ref: thReliab // onChange={onHandleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: \"2rem\"\n          },\n          onClick: onSubmitHandler,\n          children: [console.log(arr[arr.length - 1][\"uv\"] + \"hello2\"), \"Submit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          columnDefs: ImportColumns,\n          setGrid: setGridApi,\n          gridApi: gridApi,\n          rowData: rowState,\n          tableUpdate: updateFinalRowData,\n          tableSize: 290\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tableFooter,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => resetRow(),\n            children: \"Save this Task for Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => AddRow(),\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: 10\n            },\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => deleteRows(),\n            children: \"Delete Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.midSection,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#86a0ff\",\n          height: 300,\n          width: 300,\n          style: {\n            marginTop: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this), graphData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.midSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rchart,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.relChart,\n                children: graphData && /*#__PURE__*/_jsxDEV(ReliabilityChart, {\n                  data: graphData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.compareMission,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 23\n                  }, this), \" Compare with other missions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 21\n                }, this), cardData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: [/*#__PURE__*/_jsxDEV(MissionSlider, {\n                    missions: cardData,\n                    currentMission: currentMission,\n                    setMission: setMission\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(MissionData, {\n                    mission: cardData[currentMission]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.showSubsystem,\n                    children: [\"Show Subsytem Level\", \" \", /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: showSubsystem,\n                      disabled: !subSystemData.length,\n                      onChange: () => {\n                        setSubSystem(!showSubsystem);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 808,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 806,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: \"Select Missions to compare\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rchart,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.relChart,\n                children: missionPhaseGraphData && /*#__PURE__*/_jsxDEV(ReliabilityChart, {\n                  data: missionPhaseGraphData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.compareMission,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 23\n                  }, this), \" Compare with other missions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 21\n                }, this), cardData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: [/*#__PURE__*/_jsxDEV(MissionSlider, {\n                    missions: cardData,\n                    currentMission: currentMission,\n                    setMission: setMission\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(MissionData, {\n                    mission: cardData[currentMission]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: \"Select Missions to compare\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDashboard, \"zvZ1+qzU0icoTMyYi9PQPXSpmX4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = TaskDashboard;\nexport default TaskDashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MissionData\");\n$RefreshReg$(_c2, \"TaskDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/TaskDashboard/TaskDashboard.js"],"names":["React","useState","useEffect","useRef","InputLabel","TextField","makeStyles","Button","Switch","Input","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Label","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","AgGridColumn","MomentUtils","Navigation","styles","moment","CustomSelect","ReliabilityChart","MissionSlider","AddCircleOutlineIcon","Autocomplete","Loader","EventCalendar","data","subSystemLevelData","events","mainData","ReactCardFlip","Table","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","RenderMultipleComponent","taskActions","useDispatch","useSelector","MissionData","props","missionData","style","target","mission","actual","map","name","rel","toFixed","textAlign","probabilityHead","probability","prob","TaskDashboard","gridApi","setGridApi","missionProfileData","setMissionData","rowState","setRows","dispatch","ParallelIds","setParallelIds","d","console","log","shipOption","setshipOption","taskOption","settaskOption","missionOption","setmissionOption","taskShipNameOption","settaskShipNameOption","loading","setLoading","selectedTaskShip","setselectedTaskShip","selectedTaskName","setselectedTaskName","selectedShipName","setselectedShipName","showSubsystem","setSubSystem","startDate","setStartDate","Date","isCardFlipped","setCardFlipped","currentMission","setMission","eqDataOption","setEqDataOption","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","selectedEqName","setEquipmentName","entireData","setentireData","selectedMissionName","setMissionName","graphData","setGraphData","missionPhaseGraphData","setMissionPhaseGraphData","currentShip","state","taskData","currentTaskName","subSystemData","setSubSystemData","eventInfo","setEventInfo","cardData","setCardData","missionName","thReliab","handleStartDateChange","date","endDate","setEndDate","handleEndDateChange","ImportColumns","values","label","isMultiple","currentTask","AddRow","defaultRow","id","duration","missionType","components","applyTransaction","add","resetRow","deleteRows","selectedRows","getSelectedRows","remove","allRowData","forEachNode","node","push","handleEventCheck","start","subtract","end","total","days","working","down","maintenance","forEach","event","diff","status","Math","floor","fetch","method","headers","Accept","then","res","json","mission_data","taskNames","task_ship_name","onLoad","dropDownStyle","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","classes","arr","arr2","i","getTime","random","toISOString","slice","uv","showGraph","setShowGraph","onSubmitHandler","length","current","value","body","JSON","stringify","phase_data","newGraphData","newSubSystem","newCardData","mid","Reliability","taskName","taskN","shipData","round","prob_ac","eqptData","child","cid","phaseGraphData","item","onHandleSnackClose","updateFinalRowData","shipNameChange","tt","sNames","fNames","s","updateCurrentShip","TaskNameChange","updateCurrentTask","minThreshold","maxThreshold","mprofile","fontWeight","color","fontSize","marginBottom","option","params","InputProps","disableUnderline","marginTop","table","tableFooter","marginLeft","midSection","rchart","content","relChart","compareMission","display","alignItems","missionbox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n// import styles from \"./TaskDashboard.module.css\";\r\nimport {  InputLabel, TextField,makeStyles,Button, Switch, Input} from \"@material-ui/core\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Label,ReferenceLine } from 'recharts';\r\n// import { arr,arr2 } from \"./data\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport styles from \"./tDashboard.module.css\";\r\nimport moment from \"moment\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\r\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\r\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n// import RenderParallelComponent from \"../systen_configuration/redundancy/RenderParallelComponent\";\r\nimport RenderMultipleComponent from \"./TaskRenderMultipleComponent\";\r\nimport { taskActions } from \"../../store/taskStore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst MissionData = (props) => {\r\n  \r\n  return (\r\n    <div className={styles.missionData} style={props.style}>\r\n      <div className={styles.target}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-target\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#374c93\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"1\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"9\" />\r\n        </svg>{\" \"}\r\n        Target: {props.mission.target}%\r\n      </div>\r\n      <div className={styles.actual}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-shield-check\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#f8f8f8\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <path d=\"M9 12l2 2l4 -4\" />\r\n          <path d=\"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\" />\r\n        </svg>\r\n        Actual:\r\n        {props.mission.actual.map((data) => {\r\n          return (\r\n            <>\r\n              <div>\r\n                {data.name} {data.rel.toFixed(2)}%\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <div className={styles.probabilityHead}>Probability of Achieving</div>\r\n        <div className={styles.probability}>\r\n          {props.mission.actual.map((data) => {\r\n            return (\r\n              <>\r\n                <div>\r\n                  {data.name}{\" \"}\r\n                  {data.prob.toFixed(2) == 100\r\n                    ? \">99%\"\r\n                    : `${data.prob.toFixed(2)}%`}\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst TaskDashboard = () => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [missionProfileData, setMissionData] = useState([]);\r\n  const [rowState, setRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let ParallelIds = [];\r\n  const setParallelIds = (d) => {\r\n    console.log(\"This is shit!!\")\r\n    console.log(d)\r\n    ParallelIds = d;\r\n  };\r\n  \r\n  const [shipOption, setshipOption] = useState([]);\r\n  const [taskOption, settaskOption] = useState([]);\r\n  const [missionOption, setmissionOption] = useState([]);\r\n  const [taskShipNameOption, settaskShipNameOption] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedTaskShip, setselectedTaskShip] = useState(\"\");\r\n  const [selectedTaskName, setselectedTaskName] = useState(\"\");\r\n  const [selectedShipName, setselectedShipName] = useState(\"\");\r\n\r\n  // Reliability Dashboard\r\n  const [showSubsystem, setSubSystem] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const [isCardFlipped, setCardFlipped] = useState(false);\r\n\r\n  const [currentMission, setMission] = useState(0);\r\n  const [eqDataOption, setEqDataOption] = useState([]);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const [selectedEqName, setEquipmentName] = useState(null);\r\n  const [entireData, setentireData] = useState(null);\r\n  // const [selectedShipName, setShipName] = useState(null);\r\n  const [selectedMissionName, setMissionName] = useState(null);\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const [missionPhaseGraphData, setMissionPhaseGraphData] = useState([]);\r\n  const currentShip = useSelector((state) => state.taskData.currentShip);\r\n  const currentTaskName = useSelector((state) => state.taskData.currentTaskName);\r\n  const [subSystemData, setSubSystemData] = useState([]);\r\n  const [eventInfo, setEventInfo] = useState(null);\r\n  const [cardData, setCardData] = useState(null);\r\n  const missionName = useRef()\r\n  const thReliab = useRef()\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n  };\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n  };\r\n  const ImportColumns = [\r\n    <AgGridColumn\r\n      field=\"missionType\"\r\n      headerName=\"Mission Type\"\r\n      headerTooltip=\"Mission Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      checkboxSelection={true}\r\n      cellEditorParams={{\r\n        values: [\r\n          \"\",\r\n          \"Harbour\",\r\n          \"Entry Leaving Harbour\",\r\n          \"Cruise\",\r\n          \"Defense Station\",\r\n          \"Action Station\",\r\n        ],\r\n      }}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n    field=\"duration\"\r\n    headerName=\"Duration\"\r\n    headerTooltip=\"Duration\"\r\n    type=\"number\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  <AgGridColumn\r\n      field=\"component\"\r\n      headerName=\"Select Component for Mission\"\r\n      headerTooltip=\"Select Component for Mission\"\r\n      // cellEditor=\"agSelectCellEditor\"\r\n      cellEditorFramework={RenderMultipleComponent}\r\n      cellEditorParams={{\r\n        setParallelIds: setParallelIds,\r\n        label: \"Select Component for Mission\",\r\n        isMultiple: true,\r\n        currentTask: selectedTaskName\r\n      }}\r\n      //onCellClicked={onCellChanged}\r\n      width=\"220\"\r\n      editable={true}\r\n    />\r\n  ];\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: uuidv4(),\r\n        duration: 0,\r\n        missionType: \"\",\r\n        components: []\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n  };\r\n  const resetRow = () => {\r\n    // rowState\r\n    gridApi.resetRow()\r\n  }\r\n  const deleteRows = () => {\r\n    debugger;\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    setMissionData(allRowData)\r\n    // console.log(selectedRows);\r\n  };\r\n\r\n  const handleEventCheck = () => {\r\n    let start = moment(startDate).subtract(1, \"day\");\r\n    let end = moment(endDate).add(1, \"day\");\r\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\r\n    console.log(total);\r\n    let days = { working: 0, down: 0, maintenance: 0, total: total };\r\n    events.forEach((event) => {\r\n      if (event.start < end && event.end > start) {\r\n        if (event.start >= start && event.end <= end) {\r\n          let diff =\r\n            (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start >= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end <= end) {\r\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        }\r\n      }\r\n    });\r\n    setEventInfo(days);\r\n    setCardFlipped(!isCardFlipped);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"/task_dash_populate\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const mission_data = data[\"missionData\"];\r\n        const taskNames = data[\"tasks\"]\r\n        const taskData = data[\"tasks_data\"]\r\n        const task_ship_name = data[\"ship_name\"]\r\n        setmissionOption(mission_data);\r\n        setentireData(data)\r\n        // settaskOption(taskNames);      \r\n        settaskShipNameOption(task_ship_name)\r\n        dispatch(taskActions.onLoad({'taskData': data}))\r\n      });\r\n  }, []);\r\n\r\n\r\n  const dropDownStyle = makeStyles({\r\n    root: {\r\n      paddingLeft: 10,\r\n      background: \"#fff\",\r\n      border: \"1px solid #0263a1\",\r\n      borderRadius: \"5px\",\r\n      width: \"320px\",\r\n      minHeight: \"40px\",\r\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    inputRoot:{\r\n      width: '100%'\r\n    },\r\n  });\r\n  const classes=dropDownStyle();\r\n  let arr=[]\r\n  let arr2=[]\r\n  for(let i=0;i<50;i++){\r\n    // const maxDate = Date.now();\r\n    // const timestamp = Math.floor(Math.random() * maxDate);\r\n    arr=[...arr,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (80 - 30 + 1)) + 30}]\r\n\r\n    arr2=[...arr2,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (75 - 30 + 1)) + 30}]\r\n  }\r\n  const [showGraph,setShowGraph]=useState(false);\r\n\r\n  const onSubmitHandler = () => { \r\n    // setMission(0);\r\n    if(missionProfileData.length > 0){\r\n      const data = {\"taskName\": currentTaskName, \"shipName\": currentShip,\r\n       \"selectedMission\": missionName.current.value, \"missionProfileData\": missionProfileData}\r\n      fetch(\"/task_rel\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((d) => {\r\n          debugger;\r\n          let phase_data = d[\"phase_data\"]\r\n          d = d[\"main_data\"]\r\n          // console.log(d);\r\n          if(d.length > 0){\r\n            let newGraphData = [];\r\n            let newSubSystem = [];\r\n            let newCardData = [];\r\n            console.log(d);\r\n            let mid = 0\r\n            let missionData = d[mid][data[\"selectedMission\"]];\r\n            newGraphData = [\r\n              ...newGraphData,\r\n              {\r\n                name: \"Target Reliability\",\r\n                Reliability: thReliab.current.value,\r\n              },\r\n            ];\r\n            newCardData[mid] = {\r\n              ...newCardData[mid],\r\n              name: data[\"selectedMission\"],\r\n              target: thReliab.current.value,\r\n            };\r\n              // missionOption.forEach((element) => {\r\n              //   debugger;\r\n              //   if (element.missionName === data[\"selectedMission\"]) {\r\n              //     newCardData[mid] = {\r\n              //       ...newCardData[mid],\r\n              //       name: data[\"selectedMission\"],\r\n              //       target: element.tar_rel,\r\n              //     };\r\n                  \r\n              //   }\r\n              // })//missionOption\r\n              data.taskName.forEach((taskN) => {\r\n                debugger;\r\n                let shipData = missionData[taskN.name];\r\n                //console.log(shipData);\r\n                let actual = []; \r\n                actual[0] = {\r\n                  name: taskN.name,\r\n                  rel: Math.round(100 * shipData[0].rel, 2) ,\r\n                  prob: Math.round(100 * shipData[0].prob_ac, 2),\r\n                };\r\n                newCardData[mid].actual = actual;\r\n                newGraphData = [\r\n                  ...newGraphData,\r\n                  { name: `${taskN.name}`, Reliability: Math.round(100 * shipData[0].rel, 2) },\r\n                ];\r\n  \r\n                let eqptData = shipData[0];\r\n                eqptData.child.forEach((child, cid) => {\r\n                    newSubSystem[cid] = {\r\n                      ...newSubSystem[cid],\r\n                      name: child.name,\r\n                      [taskN.name]: Math.round(100 * child.rel, 2),\r\n                    };\r\n                  });\r\n              });// More arrays populate\r\n            // data.selectedMission.forEach((mission,mid) => {\r\n            //   debugger;\r\n            // })\r\n            debugger;\r\n            let phaseGraphData = []\r\n            // let keys = Object.keys(phase_data);\r\n            phase_data.forEach((item, cid) => {\r\n              phaseGraphData.push({name: item[\"missionTypeName\"], Reliability: item[\"rel\"]})\r\n            })\r\n            setGraphData(newGraphData);\r\n            setMissionPhaseGraphData(phaseGraphData);\r\n                setSubSystemData(newSubSystem);\r\n                setCardData(newCardData);\r\n                setLoading(false);\r\n  \r\n          }\r\n        });\r\n    }else{\r\n      // alert(\"Please add Mission Definition!!\")\r\n      setSnackBarMessage({\r\n        severity: \"error\",\r\n        message: \"Please Select data and Enter Mission Phase Data!!\",\r\n        showSnackBar: true,\r\n      });      \r\n    }\r\n    \r\n  };\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const updateFinalRowData = (d) => {\r\n    setMissionData(d);\r\n  };\r\n\r\n  const shipNameChange = (event, value) => {\r\n    debugger;\r\n    let tt = entireData;\r\n    let sNames = tt[\"task_ship_name\"][value[0][\"name\"]]\r\n    let fNames = []\r\n    sNames.forEach(s => fNames.push({\"name\": s}))\r\n    settaskOption(fNames)\r\n    // setselectedTaskShip(value)\r\n    dispatch(taskActions.updateCurrentShip({'ship': value[0].name}))\r\n  }\r\n  const TaskNameChange = (event, value) => {\r\n    dispatch(taskActions.updateCurrentTask({'task': value[0].name}))\r\n  }\r\n  const minThreshold=45\r\n  const maxThreshold=60\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n            <CustomSelect fields={['a','b','c','d','e']}/>\r\n              \r\n           \r\n            \r\n          </div> */}\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskShipNameOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {shipNameChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Task Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {TaskNameChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          \r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Select Mission\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={missionOption}\r\n              getOptionLabel={(option) => option.missionName}\r\n              onChange={(event, value) => setSelectedMission(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div> */}\r\n\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n               Mission Name\r\n            </InputLabel>\r\n\r\n            {/* <TextField ref={missionName}   id=\"outlined-basic\" variant=\"outlined\" /> */}\r\n            <input\r\n            className={styles.missionName}\r\n                    ref={missionName}\r\n                    // onChange={onHandleChange}\r\n                  ></input>\r\n            \r\n          </div>\r\n\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n               Threshold Reliability\r\n            </InputLabel>\r\n\r\n            {/* <TextField ref={missionName}   id=\"outlined-basic\" variant=\"outlined\" /> */}\r\n            <input\r\n            className={styles.missionName}\r\n                    ref={thReliab}\r\n                    // onChange={onHandleChange}\r\n                  ></input>\r\n            \r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginTop: \"2rem\",\r\n            }}\r\n            onClick={onSubmitHandler} \r\n          >{console.log(arr[arr.length-1][\"uv\"]+\"hello2\")}\r\n            Submit\r\n          </Button>\r\n         \r\n          \r\n        </div>\r\n        \r\n        <div className={styles.table}>\r\n        <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n        tableSize= {290}\r\n      />\r\n      <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => resetRow()}\r\n            >\r\n              Save this Task for Comparison\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div>\r\n        {/* <div style={{ width: \"300px\" }}>\r\n        <TextField id=\"outlined-basic\" label=\"Mission Name\" \r\n        variant=\"outlined\" defaultValue=\"Temp Mission\" />\r\n          </div>\r\n        <div style={{ width: \"300px\" }}>\r\n        <TextField id=\"outlined-basic\" label=\"Harbour Duration\"\r\n         variant=\"outlined\" defaultValue=\"0\" type=\"number\"   />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Entry Leaving Harbour Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Cruise Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Defence Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Action Duration\" \r\n          variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div> */}\r\n        \r\n        </div>\r\n        \r\n            {/* {showGraph?<div className={styles.midSection}>\r\n\r\n            <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 1</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  \r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                 \r\n                </LineChart>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 2</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                  \r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 3</div>\r\n                <LineChart width={550} height={300} data={arr}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n            \r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 4</div>\r\n                <LineChart width={500} height={300} data={arr}>\r\n                \r\n                <XAxis dataKey=\"name\" label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} tick={false} />\r\n                 \r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n\r\n                  \r\n                  <ReferenceLine y={40} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n                \r\n    \r\n                 `\r\n                </div>\r\n              </div>\r\n\r\n              \r\n             \r\n            </div>:null} */}\r\n            \r\n            {loading && (\r\n          <div className={styles.midSection}>\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#86a0ff\"\r\n              height={300}\r\n              width={300}\r\n              style={{ marginTop: 100 }}\r\n            />\r\n          </div>\r\n        )}\r\n        {graphData.length ? (\r\n          <>\r\n            <div className={styles.midSection}>\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                  <div className={styles.relChart}>\r\n                    {graphData && <ReliabilityChart data={graphData} />}\r\n                  </div>\r\n                  <div className={styles.compareMission}>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <AddCircleOutlineIcon /> Compare with other missions\r\n                    </div>\r\n                    {cardData ? (\r\n                      <div className={styles.missionbox}>\r\n                        {/* <div className={styles.missionName}>Mission B</div> */}\r\n                        <MissionSlider\r\n                          missions={cardData}\r\n                          currentMission={currentMission}\r\n                          setMission={setMission}\r\n                        />\r\n                        <MissionData mission={cardData[currentMission]} />\r\n                        <div className={styles.showSubsystem}>\r\n                          Show Subsytem Level{\" \"}\r\n                          <Switch\r\n                            checked={showSubsystem}\r\n                            disabled={!subSystemData.length}\r\n                            onChange={() => {\r\n                              setSubSystem(!showSubsystem);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className={styles.missionbox}>\r\n                        Select Missions to compare\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* This is for another graph */}\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                  <div className={styles.relChart}>\r\n                    {missionPhaseGraphData && <ReliabilityChart data={missionPhaseGraphData} />}\r\n                  </div>\r\n                  <div className={styles.compareMission}>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <AddCircleOutlineIcon /> Compare with other missions\r\n                    </div>\r\n                    {cardData ? (\r\n                      <div className={styles.missionbox}>\r\n                        {/* <div className={styles.missionName}>Mission B</div> */}\r\n                        <MissionSlider\r\n                          missions={cardData}\r\n                          currentMission={currentMission}\r\n                          setMission={setMission}\r\n                        />\r\n                        <MissionData mission={cardData[currentMission]} />\r\n                      </div>\r\n                    ) : (\r\n                      <div className={styles.missionbox}>\r\n                        Select Missions to compare\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className={styles.subSystemLevel}>\r\n              {showSubsystem && (\r\n                <div className={styles.subSystemContent}>\r\n                  <div className={styles.subSystemLevelChart}>\r\n                    <div>\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          class=\"icon icon-tabler icon-tabler-adjustments\"\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke-width=\"1.5\"\r\n                          stroke=\"#0d1a45\"\r\n                          fill=\"none\"\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                        >\r\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                          <circle cx=\"6\" cy=\"10\" r=\"2\" />\r\n                          <line x1=\"6\" y1=\"4\" x2=\"6\" y2=\"8\" />\r\n                          <line x1=\"6\" y1=\"12\" x2=\"6\" y2=\"20\" />\r\n                          <circle cx=\"12\" cy=\"16\" r=\"2\" />\r\n                          <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"14\" />\r\n                          <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"20\" />\r\n                          <circle cx=\"18\" cy=\"7\" r=\"2\" />\r\n                          <line x1=\"18\" y1=\"4\" x2=\"18\" y2=\"5\" />\r\n                          <line x1=\"18\" y1=\"9\" x2=\"18\" y2=\"20\" />\r\n                        </svg>\r\n                        Sub System Level Indicator\r\n                      </div>\r\n                    </div>\r\n                    <BarGraph data={subSystemData} />\r\n                  </div>\r\n                  <div style={{ width: \"20%\" }}>\r\n                    <MissionData\r\n                      mission={cardData[currentMission]}\r\n                      style={{ height: 200 }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div> */}\r\n          </>\r\n        ) : null}\r\n\r\n        \r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default TaskDashboard;\r\n"]},"metadata":{},"sourceType":"module"}