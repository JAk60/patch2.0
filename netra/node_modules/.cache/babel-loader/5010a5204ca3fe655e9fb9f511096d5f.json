{"ast":null,"code":"var _jsxFileName = \"E:\\\\NETRA PROJECT\\\\Netra\\\\netra\\\\src\\\\pages\\\\PM OPTIM\\\\OptiQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid } from \"@material-ui/core\";\nimport styles from \"./pm.module.css\";\nimport OptTable from \"./OptTable\";\nimport GroupTable from \"./GroupTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptiQ = ({\n  questions,\n  name,\n  currQ,\n  option,\n  eta,\n  beta\n}) => {\n  _s();\n\n  var _currQ$columns, _currQ$columns2;\n\n  const [answers, setAnswers] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [n, setN] = useState(0);\n\n  const handleAnswerChange = (event, questionId) => {\n    const {\n      value\n    } = event.target;\n    setAnswers(prevAnswers => ({ ...prevAnswers,\n      [questionId]: parseFloat(value)\n    }));\n  };\n\n  const handleAddRow = e => {\n    e.preventDefault();\n    const newRow = { ...answers,\n      method: name\n    };\n    setTableData(prevTableData => [...prevTableData, newRow]);\n    setN(newRow === null || newRow === void 0 ? void 0 : newRow.n);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    className: styles.mainOp,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userSele,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \" Questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [questions === null || questions === void 0 ? void 0 : questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: question.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), question.type === \"text\" && /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: answers[question.id] || \"\",\n              onChange: event => handleAnswerChange(event, question.id),\n              required: question.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      className: styles.overflowHidden,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.OptTable,\n        children: n ? /*#__PURE__*/_jsxDEV(GroupTable, {\n          n: n,\n          columnDefs: (_currQ$columns = currQ.columns) === null || _currQ$columns === void 0 ? void 0 : _currQ$columns.map(column => ({\n            headerName: column,\n            field: column\n          })),\n          tData: tableData // Use tableData as the rowData for the OptTable\n          ,\n          height: 200,\n          answers: answers,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OptTable, {\n          columnDefs: (_currQ$columns2 = currQ.columns) === null || _currQ$columns2 === void 0 ? void 0 : _currQ$columns2.map(column => ({\n            headerName: column,\n            field: column\n          })),\n          rowData: tableData,\n          setRowData: setTableData // Use tableData as the rowData for the OptTable\n          ,\n          height: 200,\n          answers: answers,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OptiQ, \"6ieD7V1OBji4VvdNlfwFB9nEbXU=\");\n\n_c = OptiQ;\nexport default OptiQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptiQ\");","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/src/pages/PM OPTIM/OptiQ.js"],"names":["React","useState","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","styles","OptTable","GroupTable","OptiQ","questions","name","currQ","option","eta","beta","answers","setAnswers","tableData","setTableData","n","setN","handleAnswerChange","event","questionId","value","target","prevAnswers","parseFloat","handleAddRow","e","preventDefault","newRow","method","prevTableData","mainOp","userSele","map","question","text","type","id","required","overflowHidden","columns","column","headerName","field"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid } from \"@material-ui/core\";\r\nimport styles from \"./pm.module.css\";\r\nimport OptTable from \"./OptTable\";\r\nimport GroupTable from \"./GroupTable\";\r\n\r\nconst OptiQ = ({ questions, name, currQ, option, eta, beta }) => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [n, setN] = useState(0);\r\n\r\n  const handleAnswerChange = (event, questionId) => {\r\n    const { value } = event.target;\r\n    setAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionId]: parseFloat(value),\r\n    }));\r\n  };\r\n\r\n  const handleAddRow = (e) => {\r\n    e.preventDefault();\r\n    const newRow = { ...answers, method: name };\r\n    setTableData((prevTableData) => [...prevTableData, newRow]);\r\n    setN(newRow?.n);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} className={styles.mainOp}>\r\n      <Grid item xs={12} md={6}>\r\n        <div className={styles.userSele}>\r\n          <h3>{name} Questions</h3>\r\n          <form>\r\n            {questions?.map((question) => (\r\n              <div key={question.id}>\r\n                <label>{question.text}</label>\r\n                {question.type === \"text\" && (\r\n                  <TextField\r\n                    type=\"number\"\r\n                    value={answers[question.id] || \"\"}\r\n                    onChange={(event) => handleAnswerChange(event, question.id)}\r\n                    required={question.required}\r\n                  />\r\n                )}\r\n                {/* Add other input types (e.g., select, radio, checkbox) based on the question type */}\r\n              </div>\r\n            ))}\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleAddRow}>\r\n              Add Row\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={styles.overflowHidden}>\r\n        <div className={styles.OptTable}>\r\n          {n ? (\r\n            <GroupTable\r\n              n={n}\r\n              columnDefs={currQ.columns?.map((column) => ({\r\n                headerName: column,\r\n                field: column,\r\n              }))}\r\n              tData={tableData} // Use tableData as the rowData for the OptTable\r\n              height={200}\r\n              answers={answers}\r\n              name={name}\r\n            />\r\n          ) : (\r\n            <OptTable\r\n              columnDefs={currQ.columns?.map((column) => ({\r\n                headerName: column,\r\n                field: column,\r\n              }))}\r\n              rowData={tableData}\r\n              setRowData={setTableData} // Use tableData as the rowData for the OptTable\r\n              height={200}\r\n              answers={answers}\r\n              name={name}\r\n            />\r\n          )}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OptiQ;\r\n"]},"metadata":{},"sourceType":"module"}