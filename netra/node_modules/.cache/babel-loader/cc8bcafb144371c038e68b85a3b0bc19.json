{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\HEP\\\\EquipmentLevel\\\\EquipmentLevel.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport Table from \"../../../ui/Table/Table\";\nimport { ELcolumnDefs, ELrowData } from \"../HEPData\";\nimport styles from \"../HEP.module.css\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport { useSelector } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EquipmentLevelHEP = props => {\n  _s();\n\n  let systemData = useSelector(state => state.treeData.treeData);\n  systemData = systemData.filter(x => x.parent === null);\n  const phaseData = useSelector(state => state.phase.phase);\n  const mData = [\"Preventive\", \"Breakdown\"];\n  let rowData = [];\n  const rData = systemData.map((e, i) => {\n    phaseData.map((p_e, p_i) => {\n      mData.map((mE, mI) => {\n        if (p_e.MType === \"Qualitative\") {\n          rowData.push({\n            equipment: e.name,\n            phase: p_e.Status,\n            Maintenancepolicy: mE,\n            ATNominal: 100,\n            Lessthanrequired: 0,\n            Higherthanrequired: 0,\n            vhtr: 0,\n            Nominal: 100,\n            Low: 0,\n            Extreme: 0,\n            id: uuid()\n          });\n          return null;\n        } else {\n          rowData.push({\n            equipment: e.name,\n            phase: p_e.PhaseRange,\n            Maintenancepolicy: mE,\n            ATNominal: 100,\n            Lessthanrequired: 0,\n            Higherthanrequired: 0,\n            vhtr: 0,\n            Nominal: 100,\n            Low: 0,\n            Extreme: 0,\n            id: uuid()\n          });\n          return null;\n        }\n      });\n      return null;\n    });\n    return null;\n  });\n  const ELcolumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"equipment\",\n    headerName: \"Equipment\",\n    minWidth: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"phase\",\n    headerName: \"Phase Name\",\n    minWidth: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"Maintenancepolicy\",\n    headerName: \"Maintenance Policy\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: [\"Preventive\", \"Breakdown\"]\n    },\n    minWidth: 140,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    headerName: \"PSF-Available Time\",\n    children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"ATNominal\",\n      headerName: \"Nominal\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"Lessthanrequired\",\n      headerName: \"Less Than Required\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"Higherthanrequired\",\n      headerName: \"Higher than required\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"vhtr\",\n      headerName: \"Very High than required\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    headerName: \"PSF-Stress\",\n    children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"Nominal\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"Low\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"Extreme\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this)];\n\n  const updateFinalRowData = allRows => {\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.phaseTable,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: ELcolumnDefs,\n      rowData: rowData,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EquipmentLevelHEP, \"DyMs1qW8yqnSC2gEnhCDksGXyc8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = EquipmentLevelHEP;\nexport default EquipmentLevelHEP;\n\nvar _c;\n\n$RefreshReg$(_c, \"EquipmentLevelHEP\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/HEP/EquipmentLevel/EquipmentLevel.js"],"names":["Fragment","Table","ELcolumnDefs","ELrowData","styles","AgGridColumn","useSelector","v4","uuid","EquipmentLevelHEP","props","systemData","state","treeData","filter","x","parent","phaseData","phase","mData","rowData","rData","map","e","i","p_e","p_i","mE","mI","MType","push","equipment","name","Status","Maintenancepolicy","ATNominal","Lessthanrequired","Higherthanrequired","vhtr","Nominal","Low","Extreme","id","PhaseRange","values","updateFinalRowData","allRows","tableUpdate","phaseTable"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { ELcolumnDefs, ELrowData } from \"../HEPData\";\r\nimport styles from \"../HEP.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst EquipmentLevelHEP = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.parent === null);\r\n  const phaseData = useSelector((state) => state.phase.phase);\r\n  const mData = [\"Preventive\", \"Breakdown\"];\r\n  let rowData = [];\r\n  const rData = systemData.map((e, i) => {\r\n    phaseData.map((p_e, p_i) => {\r\n      mData.map((mE, mI) => {\r\n        if (p_e.MType === \"Qualitative\") {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.Status,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        } else {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.PhaseRange,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        }\r\n      });\r\n      return null;\r\n    });\r\n\r\n    return null;\r\n  });\r\n  const ELcolumnDefs = [\r\n    <AgGridColumn field=\"equipment\" headerName=\"Equipment\" minWidth={80} />,\r\n    <AgGridColumn field=\"phase\" headerName=\"Phase Name\" minWidth={80} />,\r\n    <AgGridColumn\r\n      field=\"Maintenancepolicy\"\r\n      headerName=\"Maintenance Policy\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Preventive\", \"Breakdown\"] }}\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn headerName=\"PSF-Available Time\">\r\n      <AgGridColumn\r\n        field=\"ATNominal\"\r\n        headerName=\"Nominal\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Lessthanrequired\"\r\n        headerName=\"Less Than Required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Higherthanrequired\"\r\n        headerName=\"Higher than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"vhtr\"\r\n        headerName=\"Very High than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n    </AgGridColumn>,\r\n    <AgGridColumn headerName=\"PSF-Stress\">\r\n      <AgGridColumn field=\"Nominal\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Low\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Extreme\" editable={true}></AgGridColumn>\r\n    </AgGridColumn>,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={ELcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EquipmentLevelHEP;\r\n"]},"metadata":{},"sourceType":"module"}