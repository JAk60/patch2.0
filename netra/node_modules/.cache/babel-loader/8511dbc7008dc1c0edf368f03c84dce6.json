{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneWithRef;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  (0, _invariant2.default)(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return (0, _react.cloneElement)(element, {\n      ref: newRef\n    });\n  }\n\n  return (0, _react.cloneElement)(element, {\n    ref: function ref(node) {\n      newRef(node);\n\n      if (previousRef) {\n        previousRef(node);\n      }\n    }\n  });\n}","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/node_modules/react-dnd/lib/utils/cloneWithRef.js"],"names":["Object","defineProperty","exports","value","default","cloneWithRef","_invariant","require","_invariant2","_interopRequireDefault","_react","obj","__esModule","element","newRef","previousRef","ref","cloneElement","node"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC5CC,EAAAA,KAAK,EAAE;AADqC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACH,UAAD,CAAxC;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASN,YAAT,CAAsBQ,OAAtB,EAA+BC,MAA/B,EAAuC;AACtC,MAAIC,WAAW,GAAGF,OAAO,CAACG,GAA1B;AACA,GAAC,GAAGR,WAAW,CAACJ,OAAhB,EAAyB,OAAOW,WAAP,KAAuB,QAAhD,EAA0D,yEAAyE,sFAAzE,GAAkK,kGAA5N;;AAEA,MAAI,CAACA,WAAL,EAAkB;AACjB;AACA,WAAO,CAAC,GAAGL,MAAM,CAACO,YAAX,EAAyBJ,OAAzB,EAAkC;AACxCG,MAAAA,GAAG,EAAEF;AADmC,KAAlC,CAAP;AAGA;;AAED,SAAO,CAAC,GAAGJ,MAAM,CAACO,YAAX,EAAyBJ,OAAzB,EAAkC;AACxCG,IAAAA,GAAG,EAAE,SAASA,GAAT,CAAaE,IAAb,EAAmB;AACvBJ,MAAAA,MAAM,CAACI,IAAD,CAAN;;AAEA,UAAIH,WAAJ,EAAiB;AAChBA,QAAAA,WAAW,CAACG,IAAD,CAAX;AACA;AACD;AAPuC,GAAlC,CAAP;AASA","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n\tvalue: true\r\n});\r\nexports.default = cloneWithRef;\r\n\r\nvar _invariant = require('invariant');\r\n\r\nvar _invariant2 = _interopRequireDefault(_invariant);\r\n\r\nvar _react = require('react');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction cloneWithRef(element, newRef) {\r\n\tvar previousRef = element.ref;\r\n\t(0, _invariant2.default)(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\r\n\r\n\tif (!previousRef) {\r\n\t\t// When there is no ref on the element, use the new ref directly\r\n\t\treturn (0, _react.cloneElement)(element, {\r\n\t\t\tref: newRef\r\n\t\t});\r\n\t}\r\n\r\n\treturn (0, _react.cloneElement)(element, {\r\n\t\tref: function ref(node) {\r\n\t\t\tnewRef(node);\r\n\r\n\t\t\tif (previousRef) {\r\n\t\t\t\tpreviousRef(node);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}"]},"metadata":{},"sourceType":"script"}