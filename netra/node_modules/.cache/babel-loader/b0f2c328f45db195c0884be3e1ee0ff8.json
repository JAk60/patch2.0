{"ast":null,"code":"var _jsxFileName = \"E:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Phase_Manager\\\\Add\\\\AddPhase.js\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\nimport styles from \"../Phasemanager.module.css\";\nimport { MProwData } from \"../PhasetableData\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhaseStyles = makeStyles({\n  formControl: {\n    // margin: '2rem',\n    minWidth: \"20%\"\n  },\n  Submit: {\n    // margin: '2rem',\n    height: 40\n  },\n  Pbuttons: {\n    marginLeft: 10\n  }\n});\n\nconst AddPhase = props => {\n  const PhaseClasses = PhaseStyles(); // const [RangeInput, setRangeInput] = useState([]);\n  // const onAddNewRange = () => {\n  //   setRangeInput((prevstate) => {\n  //     // const stateLen = prevstate.length;\n  //     // // return [...prevstate, stateLen + 1];\n  //     return [...prevstate, { Status: \"\", UBound: \"\", LBound: \"\", Desc: \"\" }];\n  //   });\n  //   console.log(RangeInput);\n  // };\n  // const onDeleteRange = (index) => {\n  //   debugger;\n  //   const rangeCopy = [...RangeInput];\n  //   rangeCopy.splice(index, 1);\n  //   setRangeInput(rangeCopy);\n  // };\n  // const handleRangeChange = (index, e) => {\n  //   let newArr = [...RangeInput];\n  //   newArr[index][e.target.name] = e.target.value;\n  //   setRangeInput(newArr);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.addForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please add only the Medium level phase-range, the system will automatically calculate the other two.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flex,\n      style: {\n        marginTop: \"4rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomTextInput, {\n        label: \"Parameter Name\",\n        id: \"parameter-name\",\n        className: PhaseClasses.formControl,\n        value: props.paramName,\n        onChange: props.handleParamNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        className: PhaseClasses.formControl,\n        id: \"measurement-type\",\n        label: \"Measurement Type\",\n        value: props.MType,\n        onChange: props.handleMTypeChange,\n        fields: [\"Quantitative\", \"Qualitative\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        className: PhaseClasses.formControl,\n        id: \"unit\",\n        label: \"Unit\",\n        value: props.Unit,\n        onChange: props.handleUnitChange,\n        fields: [\"Km/hr\", \"M/hr\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flex,\n      style: {\n        marginTop: \"3rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: [props.MType, \" Measurement Type - Range\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flex,\n      style: {\n        marginTop: \"3rem\"\n      },\n      children: props.MType === \"Qualitative\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CustomTextInput, {\n          style: {\n            minWidth: \"45%\"\n          },\n          label: \"Status\",\n          id: \"status\",\n          className: PhaseClasses.formControl,\n          value: props.Status,\n          onChange: props.handleStatusChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          style: {\n            minWidth: \"45%\"\n          },\n          label: \"Description\",\n          id: \"description\",\n          className: PhaseClasses.formControl,\n          value: props.desc,\n          onChange: props.handleDescChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                label: \"Phase Range\",\n                id: \"phaserange\",\n                className: PhaseClasses.formControl,\n                value: props.PRange,\n                onChange: props.handlePRangeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                label: \"Lower Bound\",\n                id: \"lowerbound\",\n                className: PhaseClasses.formControl,\n                value: props.LBound,\n                onChange: props.handleLBoundChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                label: \"Upper Bound\",\n                id: \"upperbound\",\n                className: PhaseClasses.formControl,\n                value: props.UBound,\n                onChange: props.handleUBoundChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                label: \"Description\",\n                id: \"description\",\n                style: {\n                  minWidth: \"100%\"\n                },\n                className: PhaseClasses.formControl,\n                value: props.desc,\n                onChange: props.handleDescChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddPhase;\nexport default AddPhase;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPhase\");","map":{"version":3,"sources":["E:/NetraB/netra/src/pages/Phase_Manager/Add/AddPhase.js"],"names":["makeStyles","Button","Grid","useState","CustomSelect","CustomTextInput","styles","MProwData","DeleteIcon","PhaseStyles","formControl","minWidth","Submit","height","Pbuttons","marginLeft","AddPhase","props","PhaseClasses","addForm","flex","marginTop","paramName","handleParamNameChange","MType","handleMTypeChange","Unit","handleUnitChange","Status","handleStatusChange","desc","handleDescChange","PRange","handlePRangeChange","LBound","handleLBoundChange","UBound","handleUBoundChange"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { MProwData } from \"../PhasetableData\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nconst PhaseStyles = makeStyles({\r\n  formControl: {\r\n    // margin: '2rem',\r\n    minWidth: \"20%\",\r\n  },\r\n  Submit: {\r\n    // margin: '2rem',\r\n    height: 40,\r\n  },\r\n  Pbuttons: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\nconst AddPhase = (props) => {\r\n  const PhaseClasses = PhaseStyles();\r\n  // const [RangeInput, setRangeInput] = useState([]);\r\n\r\n  // const onAddNewRange = () => {\r\n  //   setRangeInput((prevstate) => {\r\n  //     // const stateLen = prevstate.length;\r\n  //     // // return [...prevstate, stateLen + 1];\r\n  //     return [...prevstate, { Status: \"\", UBound: \"\", LBound: \"\", Desc: \"\" }];\r\n  //   });\r\n  //   console.log(RangeInput);\r\n  // };\r\n  // const onDeleteRange = (index) => {\r\n  //   debugger;\r\n  //   const rangeCopy = [...RangeInput];\r\n  //   rangeCopy.splice(index, 1);\r\n  //   setRangeInput(rangeCopy);\r\n  // };\r\n  // const handleRangeChange = (index, e) => {\r\n  //   let newArr = [...RangeInput];\r\n  //   newArr[index][e.target.name] = e.target.value;\r\n  //   setRangeInput(newArr);\r\n  // };\r\n\r\n  return (\r\n    <div className={styles.addForm}>\r\n      <div>\r\n        <h4>\r\n          Please add only the Medium level phase-range, the system will\r\n          automatically calculate the other two.\r\n        </h4>\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"4rem\" }}>\r\n        <CustomTextInput\r\n          label=\"Parameter Name\"\r\n          id=\"parameter-name\"\r\n          className={PhaseClasses.formControl}\r\n          value={props.paramName}\r\n          onChange={props.handleParamNameChange}\r\n        ></CustomTextInput>\r\n\r\n        <CustomSelect\r\n          className={PhaseClasses.formControl}\r\n          id=\"measurement-type\"\r\n          label=\"Measurement Type\"\r\n          value={props.MType}\r\n          onChange={props.handleMTypeChange}\r\n          fields={[\"Quantitative\", \"Qualitative\"]}\r\n        />\r\n\r\n        <CustomSelect\r\n          className={PhaseClasses.formControl}\r\n          id=\"unit\"\r\n          label=\"Unit\"\r\n          value={props.Unit}\r\n          onChange={props.handleUnitChange}\r\n          fields={[\"Km/hr\", \"M/hr\"]}\r\n        ></CustomSelect>\r\n        {/* <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={PhaseClasses.Submit}\r\n          onClick={() => addRow()}\r\n        >\r\n          Submit\r\n        </Button> */}\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"3rem\" }}>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          {props.MType} Measurement Type - Range\r\n        </Button>\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"3rem\" }}>\r\n        {props.MType === \"Qualitative\" ? (\r\n          <>\r\n            <CustomTextInput\r\n              style={{ minWidth: \"45%\" }}\r\n              label=\"Status\"\r\n              id=\"status\"\r\n              className={PhaseClasses.formControl}\r\n              value={props.Status}\r\n              onChange={props.handleStatusChange}\r\n            ></CustomTextInput>\r\n            <CustomTextInput\r\n              style={{ minWidth: \"45%\" }}\r\n              label=\"Description\"\r\n              id=\"description\"\r\n              className={PhaseClasses.formControl}\r\n              value={props.desc}\r\n              onChange={props.handleDescChange}\r\n            ></CustomTextInput>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid container>\r\n              <Grid container item spacing={4}>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Phase Range\"\r\n                    id=\"phaserange\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.PRange}\r\n                    onChange={props.handlePRangeChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Lower Bound\"\r\n                    id=\"lowerbound\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.LBound}\r\n                    onChange={props.handleLBoundChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Upper Bound\"\r\n                    id=\"upperbound\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.UBound}\r\n                    onChange={props.handleUBoundChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.desc}\r\n                    onChange={props.handleDescChange}\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={1} style={{ marginTop: \"35px\" }}>\r\n                  <DeleteIcon\r\n                    fontSize=\"medium\"\r\n                    onClick={() => {\r\n                      onDeleteRange(id);\r\n                    }}\r\n                  />\r\n                </Grid> */}\r\n              </Grid>\r\n            </Grid>\r\n            {/* {props.MType === \"Quantitative\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => onAddNewRange()}\r\n              >\r\n                Add\r\n              </Button>\r\n            )} */}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddPhase;\r\n"]},"metadata":{},"sourceType":"module"}