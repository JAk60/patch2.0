{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\TaskDashboard\\\\TaskDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import styles from \"./TaskDashboard.module.css\";\n\nimport { InputLabel, TextField, makeStyles, Button, Switch } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Label, ReferenceLine } from 'recharts'; // import { arr,arr2 } from \"./data\";\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport styles from \"./tDashboard.module.css\";\nimport moment from \"moment\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Loader from \"react-loader-spinner\";\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MissionData = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.missionData,\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.target,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-target\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#374c93\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" \", \"Target: \", props.mission.target, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actual,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-shield-check\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#f8f8f8\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M9 12l2 2l4 -4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"Actual:\", props.mission.actual.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [data.name, \" \", data.rel.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probabilityHead,\n        children: \"Probability of Achieving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probability,\n        children: props.mission.actual.map(data => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data.name, \" \", data.prob.toFixed(2) == 100 ? \">99%\" : `${data.prob.toFixed(2)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MissionData;\n\nconst TaskDashboard = () => {\n  _s();\n\n  const [shipOption, setshipOption] = useState([]);\n  const [taskOption, settaskOption] = useState([]);\n  const [missionOption, setmissionOption] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(\"\");\n  const [selectedMission, setSelectedMission] = useState(\"\"); // Reliability Dashboard\n\n  const [showSubsystem, setSubSystem] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isCardFlipped, setCardFlipped] = useState(false);\n  const [currentMission, setMission] = useState(0);\n  const [eqDataOption, setEqDataOption] = useState([]);\n  const [selectedEqName, setEquipmentName] = useState(null);\n  const [selectedShipName, setShipName] = useState(null);\n  const [selectedMissionName, setMissionName] = useState(null);\n  const [graphData, setGraphData] = useState([]);\n  const [subSystemData, setSubSystemData] = useState([]);\n  const [eventInfo, setEventInfo] = useState(null);\n  const [cardData, setCardData] = useState(null);\n\n  const handleStartDateChange = date => {\n    setStartDate(date);\n  };\n\n  const [endDate, setEndDate] = useState(new Date());\n\n  const handleEndDateChange = date => {\n    setEndDate(date);\n  };\n\n  const handleEventCheck = () => {\n    let start = moment(startDate).subtract(1, \"day\");\n    let end = moment(endDate).add(1, \"day\");\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\n    console.log(total);\n    let days = {\n      working: 0,\n      down: 0,\n      maintenance: 0,\n      total: total\n    };\n    events.forEach(event => {\n      if (event.start < end && event.end > start) {\n        if (event.start >= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start >= start && event.end >= end) {\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end >= end) {\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        }\n      }\n    });\n    setEventInfo(days);\n    setCardFlipped(!isCardFlipped);\n  };\n\n  useEffect(() => {\n    fetch(\"/task_dash_populate\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      debugger;\n      const mission_data = data[\"missionData\"];\n      const taskNames = data[\"tasks\"];\n      setmissionOption(mission_data);\n      settaskOption(taskNames);\n    });\n  }, []);\n  const dropDownStyle = makeStyles({\n    root: {\n      paddingLeft: 10,\n      background: \"#fff\",\n      border: \"1px solid #0263a1\",\n      borderRadius: \"5px\",\n      width: \"320px\",\n      minHeight: \"40px\",\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  });\n  const classes = dropDownStyle();\n  let arr = [];\n  let arr2 = [];\n\n  for (let i = 0; i < 50; i++) {\n    // const maxDate = Date.now();\n    // const timestamp = Math.floor(Math.random() * maxDate);\n    arr = [...arr, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    }];\n    arr2 = [...arr2, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (75 - 30 + 1)) + 30\n    }];\n  }\n\n  const [showGraph, setShowGraph] = useState(false);\n\n  const onSubmitHandler = () => {\n    const data = {\n      \"taskName\": selectedTask,\n      \"selectedMission\": selectedMission\n    };\n    fetch(\"/task_rel\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      debugger;\n      console.log(d);\n\n      if (d.length > 1) {\n        let newGraphData = [];\n        let newSubSystem = [];\n        let newCardData = [];\n        console.log(d);\n        data.selectedMission.forEach((mission, mid) => {\n          let missionData = d[mid][mission];\n          missionOption.forEach(element => {\n            if (element.missionName === mission) {\n              newCardData[mid] = { ...newCardData[mid],\n                name: mission,\n                target: element.tar_rel\n              };\n              newGraphData = [...newGraphData, {\n                name: \"Target Reliability\",\n                Reliability: element.tar_rel\n              }];\n            }\n          }); //missionOption\n        });\n      }\n    });\n  };\n\n  const minThreshold = 45;\n  const maxThreshold = 60;\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskOption,\n            getOptionLabel: option => option.name,\n            onChange: (event, value) => setSelectedTask(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Select Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: missionOption,\n            getOptionLabel: option => option.missionName,\n            onChange: (event, value) => setSelectedMission(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: \"2rem\"\n          },\n          onClick: onSubmitHandler,\n          children: [console.log(arr[arr.length - 1][\"uv\"] + \"hello2\"), \"Submit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.midSection,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#86a0ff\",\n          height: 300,\n          width: 300,\n          style: {\n            marginTop: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), graphData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.midSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rchart,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.relChart,\n                children: graphData && /*#__PURE__*/_jsxDEV(ReliabilityChart, {\n                  data: graphData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.compareMission,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this), \" Compare with other missions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this), cardData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: [/*#__PURE__*/_jsxDEV(MissionSlider, {\n                    missions: cardData,\n                    currentMission: currentMission,\n                    setMission: setMission\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(MissionData, {\n                    mission: cardData[currentMission]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.showSubsystem,\n                    children: [\"Show Subsytem Level\", \" \", /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: showSubsystem,\n                      disabled: !subSystemData.length,\n                      onChange: () => {\n                        setSubSystem(!showSubsystem);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: \"Select Missions to compare\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.calendar,\n                children: /*#__PURE__*/_jsxDEV(EventCalendar, {\n                  events: events\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n                isFlipped: isCardFlipped,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.datePicker,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.dpHeader,\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    variant: \"inline\",\n                    format: \"L\",\n                    margin: \"normal\",\n                    id: \"start-date\",\n                    label: \"Start Date\",\n                    value: startDate,\n                    onChange: handleStartDateChange,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"start date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    variant: \"inline\",\n                    format: \"L\",\n                    margin: \"normal\",\n                    id: \"end-date\",\n                    label: \"End Date\",\n                    value: endDate,\n                    onChange: handleEndDateChange,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"end date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    style: {\n                      width: 200\n                    },\n                    onClick: () => {\n                      handleEventCheck();\n                    },\n                    children: \"Check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.datePicker,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.dpHeader,\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 23\n                  }, this), eventInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"The Equipment was: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Running for\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.working, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 29\n                      }, this), \"(\", (eventInfo.working / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Under Maintenance for\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.maintenance, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 29\n                      }, this), \"(\", (eventInfo.maintenance / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Down for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.down, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 38\n                      }, this), \"(\", (eventInfo.down / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    style: {\n                      width: 200\n                    },\n                    onClick: () => {\n                      setCardFlipped(!isCardFlipped);\n                    },\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDashboard, \"upA3LbA2sovY7G7nB7+EV4g0tdg=\");\n\n_c2 = TaskDashboard;\nexport default TaskDashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MissionData\");\n$RefreshReg$(_c2, \"TaskDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/TaskDashboard/TaskDashboard.js"],"names":["React","useState","useEffect","InputLabel","TextField","makeStyles","Button","Switch","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Label","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","Navigation","styles","moment","CustomSelect","ReliabilityChart","MissionSlider","AddCircleOutlineIcon","Autocomplete","Loader","EventCalendar","data","subSystemLevelData","events","mainData","ReactCardFlip","MissionData","props","missionData","style","target","mission","actual","map","name","rel","toFixed","textAlign","probabilityHead","probability","prob","TaskDashboard","shipOption","setshipOption","taskOption","settaskOption","missionOption","setmissionOption","loading","setLoading","selectedTask","setSelectedTask","selectedMission","setSelectedMission","showSubsystem","setSubSystem","startDate","setStartDate","Date","isCardFlipped","setCardFlipped","currentMission","setMission","eqDataOption","setEqDataOption","selectedEqName","setEquipmentName","selectedShipName","setShipName","selectedMissionName","setMissionName","graphData","setGraphData","subSystemData","setSubSystemData","eventInfo","setEventInfo","cardData","setCardData","handleStartDateChange","date","endDate","setEndDate","handleEndDateChange","handleEventCheck","start","subtract","end","add","total","console","log","days","working","down","maintenance","forEach","event","diff","status","Math","floor","fetch","method","headers","Accept","then","res","json","mission_data","taskNames","dropDownStyle","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","classes","arr","arr2","i","getTime","random","toISOString","slice","uv","showGraph","setShowGraph","onSubmitHandler","body","JSON","stringify","d","length","newGraphData","newSubSystem","newCardData","mid","element","missionName","tar_rel","Reliability","minThreshold","maxThreshold","mprofile","fontWeight","color","fontSize","marginBottom","option","value","params","InputProps","disableUnderline","marginTop","midSection","rchart","content","relChart","compareMission","display","alignItems","missionbox","calendar","datePicker","dpHeader"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import styles from \"./TaskDashboard.module.css\";\r\nimport {  InputLabel, TextField,makeStyles,Button, Switch} from \"@material-ui/core\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Label,ReferenceLine } from 'recharts';\r\n// import { arr,arr2 } from \"./data\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport styles from \"./tDashboard.module.css\";\r\nimport moment from \"moment\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\r\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\r\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\n\r\n\r\nconst MissionData = (props) => {\r\n  return (\r\n    <div className={styles.missionData} style={props.style}>\r\n      <div className={styles.target}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-target\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#374c93\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"1\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"9\" />\r\n        </svg>{\" \"}\r\n        Target: {props.mission.target}%\r\n      </div>\r\n      <div className={styles.actual}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-shield-check\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#f8f8f8\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <path d=\"M9 12l2 2l4 -4\" />\r\n          <path d=\"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\" />\r\n        </svg>\r\n        Actual:\r\n        {props.mission.actual.map((data) => {\r\n          return (\r\n            <>\r\n              <div>\r\n                {data.name} {data.rel.toFixed(2)}%\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <div className={styles.probabilityHead}>Probability of Achieving</div>\r\n        <div className={styles.probability}>\r\n          {props.mission.actual.map((data) => {\r\n            return (\r\n              <>\r\n                <div>\r\n                  {data.name}{\" \"}\r\n                  {data.prob.toFixed(2) == 100\r\n                    ? \">99%\"\r\n                    : `${data.prob.toFixed(2)}%`}\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst TaskDashboard = () => {\r\n  const [shipOption, setshipOption] = useState([]);\r\n  const [taskOption, settaskOption] = useState([]);\r\n  const [missionOption, setmissionOption] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedTask, setSelectedTask] = useState(\"\");\r\n  const [selectedMission, setSelectedMission] = useState(\"\");\r\n\r\n  // Reliability Dashboard\r\n  const [showSubsystem, setSubSystem] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const [isCardFlipped, setCardFlipped] = useState(false);\r\n\r\n  const [currentMission, setMission] = useState(0);\r\n  const [eqDataOption, setEqDataOption] = useState([]);\r\n\r\n  const [selectedEqName, setEquipmentName] = useState(null);\r\n  const [selectedShipName, setShipName] = useState(null);\r\n  const [selectedMissionName, setMissionName] = useState(null);\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const [subSystemData, setSubSystemData] = useState([]);\r\n  const [eventInfo, setEventInfo] = useState(null);\r\n  const [cardData, setCardData] = useState(null);\r\n\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n  };\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n  };\r\n\r\n  const handleEventCheck = () => {\r\n    let start = moment(startDate).subtract(1, \"day\");\r\n    let end = moment(endDate).add(1, \"day\");\r\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\r\n    console.log(total);\r\n    let days = { working: 0, down: 0, maintenance: 0, total: total };\r\n    events.forEach((event) => {\r\n      if (event.start < end && event.end > start) {\r\n        if (event.start >= start && event.end <= end) {\r\n          let diff =\r\n            (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start >= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end <= end) {\r\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        }\r\n      }\r\n    });\r\n    setEventInfo(days);\r\n    setCardFlipped(!isCardFlipped);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"/task_dash_populate\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        debugger;\r\n        const mission_data = data[\"missionData\"];\r\n        const taskNames = data[\"tasks\"]\r\n        setmissionOption(mission_data);\r\n        settaskOption(taskNames);      \r\n      });\r\n  }, []);\r\n\r\n\r\n  const dropDownStyle = makeStyles({\r\n    root: {\r\n      paddingLeft: 10,\r\n      background: \"#fff\",\r\n      border: \"1px solid #0263a1\",\r\n      borderRadius: \"5px\",\r\n      width: \"320px\",\r\n      minHeight: \"40px\",\r\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    inputRoot:{\r\n      width: '100%'\r\n    },\r\n  });\r\n  const classes=dropDownStyle();\r\n  let arr=[]\r\n  let arr2=[]\r\n  for(let i=0;i<50;i++){\r\n    // const maxDate = Date.now();\r\n    // const timestamp = Math.floor(Math.random() * maxDate);\r\n    arr=[...arr,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (80 - 30 + 1)) + 30}]\r\n\r\n    arr2=[...arr2,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (75 - 30 + 1)) + 30}]\r\n  }\r\n  const [showGraph,setShowGraph]=useState(false);\r\n\r\n  const onSubmitHandler = () => { \r\n    const data = {\"taskName\": selectedTask, \"selectedMission\": selectedMission}\r\n    fetch(\"/task_rel\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        debugger;\r\n        console.log(d);\r\n        if(d.length > 1){\r\n          let newGraphData = [];\r\n          let newSubSystem = [];\r\n          let newCardData = [];\r\n          console.log(d);\r\n          data.selectedMission.forEach((mission,mid) => {\r\n            let missionData = d[mid][mission];\r\n            missionOption.forEach((element) => {\r\n              if (element.missionName === mission) {\r\n                newCardData[mid] = {\r\n                  ...newCardData[mid],\r\n                  name: mission,\r\n                  target: element.tar_rel,\r\n                };\r\n                newGraphData = [\r\n                  ...newGraphData,\r\n                  {\r\n                    name: \"Target Reliability\",\r\n                    Reliability: element.tar_rel,\r\n                  },\r\n                ];\r\n              }\r\n            })//missionOption\r\n          })\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const minThreshold=45\r\n  const maxThreshold=60\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n            <CustomSelect fields={['a','b','c','d','e']}/>\r\n              \r\n           \r\n            \r\n          </div> */}\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Task Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {(event, value) => setSelectedTask(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          \r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Select Mission\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={missionOption}\r\n              getOptionLabel={(option) => option.missionName}\r\n              onChange={(event, value) => setSelectedMission(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginTop: \"2rem\",\r\n            }}\r\n            onClick={onSubmitHandler} \r\n          >{console.log(arr[arr.length-1][\"uv\"]+\"hello2\")}\r\n            Submit\r\n          </Button>\r\n\r\n\r\n         \r\n          \r\n        </div>\r\n        \r\n        \r\n        \r\n            {/* {showGraph?<div className={styles.midSection}>\r\n\r\n            <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 1</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  \r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                 \r\n                </LineChart>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 2</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                  \r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 3</div>\r\n                <LineChart width={550} height={300} data={arr}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n            \r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 4</div>\r\n                <LineChart width={500} height={300} data={arr}>\r\n                \r\n                <XAxis dataKey=\"name\" label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} tick={false} />\r\n                 \r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n\r\n                  \r\n                  <ReferenceLine y={40} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n                \r\n    \r\n                 `\r\n                </div>\r\n              </div>\r\n\r\n              \r\n             \r\n            </div>:null} */}\r\n            \r\n            {loading && (\r\n          <div className={styles.midSection}>\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#86a0ff\"\r\n              height={300}\r\n              width={300}\r\n              style={{ marginTop: 100 }}\r\n            />\r\n          </div>\r\n        )}\r\n        {graphData.length ? (\r\n          <>\r\n            <div className={styles.midSection}>\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                  <div className={styles.relChart}>\r\n                    {graphData && <ReliabilityChart data={graphData} />}\r\n                  </div>\r\n                  <div className={styles.compareMission}>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <AddCircleOutlineIcon /> Compare with other missions\r\n                    </div>\r\n                    {cardData ? (\r\n                      <div className={styles.missionbox}>\r\n                        {/* <div className={styles.missionName}>Mission B</div> */}\r\n                        <MissionSlider\r\n                          missions={cardData}\r\n                          currentMission={currentMission}\r\n                          setMission={setMission}\r\n                        />\r\n                        <MissionData mission={cardData[currentMission]} />\r\n                        <div className={styles.showSubsystem}>\r\n                          Show Subsytem Level{\" \"}\r\n                          <Switch\r\n                            checked={showSubsystem}\r\n                            disabled={!subSystemData.length}\r\n                            onChange={() => {\r\n                              setSubSystem(!showSubsystem);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className={styles.missionbox}>\r\n                        Select Missions to compare\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.calendar}>\r\n                {/* <div className={styles.header}>\r\n              <div style={{display:'flex',alignItems:'center'}}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-calendar-event\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#0d1a45\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n              <rect x=\"4\" y=\"5\" width=\"16\" height=\"16\" rx=\"2\" />\r\n              <line x1=\"16\" y1=\"3\" x2=\"16\" y2=\"7\" />\r\n              <line x1=\"8\" y1=\"3\" x2=\"8\" y2=\"7\" />\r\n              <line x1=\"4\" y1=\"11\" x2=\"20\" y2=\"11\" />\r\n              <rect x=\"8\" y=\"15\" width=\"2\" height=\"2\" />\r\n            </svg>Calendar</div> <div><LensIcon style={{color:'#8af6ad',opacity:'0.5'}}/>Working <LensIcon style={{color:'#ff8788',opacity:'0.5'}}/>Down <LensIcon style={{color:'#f3f682',opacity:'0.5'}}/>Maintenance</div></div> */}\r\n                <div className={styles.content}>\r\n                  <div className={styles.calendar}>\r\n                    <EventCalendar events={events} />\r\n                  </div>\r\n                  <ReactCardFlip isFlipped={isCardFlipped}>\r\n                    <div className={styles.datePicker}>\r\n                      <div className={styles.dpHeader}>Availability</div>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"L\"\r\n                        margin=\"normal\"\r\n                        id=\"start-date\"\r\n                        label=\"Start Date\"\r\n                        value={startDate}\r\n                        onChange={handleStartDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"start date\",\r\n                        }}\r\n                      />\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"L\"\r\n                        margin=\"normal\"\r\n                        id=\"end-date\"\r\n                        label=\"End Date\"\r\n                        value={endDate}\r\n                        onChange={handleEndDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"end date\",\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ width: 200 }}\r\n                        onClick={() => {\r\n                          handleEventCheck();\r\n                        }}\r\n                      >\r\n                        Check\r\n                      </Button>\r\n                    </div>\r\n                    <div className={styles.datePicker}>\r\n                      <div className={styles.dpHeader}>Availability</div>\r\n                      {eventInfo && (\r\n                        <>\r\n                          <div>The Equipment was: </div>\r\n                          <div>\r\n                            Running for{\" \"}\r\n                            <strong>{eventInfo.working} days</strong>(\r\n                            {(\r\n                              (eventInfo.working / eventInfo.total) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            %)\r\n                          </div>\r\n                          <div>\r\n                            Under Maintenance for{\" \"}\r\n                            <strong>{eventInfo.maintenance} days</strong>(\r\n                            {(\r\n                              (eventInfo.maintenance / eventInfo.total) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            %)\r\n                          </div>\r\n                          <div>\r\n                            Down for <strong>{eventInfo.down} days</strong>(\r\n                            {((eventInfo.down / eventInfo.total) * 100).toFixed(\r\n                              2\r\n                            )}\r\n                            %)\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ width: 200 }}\r\n                        onClick={() => {\r\n                          setCardFlipped(!isCardFlipped);\r\n                        }}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    </div>\r\n                  </ReactCardFlip>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className={styles.subSystemLevel}>\r\n              {showSubsystem && (\r\n                <div className={styles.subSystemContent}>\r\n                  <div className={styles.subSystemLevelChart}>\r\n                    <div>\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          class=\"icon icon-tabler icon-tabler-adjustments\"\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke-width=\"1.5\"\r\n                          stroke=\"#0d1a45\"\r\n                          fill=\"none\"\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                        >\r\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                          <circle cx=\"6\" cy=\"10\" r=\"2\" />\r\n                          <line x1=\"6\" y1=\"4\" x2=\"6\" y2=\"8\" />\r\n                          <line x1=\"6\" y1=\"12\" x2=\"6\" y2=\"20\" />\r\n                          <circle cx=\"12\" cy=\"16\" r=\"2\" />\r\n                          <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"14\" />\r\n                          <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"20\" />\r\n                          <circle cx=\"18\" cy=\"7\" r=\"2\" />\r\n                          <line x1=\"18\" y1=\"4\" x2=\"18\" y2=\"5\" />\r\n                          <line x1=\"18\" y1=\"9\" x2=\"18\" y2=\"20\" />\r\n                        </svg>\r\n                        Sub System Level Indicator\r\n                      </div>\r\n                    </div>\r\n                    <BarGraph data={subSystemData} />\r\n                  </div>\r\n                  <div style={{ width: \"20%\" }}>\r\n                    <MissionData\r\n                      mission={cardData[currentMission]}\r\n                      style={{ height: 200 }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div> */}\r\n          </>\r\n        ) : null}\r\n\r\n        \r\n      </div>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default TaskDashboard;\r\n"]},"metadata":{},"sourceType":"module"}