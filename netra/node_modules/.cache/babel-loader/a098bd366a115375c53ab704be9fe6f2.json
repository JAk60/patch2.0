{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\HEP\\\\HEP.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport StageSlider from \"../../components/slider/NewSlider\";\nimport Table2 from \"../../ui/Table/Table2\";\nimport { useState } from \"react\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport NewModule from \"../../components/module/NewModule\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport { v4 as uuid } from \"uuid\";\nimport { Button, makeStyles, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from \"@material-ui/core\";\nimport styles from \"./HEP.module.css\";\nimport { ELcolumnDefs, ELrowData, CLrowData, CLcolumnDefs, SLMcolumnDefs, SLMrowData } from \"./HEPData\";\nimport LensIcon from \"@material-ui/icons/Lens\";\nimport EquipmentLevelHEP from \"./EquipmentLevel/EquipmentLevel\";\nimport HEPLifeMultiplier from \"./LifeMultiplier/LifeMultiplier\";\nimport HEPComponentLevel from \"./ComponentLevel/componentLevel\";\nimport CHEP from \"./CommanHEP/CommanHEP\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { treeDataActions } from \"../../store/TreeDataStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HEPStyles = makeStyles({\n  Pbuttons: {\n    margin: 10,\n    float: 'right',\n    minWidth: 200\n  }\n});\n\nconst HEP = props => {\n  _s();\n\n  var _matchingItems$;\n\n  const [Stage, setStage] = useState(0);\n  const HEPClasses = HEPStyles();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const systemData = useSelector(state => state.treeData.treeData);\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  const currentSelectedSystem = useSelector(state => state.userSelection.currentSelection.equipmentName);\n  let finalTableData = [];\n\n  const setFinalTableData = d => {\n    finalTableData = d;\n\n    if (finalTableData.length > 0) {\n      console.log(\"Hi\");\n    }\n  };\n\n  const [experience, setExperience] = useState({\n    low: 0,\n    nominal: 100,\n    high: 0\n  });\n  const [workCulture, setWorkCulture] = useState('nominal');\n  const [fitness, setFitness] = useState({\n    low: 0,\n    nominal: 100,\n    high: 0\n  });\n  const [saveExt, setSaveExt] = useState(true);\n\n  const handleExp = (e, psfType) => {\n    setExperience({ ...experience,\n      [psfType]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    let sum = Number(experience.low) + Number(experience.high) + Number(experience.nominal); //console.log(sum);\n\n    if (sum != 100) {\n      document.querySelectorAll('.experience').forEach(input => {\n        input.style.border = 'red 1px solid';\n        setSaveExt(false);\n      });\n    } else {\n      document.querySelectorAll('.experience').forEach(input => {\n        input.style.border = 'black 1px solid';\n        setSaveExt(true);\n      });\n    }\n  }, [experience]);\n\n  const handleWC = e => {\n    setWorkCulture(e.target.value);\n  };\n\n  const handleFit = (e, psfType) => {\n    setFitness({ ...fitness,\n      [psfType]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    let sum = Number(fitness.low) + Number(fitness.high) + Number(fitness.nominal); //console.log(sum);\n\n    if (sum != 100) {\n      document.querySelectorAll('.fitness').forEach(input => {\n        input.style.border = 'red 1px solid';\n        setSaveExt(false);\n      });\n    } else {\n      document.querySelectorAll('.fitness').forEach(input => {\n        input.style.border = 'black 1px solid';\n        setSaveExt(true);\n      });\n    }\n  }, [fitness]);\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  };\n\n  const sData = useSelector(state => state.userSelection.componentsData);\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\n  const matchingId = (_matchingItems$ = matchingItems[0]) === null || _matchingItems$ === void 0 ? void 0 : _matchingItems$.id;\n\n  const onLoadTreeStructure = () => {\n    const payload = {\n      system: currentSelection[\"equipmentName\"],\n      ship_name: currentSelection[\"shipName\"]\n    };\n\n    if (matchingId) {\n      payload.component_id = matchingId;\n    }\n\n    console.log(payload);\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      console.log(failureModes);\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD\n      }));\n      dispatch(treeDataActions.setFailureModes(failureModes));\n    });\n  };\n\n  const onSaveButtonClickHandler = () => {\n    const currentLocation = location.pathname;\n    let newTdata = [];\n    let dType = \"\"; //console.log(currentLocation);\n\n    if (currentLocation === \"/HEP\") {\n      if (currentSelectedSystem) {\n        const ComponentId = systemData.filter(x => x.name === currentSelectedSystem)[0].id;\n        newTdata = finalTableData.map(x => {\n          return { ...x,\n            ComponentId: ComponentId\n          };\n        });\n        dType = \"insertHEP\";\n      }\n    } else if (currentLocation === \"/HEP/component_level\") {\n      newTdata = finalTableData;\n      dType = \"insertComponentLevel\";\n    } else if (currentLocation === \"/HEP/ext_factors\") {\n      if (saveExt) {\n        if (currentSelectedSystem) {\n          const ComponentId = systemData.filter(x => x.name === currentSelectedSystem)[0].id;\n          newTdata = [{\n            id: uuid(),\n            ComponentId: ComponentId,\n            expNominal: experience.nominal,\n            expLow: experience.low,\n            expHigh: experience.high,\n            workCulture: workCulture,\n            fitNominal: fitness.nominal,\n            fitLow: fitness.low,\n            fitHigh: fitness.high\n          }];\n        }\n\n        ;\n        dType = \"insertExtFactors\";\n      }\n    } else if (currentLocation === \"/HEP/swlife_multiplier\") {\n      newTdata = finalTableData;\n      dType = \"insertLifeMultiplier\";\n    }\n\n    debugger; //Else End\n\n    if (newTdata.length > 0) {\n      fetch(\"/save_hep\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          flatData: newTdata,\n          dtype: dType\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        setSnackBarMessage({\n          severity: \"success\",\n          message: data.message,\n          showSnackBar: true\n        });\n      }).catch(error => {\n        setSnackBarMessage({\n          severity: \"error\",\n          message: \"Some Error Occured. \" + error,\n          showSnackBar: true\n        });\n      });\n    } else {\n      setSnackBarMessage(prevState => {\n        const data = { ...prevState,\n          message: \"This is error\",\n          showSnackBar: true\n        };\n        return data;\n      });\n    }\n  };\n\n  const NextStage = () => {\n    if (Stage === 0) {\n      setStage(1);\n      props.history.push(\"/HEP/swlife_multiplier\");\n    }\n  };\n\n  let marks = [{\n    value: 30,\n    label: \"HEP Modelling\"\n  }, {\n    value: 85,\n    label: \"Spare Wise Life Multiplier\"\n  }];\n\n  const nextModule = settings => {\n    if (settings.DataManager) {\n      props.history.push(\"/data_manager\");\n    } else if (settings.ReliabilityDashboard) {\n      props.history.push(\"/rDashboard\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewModule, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StageSlider, {\n      marks: marks,\n      default: marks[Stage][\"value\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flex1,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: [\"/HEP\", \"/HEP/ext_factors\", \"/HEP/component_level\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            onClick: onLoadTreeStructure,\n            children: \"Load Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            children: \"Select PSF Criteria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: HEPClasses.Pbuttons,\n          onClick: () => onSaveButtonClickHandler(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/HEP\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/HEP/component_level\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/HEP/component_level\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/HEP/ext_factors\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/HEP/ext_factors\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            onClick: () => NextStage(),\n            children: \"Next Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/HEP/swlife_multiplier\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            onClick: onLoadTreeStructure,\n            children: \"Load Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => nextModule(props.settings),\n            variant: \"contained\",\n            color: \"primary\",\n            className: HEPClasses.Pbuttons,\n            children: \"Next Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/HEP\",\n        children: /*#__PURE__*/_jsxDEV(EquipmentLevelHEP, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/HEP/ext_factors\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(CHEP, {\n          experience: experience,\n          handleExp: handleExp,\n          workCulture: workCulture,\n          handleWC: handleWC,\n          fitness: fitness,\n          handleFit: handleFit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/HEP/component_level\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(HEPComponentLevel, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/HEP/swlife_multiplier\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(HEPLifeMultiplier, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HEP, \"TmRiG1AXLk8DLu/z5e5BrJzp9Lc=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = HEP;\nexport default HEP;\n\nvar _c;\n\n$RefreshReg$(_c, \"HEP\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/HEP/HEP.js"],"names":["React","useEffect","Navigation","StageSlider","Table2","useState","Switch","Route","Link","useLocation","NewModule","UserSelection","v4","uuid","Button","makeStyles","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","styles","ELcolumnDefs","ELrowData","CLrowData","CLcolumnDefs","SLMcolumnDefs","SLMrowData","LensIcon","EquipmentLevelHEP","HEPLifeMultiplier","HEPComponentLevel","CHEP","CustomizedSnackbars","useSelector","useDispatch","treeDataActions","HEPStyles","Pbuttons","margin","float","minWidth","HEP","props","Stage","setStage","HEPClasses","location","dispatch","systemData","state","treeData","currentSelection","userSelection","currentSelectedSystem","equipmentName","finalTableData","setFinalTableData","d","length","console","log","experience","setExperience","low","nominal","high","workCulture","setWorkCulture","fitness","setFitness","saveExt","setSaveExt","handleExp","e","psfType","target","value","sum","Number","document","querySelectorAll","forEach","input","style","border","handleWC","handleFit","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","sData","componentsData","currentEquipmentName","matchingItems","filter","item","name","matchingId","id","onLoadTreeStructure","payload","system","ship_name","component_id","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","treeD","failureModes","setTreeData","setFailureModes","onSaveButtonClickHandler","currentLocation","pathname","newTdata","dType","ComponentId","x","map","expNominal","expLow","expHigh","fitNominal","fitLow","fitHigh","flatData","dtype","data","catch","error","prevState","NextStage","history","push","marks","label","nextModule","settings","DataManager","ReliabilityDashboard","flex1"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport StageSlider from \"../../components/slider/NewSlider\";\r\nimport Table2 from \"../../ui/Table/Table2\";\r\nimport { useState } from \"react\";\r\nimport { Switch, Route, Link,useLocation } from \"react-router-dom\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport {\r\n  Button,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./HEP.module.css\";\r\nimport {\r\n  ELcolumnDefs,\r\n  ELrowData,\r\n  CLrowData,\r\n  CLcolumnDefs,\r\n  SLMcolumnDefs,\r\n  SLMrowData,\r\n} from \"./HEPData\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport EquipmentLevelHEP from \"./EquipmentLevel/EquipmentLevel\";\r\nimport HEPLifeMultiplier from \"./LifeMultiplier/LifeMultiplier\";\r\nimport HEPComponentLevel from \"./ComponentLevel/componentLevel\";\r\nimport CHEP from \"./CommanHEP/CommanHEP\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\n\r\n\r\nconst HEPStyles = makeStyles({\r\n  Pbuttons: {\r\n    margin:10,\r\n    float:'right',\r\n    minWidth:200\r\n  },\r\n});\r\n\r\nconst HEP = (props) => {\r\n  const [Stage, setStage] = useState(0);\r\n  const HEPClasses = HEPStyles();\r\n  const location=useLocation();\r\n  const dispatch = useDispatch();\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const currentSelectedSystem = useSelector(\r\n    (state) => state.userSelection.currentSelection.equipmentName\r\n  );\r\n\r\n  let finalTableData = [];\r\n  const setFinalTableData = (d) => {\r\n    finalTableData = d;\r\n    if (finalTableData.length > 0) {\r\n      console.log(\"Hi\");\r\n    }\r\n  };\r\n  const [experience,setExperience]=useState({low:0,nominal:100,high:0})\r\n  const [workCulture,setWorkCulture]=useState('nominal')\r\n  const [fitness,setFitness]=useState({low:0,nominal:100,high:0})\r\n  const [saveExt, setSaveExt] = useState(true)\r\n\r\n  const handleExp=(e,psfType)=>{\r\n    setExperience({...experience,[psfType]:e.target.value})\r\n  }\r\n\r\n  useEffect(() => {\r\n    let sum=Number(experience.low)+Number(experience.high)+Number(experience.nominal)\r\n    //console.log(sum);\r\n    if(sum!=100){\r\n      document.querySelectorAll('.experience').forEach(input=>{\r\n        input.style.border='red 1px solid'\r\n        setSaveExt(false)\r\n      })\r\n    }else{\r\n      document.querySelectorAll('.experience').forEach(input=>{\r\n        input.style.border='black 1px solid'\r\n        setSaveExt(true)\r\n      })\r\n    }\r\n  }, [experience])\r\n\r\n  const handleWC=(e)=>{\r\n    setWorkCulture(e.target.value)\r\n  }\r\n\r\n  const handleFit=(e,psfType)=>{\r\n    setFitness({...fitness,[psfType]:e.target.value})\r\n  }\r\n\r\n  useEffect(() => {\r\n    let sum=Number(fitness.low)+Number(fitness.high)+Number(fitness.nominal)\r\n    //console.log(sum);\r\n    if(sum!=100){\r\n      document.querySelectorAll('.fitness').forEach(input=>{\r\n        input.style.border='red 1px solid'\r\n        setSaveExt(false)\r\n      })\r\n    }else{\r\n      document.querySelectorAll('.fitness').forEach(input=>{\r\n        input.style.border='black 1px solid'\r\n        setSaveExt(true)\r\n      })\r\n    }\r\n  }, [fitness])\r\n\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const sData = useSelector((state) => state.userSelection.componentsData);\r\n\r\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\r\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\r\n\r\n  const matchingId = matchingItems[0]?.id;\r\n  const onLoadTreeStructure = () => {\r\n    const payload = {\r\n      system: currentSelection[\"equipmentName\"],\r\n      ship_name: currentSelection[\"shipName\"],\r\n    };\r\n  \r\n    if (matchingId) {\r\n      payload.component_id = matchingId;\r\n    }\r\n    console.log(payload)\r\n    fetch(\"/fetch_system\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        console.log(d);\r\n        let treeD = d[\"treeD\"];\r\n        let failureModes = d[\"failureMode\"];\r\n        console.log(failureModes)\r\n        dispatch(\r\n          treeDataActions.setTreeData({\r\n            treeData: treeD,\r\n          }),\r\n        );\r\n        dispatch(\r\n          treeDataActions.setFailureModes(failureModes)\r\n        )\r\n      });\r\n  };\r\n\r\n  const onSaveButtonClickHandler = () => {\r\n    const currentLocation = location.pathname;\r\n    let newTdata = [];\r\n    let dType = \"\";\r\n    //console.log(currentLocation);\r\n    if (currentLocation === \"/HEP\") {\r\n     if(currentSelectedSystem){ \r\n       const ComponentId = systemData.filter(\r\n        (x) => x.name === currentSelectedSystem\r\n      )[0].id;\r\n      newTdata = finalTableData.map((x) => {\r\n        return { ...x, ComponentId: ComponentId };\r\n      });\r\n      dType = \"insertHEP\";}\r\n    } else if (currentLocation === \"/HEP/component_level\") {\r\n      newTdata=finalTableData;\r\n      dType = \"insertComponentLevel\";\r\n    } else if (currentLocation === \"/HEP/ext_factors\") {\r\n      if(saveExt){\r\n        if(currentSelectedSystem){\r\n          const ComponentId = systemData.filter(\r\n          (x) => x.name === currentSelectedSystem\r\n        )[0].id;\r\n        newTdata=[{\r\n          id:uuid(),\r\n          ComponentId: ComponentId,\r\n          expNominal:experience.nominal,\r\n          expLow:experience.low,\r\n          expHigh:experience.high,\r\n          workCulture:workCulture,\r\n          fitNominal:fitness.nominal,\r\n          fitLow:fitness.low,\r\n          fitHigh:fitness.high\r\n        }]};\r\n        dType = \"insertExtFactors\";\r\n      }\r\n    } else if (currentLocation === \"/HEP/swlife_multiplier\") {\r\n      newTdata=finalTableData;\r\n      dType = \"insertLifeMultiplier\";\r\n    } \r\n    debugger;\r\n    //Else End\r\n    if (newTdata.length > 0) {\r\n      fetch(\"/save_hep\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          flatData: newTdata,\r\n          dtype: dType,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setSnackBarMessage({\r\n            severity: \"success\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: \"Some Error Occured. \" + error,\r\n            showSnackBar: true,\r\n          });\r\n        });\r\n    } else {\r\n      setSnackBarMessage((prevState) => {\r\n        const data = {\r\n          ...prevState,\r\n          message: \"This is error\",\r\n          showSnackBar: true,\r\n        };\r\n        return data;\r\n      });\r\n    }\r\n  };\r\n\r\n  const NextStage = () => {\r\n    if (Stage === 0) {\r\n      setStage(1);\r\n      props.history.push(\"/HEP/swlife_multiplier\");\r\n    }\r\n  };\r\n\r\n  let marks = [\r\n    {\r\n      value: 30,\r\n      label: \"HEP Modelling\",\r\n    },\r\n\r\n    {\r\n      value: 85,\r\n      label: \"Spare Wise Life Multiplier\",\r\n    },\r\n  ];\r\n\r\n  const nextModule = (settings) =>{\r\n    if(settings.DataManager){\r\n      props.history.push(\"/data_manager\")\r\n    }\r\n    else if(settings.ReliabilityDashboard){\r\n      props.history.push(\"/rDashboard\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      {/* <Module/> */}\r\n      <NewModule />\r\n      {/* <Slider marks={marks} default={marks[0][\"value\"]}/> */}\r\n      <StageSlider marks={marks} default={marks[Stage][\"value\"]} />\r\n      <div className={styles.flex1}>\r\n        <UserSelection/>\r\n        <div>\r\n          <Route\r\n            exact\r\n            path={[\"/HEP\", \"/HEP/ext_factors\", \"/HEP/component_level\"]}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n              onClick={onLoadTreeStructure}\r\n            >\r\n              Load Equipment\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n            >\r\n              Select PSF Criteria\r\n            </Button>\r\n          </Route>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={HEPClasses.Pbuttons}\r\n            onClick={()=>onSaveButtonClickHandler()}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Route exact path=\"/HEP\">\r\n            <Button\r\n              component={Link}\r\n              to=\"/HEP/component_level\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Route>\r\n          <Route exact path=\"/HEP/component_level\">\r\n            <Button\r\n              component={Link}\r\n              to=\"/HEP/ext_factors\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Route>\r\n          <Route exact path=\"/HEP/ext_factors\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n              onClick={() => NextStage()}\r\n            >\r\n              Next Stage\r\n            </Button>\r\n          </Route>\r\n          <Route exact path=\"/HEP/swlife_multiplier\">\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={HEPClasses.Pbuttons}\r\n                onClick={onLoadTreeStructure}\r\n              >\r\n                Load Equipment\r\n            </Button>\r\n            <Button\r\n              onClick={()=>nextModule(props.settings)}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={HEPClasses.Pbuttons}\r\n            >\r\n              Next Module\r\n            </Button>\r\n\r\n          </Route>\r\n        </div>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/HEP\">\r\n          <EquipmentLevelHEP\r\n            tableUpdate={setFinalTableData}\r\n          ></EquipmentLevelHEP>\r\n        </Route>\r\n        <Route path=\"/HEP/ext_factors\" exact={true}>\r\n          <CHEP\r\n          experience={experience}\r\n          handleExp={handleExp}\r\n          workCulture={workCulture}\r\n          handleWC={handleWC}\r\n          fitness={fitness}\r\n          handleFit={handleFit}\r\n          ></CHEP>\r\n        </Route>\r\n\r\n        <Route path=\"/HEP/component_level\" exact>\r\n          <HEPComponentLevel\r\n            tableUpdate={setFinalTableData}\r\n          ></HEPComponentLevel>\r\n        </Route>\r\n        <Route path=\"/HEP/swlife_multiplier\" exact>\r\n          <HEPLifeMultiplier\r\n            tableUpdate={setFinalTableData}\r\n          ></HEPLifeMultiplier>\r\n        </Route>\r\n      </Switch>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HEP;\r\n"]},"metadata":{},"sourceType":"module"}