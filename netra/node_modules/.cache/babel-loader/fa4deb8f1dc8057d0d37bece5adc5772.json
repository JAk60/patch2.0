{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\TaskDashboard\\\\TaskDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\"; // import styles from \"./TaskDashboard.module.css\";\n\nimport { InputLabel, TextField, makeStyles, Button, Switch, Input } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Label, ReferenceLine } from 'recharts'; // import { arr,arr2 } from \"./data\";\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport styles from \"./tDashboard.module.css\";\nimport moment from \"moment\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Loader from \"react-loader-spinner\";\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\"; // import RenderParallelComponent from \"../systen_configuration/redundancy/RenderParallelComponent\";\n\nimport RenderMultipleComponent from \"./TaskRenderMultipleComponent\";\nimport { taskActions } from \"../../store/taskStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MissionData = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.missionData,\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.target,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-target\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#374c93\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \", \"Target: \", props.mission.target, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actual,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"icon icon-tabler icon-tabler-shield-check\",\n        width: \"14\",\n        height: \"14\",\n        viewBox: \"0 0 24 24\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"#f8f8f8\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"none\",\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M9 12l2 2l4 -4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \"Actual:\", props.mission.actual.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [data.name, \" \", data.rel.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probabilityHead,\n        children: \"Probability of Achieving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.probability,\n        children: props.mission.actual.map(data => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data.name, \" \", data.prob.toFixed(2) == 100 ? \">99%\" : `${data.prob.toFixed(2)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MissionData;\n\nconst TaskDashboard = () => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridCompApi, setGridCompApi] = useState(null);\n  const [gridTaskApi, setGriTaskdApi] = useState(null);\n  const [gridMissionApi, setgridMissionApi] = useState(null);\n  const [missionProfileData, setMissionData] = useState([]);\n  const [rowState, setRows] = useState([]);\n  const [rowCompState, setCompRows] = useState([]);\n  const dispatch = useDispatch();\n  let ParallelIds = [];\n\n  const setParallelIds = d => {\n    console.log(\"This is shit!!\");\n    console.log(d);\n    ParallelIds = d;\n  };\n\n  const [shipOption, setshipOption] = useState([]);\n  const [taskOption, settaskOption] = useState([]);\n  const [missionOption, setmissionOption] = useState([]);\n  const [taskShipNameOption, settaskShipNameOption] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTaskShip, setselectedTaskShip] = useState(\"\");\n  const [selectedTaskName, setselectedTaskName] = useState(\"\");\n  const [selectedShipName, setselectedShipName] = useState(\"\"); // Reliability Dashboard\n\n  const [showSubsystem, setSubSystem] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isCardFlipped, setCardFlipped] = useState(false);\n  const [currentMission, setMission] = useState(0);\n  const [eqDataOption, setEqDataOption] = useState([]);\n  const [taskTableData, settaskTableData] = useState([]);\n  const [taskMissionTableData, settaskMissionTableData] = useState([]);\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n  const [selectedEqName, setEquipmentName] = useState(null);\n  const [entireData, setentireData] = useState(null); // const [selectedShipName, setShipName] = useState(null);\n\n  const [selectedMissionName, setMissionName] = useState(null);\n  const [graphData, setGraphData] = useState([]);\n  const [missionPhaseGraphData, setMissionPhaseGraphData] = useState([]);\n  const currentShip = useSelector(state => state.taskData.currentShip);\n  const currentTaskName = useSelector(state => state.taskData.currentTaskName);\n  const [subSystemData, setSubSystemData] = useState([]);\n  const [eventInfo, setEventInfo] = useState(null);\n  const [cardData, setCardData] = useState(null);\n  const missionName = useRef();\n  const thReliab = useRef();\n\n  const handleStartDateChange = date => {\n    setStartDate(date);\n  };\n\n  const [endDate, setEndDate] = useState(new Date());\n\n  const handleEndDateChange = date => {\n    setEndDate(date);\n  };\n\n  const ImportColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"missionType\",\n    headerName: \"Mission Type\",\n    headerTooltip: \"Mission Type\",\n    cellEditor: \"agSelectCellEditor\",\n    checkboxSelection: true,\n    cellEditorParams: {\n      values: [\"\", \"Harbour\", \"Entry Leaving Harbour\", \"Cruise\", \"Defense Station\", \"Action Station\"]\n    },\n    width: \"220\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"duration\",\n    headerName: \"Duration\",\n    headerTooltip: \"Duration\",\n    type: \"number\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this)]; // <AgGridColumn\n  //     field=\"component\"\n  //     headerName=\"Select Component for Mission\"\n  //     headerTooltip=\"Select Component for Mission\"\n  //     // cellEditor=\"agSelectCellEditor\"\n  //     cellEditorFramework={RenderMultipleComponent}\n  //     cellEditorParams={{\n  //       setParallelIds: setParallelIds,\n  //       label: \"Select Component for Mission\",\n  //       isMultiple: true,\n  //       currentTask: selectedTaskName\n  //     }}\n  //     //onCellClicked={onCellChanged}\n  //     width=\"220\"\n  //     editable={true}\n  //   />\n\n  const taskTableColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"shipName\",\n    headerName: \"Ship Name\",\n    headerTooltip: \"Ship Name\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"taskName\",\n    headerName: \"Task Name\",\n    headerTooltip: \"Task Name\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"rel\",\n    headerName: \"Reliability\",\n    headerTooltip: \"Reliability\",\n    type: \"number\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 3\n  }, this)];\n  const taskMissionTableColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"shipName\",\n    headerName: \"Ship Name\",\n    headerTooltip: \"Ship Name\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"taskName\",\n    headerName: \"Task Name\",\n    headerTooltip: \"Task Name\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"missionType\",\n    headerName: \"Mission Type\",\n    headerTooltip: \"Mission Type\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ComponentMission\",\n    headerName: \"Component/Mission Type\",\n    headerTooltip: \"Component/Mission Type\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"rel\",\n    headerName: \"Reliability\",\n    headerTooltip: \"Reliability\",\n    type: \"number\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 3\n  }, this)];\n\n  const AddRow = () => {\n    const defaultRow = [{\n      id: uuidv4(),\n      duration: 0,\n      missionType: \"\",\n      components: []\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n  };\n\n  const saveTaskReset = () => {\n    let allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data)); //logic for saving it to local data\n\n    let localData = {\n      'shipName': currentShip,\n      \"taskName\": currentTaskName,\n      \"data\": missionProfileData\n    };\n    console.log(localData);\n    localStorage.setItem(`${currentShip}_${currentTaskName}`, JSON.stringify(localData));\n    gridApi.selectAll();\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    setMissionData(allRowData);\n  };\n\n  const deleteRows = () => {\n    debugger;\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    let allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    setMissionData(allRowData); // console.log(selectedRows);\n  };\n\n  const handleEventCheck = () => {\n    let start = moment(startDate).subtract(1, \"day\");\n    let end = moment(endDate).add(1, \"day\");\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\n    console.log(total);\n    let days = {\n      working: 0,\n      down: 0,\n      maintenance: 0,\n      total: total\n    };\n    events.forEach(event => {\n      if (event.start < end && event.end > start) {\n        if (event.start >= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start >= start && event.end >= end) {\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end <= end) {\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        } else if (event.start <= start && event.end >= end) {\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\n          console.log(diff);\n          days[event.status] += Math.floor(diff);\n        }\n      }\n    });\n    setEventInfo(days);\n    setCardFlipped(!isCardFlipped);\n  };\n\n  useEffect(() => {\n    fetch(\"/task_dash_populate\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      const mission_data = data[\"missionData\"];\n      const taskNames = data[\"tasks\"];\n      const taskData = data[\"tasks_data\"];\n      const task_ship_name = data[\"ship_name\"];\n      setmissionOption(mission_data);\n      setentireData(data); // settaskOption(taskNames);      \n\n      settaskShipNameOption(task_ship_name);\n      dispatch(taskActions.onLoad({\n        'taskData': data\n      }));\n    });\n  }, []);\n  const dropDownStyle = makeStyles({\n    root: {\n      paddingLeft: 10,\n      background: \"#fff\",\n      border: \"1px solid #0263a1\",\n      borderRadius: \"5px\",\n      width: \"320px\",\n      minHeight: \"40px\",\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  });\n  const classes = dropDownStyle();\n  let arr = [];\n  let arr2 = [];\n\n  for (let i = 0; i < 50; i++) {\n    // const maxDate = Date.now();\n    // const timestamp = Math.floor(Math.random() * maxDate);\n    arr = [...arr, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    }];\n    arr2 = [...arr2, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (75 - 30 + 1)) + 30\n    }];\n  }\n\n  const [showGraph, setShowGraph] = useState(false);\n\n  const onSubmitHandler = () => {\n    // setMission(0);\n    let storedData = Object.entries(localStorage); // storedData.pop()\n\n    let fData = [];\n    storedData.forEach(ele => {\n      debugger;\n      let name = ele[0]; // let elemData = JSON.parse(ele[0])\n\n      if (name != \"settings\") {\n        fData.push(JSON.parse(ele[1]));\n      }\n    });\n\n    if (fData.length > 0) {\n      const data = {\n        \"taskName\": currentTaskName,\n        \"shipName\": currentShip,\n        \"selectedMission\": missionName.current.value,\n        \"missionProfileData\": missionProfileData\n      };\n      fetch(\"/task_rel\", {\n        method: \"POST\",\n        body: JSON.stringify(fData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(d => {\n        debugger;\n        let taskData = [];\n        let taskMissionData = [];\n        d.forEach(tData => {\n          let perMData = tData[\"data\"];\n          perMData.forEach(pTD => {\n            taskMissionData.push({\n              \"shipName\": tData[\"shipName\"],\n              \"taskName\": tData[\"taskName\"],\n              \"rel\": Math.round(pTD[\"rel\"] * 100) / 100,\n              \"missionType\": pTD[\"missionName\"],\n              \"ComponentMission\": pTD[\"missionName\"]\n            });\n            let componentRelData = pTD[\"comp_rel\"];\n            componentRelData.forEach(cTD => {\n              taskMissionData.push({\n                \"shipName\": tData[\"shipName\"],\n                \"taskName\": tData[\"taskName\"],\n                \"rel\": Math.round(cTD[\"rel\"] * 100) / 100,\n                \"missionType\": pTD[\"missionName\"],\n                \"ComponentMission\": cTD[\"compName\"]\n              });\n            });\n          });\n          taskData.push({\n            \"shipName\": tData[\"shipName\"],\n            \"taskName\": tData[\"taskName\"],\n            \"rel\": Math.round(tData[\"rel\"] * 100) / 100\n          });\n        });\n        settaskTableData(taskData);\n        settaskMissionTableData(taskMissionData);\n      });\n    } else {\n      // alert(\"Please add Mission Definition!!\")\n      setSnackBarMessage({\n        severity: \"error\",\n        message: \"Please Select data and Enter Mission Phase Data!!\",\n        showSnackBar: true\n      });\n    }\n  };\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  };\n\n  const updateFinalRowData = d => {\n    setMissionData(d);\n  };\n\n  const shipNameChange = (event, value) => {\n    debugger;\n    let tt = entireData;\n    let sNames = tt[\"task_ship_name\"][value[0][\"name\"]];\n    let fNames = [];\n    sNames.forEach(s => fNames.push({\n      \"name\": s\n    }));\n    settaskOption(fNames); // setselectedTaskShip(value)\n\n    dispatch(taskActions.updateCurrentShip({\n      'ship': value[0].name\n    }));\n  };\n\n  const TaskNameChange = (event, value) => {\n    dispatch(taskActions.updateCurrentTask({\n      'task': value[0].name\n    }));\n  };\n\n  const minThreshold = 45;\n  const maxThreshold = 60;\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Ship Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskShipNameOption,\n            getOptionLabel: option => option.name,\n            onChange: shipNameChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskOption,\n            getOptionLabel: option => option.name,\n            onChange: TaskNameChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Mission Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.missionName,\n            ref: missionName // onChange={onHandleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Threshold Reliability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.missionName,\n            ref: thReliab // onChange={onHandleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: \"2rem\"\n          },\n          onClick: onSubmitHandler,\n          children: [console.log(arr[arr.length - 1][\"uv\"] + \"hello2\"), \"Calculate Reliability\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columnDefs: ImportColumns,\n            setGrid: setGridApi,\n            gridApi: gridApi,\n            rowData: rowState,\n            tableUpdate: updateFinalRowData,\n            tableSize: 180\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tableFooter,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => AddRow(),\n            children: \"Update Mission Component Reliability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => AddRow(),\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: 10\n            },\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            onClick: () => deleteRows(),\n            children: \"Delete Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.table,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columnDefs: ImportColumns,\n            setGrid: setGridCompApi,\n            gridApi: gridCompApi,\n            rowData: rowState,\n            tableUpdate: updateFinalRowData,\n            tableSize: 180\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tableFooter,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            style: {\n              marginRight: 10\n            },\n            onClick: () => saveTaskReset(),\n            children: \"Save this Task for Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: taskTableData.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n          columnDefs: taskTableColumns,\n          setGrid: setGriTaskdApi,\n          gridApi: gridTaskApi,\n          rowData: taskTableData,\n          tableUpdate: () => {},\n          tableSize: 180\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: taskTableData.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n          columnDefs: taskMissionTableColumns,\n          setGrid: setgridMissionApi,\n          gridApi: gridMissionApi,\n          rowData: taskMissionTableData,\n          tableUpdate: () => {},\n          tableSize: 290\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDashboard, \"FDLSiEeqzCYqE41Pgs472/6uaO0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = TaskDashboard;\nexport default TaskDashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MissionData\");\n$RefreshReg$(_c2, \"TaskDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/TaskDashboard/TaskDashboard.js"],"names":["React","useState","useEffect","useRef","useCallback","InputLabel","TextField","makeStyles","Button","Switch","Input","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Label","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","AgGridColumn","MomentUtils","Navigation","styles","moment","CustomSelect","ReliabilityChart","MissionSlider","AddCircleOutlineIcon","Autocomplete","Loader","EventCalendar","data","subSystemLevelData","events","mainData","ReactCardFlip","Table","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","RenderMultipleComponent","taskActions","useDispatch","useSelector","MissionData","props","missionData","style","target","mission","actual","map","name","rel","toFixed","textAlign","probabilityHead","probability","prob","TaskDashboard","gridApi","setGridApi","gridCompApi","setGridCompApi","gridTaskApi","setGriTaskdApi","gridMissionApi","setgridMissionApi","missionProfileData","setMissionData","rowState","setRows","rowCompState","setCompRows","dispatch","ParallelIds","setParallelIds","d","console","log","shipOption","setshipOption","taskOption","settaskOption","missionOption","setmissionOption","taskShipNameOption","settaskShipNameOption","loading","setLoading","selectedTaskShip","setselectedTaskShip","selectedTaskName","setselectedTaskName","selectedShipName","setselectedShipName","showSubsystem","setSubSystem","startDate","setStartDate","Date","isCardFlipped","setCardFlipped","currentMission","setMission","eqDataOption","setEqDataOption","taskTableData","settaskTableData","taskMissionTableData","settaskMissionTableData","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","selectedEqName","setEquipmentName","entireData","setentireData","selectedMissionName","setMissionName","graphData","setGraphData","missionPhaseGraphData","setMissionPhaseGraphData","currentShip","state","taskData","currentTaskName","subSystemData","setSubSystemData","eventInfo","setEventInfo","cardData","setCardData","missionName","thReliab","handleStartDateChange","date","endDate","setEndDate","handleEndDateChange","ImportColumns","values","taskTableColumns","taskMissionTableColumns","AddRow","defaultRow","id","duration","missionType","components","applyTransaction","add","saveTaskReset","allRowData","forEachNode","node","push","localData","localStorage","setItem","JSON","stringify","selectAll","selectedRows","getSelectedRows","remove","deleteRows","handleEventCheck","start","subtract","end","total","days","working","down","maintenance","forEach","event","diff","status","Math","floor","fetch","method","headers","Accept","then","res","json","mission_data","taskNames","task_ship_name","onLoad","dropDownStyle","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","classes","arr","arr2","i","getTime","random","toISOString","slice","uv","showGraph","setShowGraph","onSubmitHandler","storedData","Object","entries","fData","ele","parse","length","current","value","body","taskMissionData","tData","perMData","pTD","round","componentRelData","cTD","onHandleSnackClose","updateFinalRowData","shipNameChange","tt","sNames","fNames","s","updateCurrentShip","TaskNameChange","updateCurrentTask","minThreshold","maxThreshold","mprofile","fontWeight","color","fontSize","marginBottom","option","params","InputProps","disableUnderline","marginTop","table","tableFooter","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n// import styles from \"./TaskDashboard.module.css\";\r\nimport {  InputLabel, TextField,makeStyles,Button, Switch, Input} from \"@material-ui/core\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Label,ReferenceLine } from 'recharts';\r\n// import { arr,arr2 } from \"./data\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport styles from \"./tDashboard.module.css\";\r\nimport moment from \"moment\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport ReliabilityChart from \"../Reliability Dashboard/ReliabilityChart\";\r\nimport MissionSlider from \"../Reliability Dashboard/MissionSlider\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport EventCalendar from \"../Reliability Dashboard/EventCalendar\";\r\nimport { data, subSystemLevelData, events, mainData } from \"../Reliability Dashboard/DashboardData\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n// import RenderParallelComponent from \"../systen_configuration/redundancy/RenderParallelComponent\";\r\nimport RenderMultipleComponent from \"./TaskRenderMultipleComponent\";\r\nimport { taskActions } from \"../../store/taskStore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst MissionData = (props) => {\r\n  \r\n  return (\r\n    <div className={styles.missionData} style={props.style}>\r\n      <div className={styles.target}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-target\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#374c93\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"1\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"9\" />\r\n        </svg>{\" \"}\r\n        Target: {props.mission.target}%\r\n      </div>\r\n      <div className={styles.actual}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          class=\"icon icon-tabler icon-tabler-shield-check\"\r\n          width=\"14\"\r\n          height=\"14\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke-width=\"1.5\"\r\n          stroke=\"#f8f8f8\"\r\n          fill=\"none\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <path d=\"M9 12l2 2l4 -4\" />\r\n          <path d=\"M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3\" />\r\n        </svg>\r\n        Actual:\r\n        {props.mission.actual.map((data) => {\r\n          return (\r\n            <>\r\n              <div>\r\n                {data.name} {data.rel.toFixed(2)}%\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <div className={styles.probabilityHead}>Probability of Achieving</div>\r\n        <div className={styles.probability}>\r\n          {props.mission.actual.map((data) => {\r\n            return (\r\n              <>\r\n                <div>\r\n                  {data.name}{\" \"}\r\n                  {data.prob.toFixed(2) == 100\r\n                    ? \">99%\"\r\n                    : `${data.prob.toFixed(2)}%`}\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst TaskDashboard = () => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [gridCompApi, setGridCompApi] = useState(null);\r\n  const [gridTaskApi, setGriTaskdApi] = useState(null);\r\n  const [gridMissionApi, setgridMissionApi] = useState(null);\r\n  const [missionProfileData, setMissionData] = useState([]);\r\n  const [rowState, setRows] = useState([]);\r\n  const [rowCompState, setCompRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let ParallelIds = [];\r\n  const setParallelIds = (d) => {\r\n    console.log(\"This is shit!!\")\r\n    console.log(d)\r\n    ParallelIds = d;\r\n  };\r\n  \r\n  const [shipOption, setshipOption] = useState([]);\r\n  const [taskOption, settaskOption] = useState([]);\r\n  const [missionOption, setmissionOption] = useState([]);\r\n  const [taskShipNameOption, settaskShipNameOption] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedTaskShip, setselectedTaskShip] = useState(\"\");\r\n  const [selectedTaskName, setselectedTaskName] = useState(\"\");\r\n  const [selectedShipName, setselectedShipName] = useState(\"\");\r\n\r\n  // Reliability Dashboard\r\n  const [showSubsystem, setSubSystem] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const [isCardFlipped, setCardFlipped] = useState(false);\r\n\r\n  const [currentMission, setMission] = useState(0);\r\n  const [eqDataOption, setEqDataOption] = useState([]);\r\n\r\n  const [taskTableData, settaskTableData] = useState([]);\r\n  const [taskMissionTableData, settaskMissionTableData] = useState([]);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const [selectedEqName, setEquipmentName] = useState(null);\r\n  const [entireData, setentireData] = useState(null);\r\n  // const [selectedShipName, setShipName] = useState(null);\r\n  const [selectedMissionName, setMissionName] = useState(null);\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const [missionPhaseGraphData, setMissionPhaseGraphData] = useState([]);\r\n  const currentShip = useSelector((state) => state.taskData.currentShip);\r\n  const currentTaskName = useSelector((state) => state.taskData.currentTaskName);\r\n  const [subSystemData, setSubSystemData] = useState([]);\r\n  const [eventInfo, setEventInfo] = useState(null);\r\n  const [cardData, setCardData] = useState(null);\r\n  const missionName = useRef()\r\n  const thReliab = useRef()\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n  };\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n  };\r\n  const ImportColumns = [\r\n    <AgGridColumn\r\n      field=\"missionType\"\r\n      headerName=\"Mission Type\"\r\n      headerTooltip=\"Mission Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      checkboxSelection={true}\r\n      cellEditorParams={{\r\n        values: [\r\n          \"\",\r\n          \"Harbour\",\r\n          \"Entry Leaving Harbour\",\r\n          \"Cruise\",\r\n          \"Defense Station\",\r\n          \"Action Station\",\r\n        ],\r\n      }}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n    field=\"duration\"\r\n    headerName=\"Duration\"\r\n    headerTooltip=\"Duration\"\r\n    type=\"number\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  ];\r\n\r\n  // <AgGridColumn\r\n  //     field=\"component\"\r\n  //     headerName=\"Select Component for Mission\"\r\n  //     headerTooltip=\"Select Component for Mission\"\r\n  //     // cellEditor=\"agSelectCellEditor\"\r\n  //     cellEditorFramework={RenderMultipleComponent}\r\n  //     cellEditorParams={{\r\n  //       setParallelIds: setParallelIds,\r\n  //       label: \"Select Component for Mission\",\r\n  //       isMultiple: true,\r\n  //       currentTask: selectedTaskName\r\n  //     }}\r\n  //     //onCellClicked={onCellChanged}\r\n  //     width=\"220\"\r\n  //     editable={true}\r\n  //   />\r\n\r\n  const taskTableColumns = [\r\n    <AgGridColumn\r\n    field=\"shipName\"\r\n    headerName=\"Ship Name\"\r\n    headerTooltip=\"Ship Name\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n    <AgGridColumn\r\n    field=\"taskName\"\r\n    headerName=\"Task Name\"\r\n    headerTooltip=\"Task Name\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  <AgGridColumn\r\n    field=\"rel\"\r\n    headerName=\"Reliability\"\r\n    headerTooltip=\"Reliability\"\r\n    type=\"number\"\r\n    width={100}\r\n    editable={true}\r\n  />\r\n  ];\r\n  const taskMissionTableColumns = [\r\n    <AgGridColumn\r\n    field=\"shipName\"\r\n    headerName=\"Ship Name\"\r\n    headerTooltip=\"Ship Name\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n    <AgGridColumn\r\n    field=\"taskName\"\r\n    headerName=\"Task Name\"\r\n    headerTooltip=\"Task Name\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  <AgGridColumn\r\n    field=\"missionType\"\r\n    headerName=\"Mission Type\"\r\n    headerTooltip=\"Mission Type\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  <AgGridColumn\r\n    field=\"ComponentMission\"\r\n    headerName=\"Component/Mission Type\"\r\n    headerTooltip=\"Component/Mission Type\"\r\n    width={100}\r\n    editable={true}\r\n  />,\r\n  <AgGridColumn\r\n    field=\"rel\"\r\n    headerName=\"Reliability\"\r\n    headerTooltip=\"Reliability\"\r\n    type=\"number\"\r\n    width={100}\r\n    editable={true}\r\n  />\r\n  ];\r\n\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: uuidv4(),\r\n        duration: 0,\r\n        missionType: \"\",\r\n        components: []\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n  };\r\n  const saveTaskReset = () => {\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    //logic for saving it to local data\r\n    let localData = {'shipName': currentShip, \"taskName\": currentTaskName, \"data\": missionProfileData} \r\n    console.log(localData)\r\n    localStorage.setItem(`${currentShip}_${currentTaskName}`, JSON.stringify(localData));\r\n    gridApi.selectAll();\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    setMissionData(allRowData)\r\n  }\r\n  const deleteRows = () => {\r\n    debugger;\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    setMissionData(allRowData)\r\n    // console.log(selectedRows);\r\n  };\r\n\r\n  const handleEventCheck = () => {\r\n    let start = moment(startDate).subtract(1, \"day\");\r\n    let end = moment(endDate).add(1, \"day\");\r\n    let total = (end - start) / (1000 * 3600 * 24) - 1;\r\n    console.log(total);\r\n    let days = { working: 0, down: 0, maintenance: 0, total: total };\r\n    events.forEach((event) => {\r\n      if (event.start < end && event.end > start) {\r\n        if (event.start >= start && event.end <= end) {\r\n          let diff =\r\n            (moment(event.end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start >= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(event.start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end <= end) {\r\n          let diff = (moment(event.end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        } else if (event.start <= start && event.end >= end) {\r\n          let diff = (moment(end) - moment(start)) / (1000 * 3600 * 24);\r\n          console.log(diff);\r\n\r\n          days[event.status] += Math.floor(diff);\r\n        }\r\n      }\r\n    });\r\n    setEventInfo(days);\r\n    setCardFlipped(!isCardFlipped);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"/task_dash_populate\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const mission_data = data[\"missionData\"];\r\n        const taskNames = data[\"tasks\"]\r\n        const taskData = data[\"tasks_data\"]\r\n        const task_ship_name = data[\"ship_name\"]\r\n        setmissionOption(mission_data);\r\n        setentireData(data)\r\n        // settaskOption(taskNames);      \r\n        settaskShipNameOption(task_ship_name)\r\n        dispatch(taskActions.onLoad({'taskData': data}))\r\n      });\r\n  }, []);\r\n\r\n\r\n  const dropDownStyle = makeStyles({\r\n    root: {\r\n      paddingLeft: 10,\r\n      background: \"#fff\",\r\n      border: \"1px solid #0263a1\",\r\n      borderRadius: \"5px\",\r\n      width: \"320px\",\r\n      minHeight: \"40px\",\r\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    inputRoot:{\r\n      width: '100%'\r\n    },\r\n  });\r\n  const classes=dropDownStyle();\r\n  let arr=[]\r\n  let arr2=[]\r\n  for(let i=0;i<50;i++){\r\n    // const maxDate = Date.now();\r\n    // const timestamp = Math.floor(Math.random() * maxDate);\r\n    arr=[...arr,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (80 - 30 + 1)) + 30}]\r\n\r\n    arr2=[...arr2,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (75 - 30 + 1)) + 30}]\r\n  }\r\n  const [showGraph,setShowGraph]=useState(false);\r\n\r\n  const onSubmitHandler = () => { \r\n    // setMission(0);\r\n    let storedData = Object.entries(localStorage)\r\n    // storedData.pop()\r\n    let fData = []\r\n    storedData.forEach(ele => {\r\n      debugger;\r\n      let name = ele[0]\r\n      // let elemData = JSON.parse(ele[0])\r\n      if(name != \"settings\"){\r\n        fData.push(JSON.parse(ele[1]))\r\n      }\r\n    })\r\n    if(fData.length > 0){\r\n      const data = {\"taskName\": currentTaskName, \"shipName\": currentShip,\r\n       \"selectedMission\": missionName.current.value, \"missionProfileData\": missionProfileData}\r\n      fetch(\"/task_rel\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(fData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((d) => {\r\n          debugger;\r\n          let taskData = [];\r\n          let taskMissionData = [];\r\n          d.forEach((tData) => {\r\n            let perMData = tData[\"data\"]\r\n            perMData.forEach((pTD) => {\r\n              taskMissionData.push({\"shipName\": tData[\"shipName\"], \"taskName\": tData[\"taskName\"], \r\n              \"rel\": Math.round(pTD[\"rel\"]*100)/100, \"missionType\": pTD[\"missionName\"], \"ComponentMission\": pTD[\"missionName\"]})\r\n              let componentRelData = pTD[\"comp_rel\"]\r\n              componentRelData.forEach((cTD) => {\r\n                taskMissionData.push({\"shipName\": tData[\"shipName\"], \"taskName\": tData[\"taskName\"], \r\n              \"rel\": Math.round(cTD[\"rel\"]*100)/100, \"missionType\": pTD[\"missionName\"], \"ComponentMission\": cTD[\"compName\"]})\r\n              })\r\n            })\r\n            taskData.push({\"shipName\": tData[\"shipName\"], \"taskName\": tData[\"taskName\"], \"rel\": Math.round(tData[\"rel\"]*100)/100})\r\n          });\r\n          settaskTableData(taskData)\r\n          settaskMissionTableData(taskMissionData)\r\n        });\r\n    }else{\r\n      // alert(\"Please add Mission Definition!!\")\r\n      setSnackBarMessage({\r\n        severity: \"error\",\r\n        message: \"Please Select data and Enter Mission Phase Data!!\",\r\n        showSnackBar: true,\r\n      });      \r\n    }\r\n    \r\n  };\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const updateFinalRowData = (d) => {\r\n    setMissionData(d);\r\n  };\r\n\r\n  const shipNameChange = (event, value) => {\r\n    debugger;\r\n    let tt = entireData;\r\n    let sNames = tt[\"task_ship_name\"][value[0][\"name\"]]\r\n    let fNames = []\r\n    sNames.forEach(s => fNames.push({\"name\": s}))\r\n    settaskOption(fNames)\r\n    // setselectedTaskShip(value)\r\n    dispatch(taskActions.updateCurrentShip({'ship': value[0].name}))\r\n  }\r\n  const TaskNameChange = (event, value) => {\r\n    dispatch(taskActions.updateCurrentTask({'task': value[0].name}))\r\n  }\r\n  const minThreshold=45\r\n  const maxThreshold=60\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n            <CustomSelect fields={['a','b','c','d','e']}/>\r\n              \r\n           \r\n            \r\n          </div> */}\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskShipNameOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {shipNameChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Task Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {TaskNameChange}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          \r\n\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n               Mission Name\r\n            </InputLabel>\r\n\r\n            {/* <TextField ref={missionName}   id=\"outlined-basic\" variant=\"outlined\" /> */}\r\n            <input\r\n            className={styles.missionName}\r\n                    ref={missionName}\r\n                    // onChange={onHandleChange}\r\n                  ></input>\r\n            \r\n          </div>\r\n\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n               Threshold Reliability\r\n            </InputLabel>\r\n\r\n            {/* <TextField ref={missionName}   id=\"outlined-basic\" variant=\"outlined\" /> */}\r\n            <input\r\n            className={styles.missionName}\r\n                    ref={thReliab}\r\n                    // onChange={onHandleChange}\r\n                  ></input>\r\n            \r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginTop: \"2rem\",\r\n            }}\r\n            onClick={onSubmitHandler} \r\n          >{console.log(arr[arr.length-1][\"uv\"]+\"hello2\")}\r\n            Calculate Reliability\r\n          </Button>\r\n         \r\n          \r\n        </div>\r\n        \r\n        <div>\r\n          <div className={styles.table}>\r\n          <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n        tableSize= {180}\r\n      />\r\n          </div>\r\n      <div className={styles.tableFooter}>\r\n      <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Update Mission Component Reliability\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div>\r\n      <div className={styles.table}>\r\n      <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridCompApi}\r\n        gridApi={gridCompApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n        tableSize= {180}\r\n      />\r\n      </div>\r\n      <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              style={{ marginRight: 10 }}\r\n              onClick={() => saveTaskReset()}\r\n            >\r\n              Save this Task for Comparison\r\n            </Button>\r\n          </div>\r\n        {/* <div style={{ width: \"300px\" }}>\r\n        <TextField id=\"outlined-basic\" label=\"Mission Name\" \r\n        variant=\"outlined\" defaultValue=\"Temp Mission\" />\r\n          </div>\r\n        <div style={{ width: \"300px\" }}>\r\n        <TextField id=\"outlined-basic\" label=\"Harbour Duration\"\r\n         variant=\"outlined\" defaultValue=\"0\" type=\"number\"   />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Entry Leaving Harbour Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Cruise Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Defence Duration\"\r\n           variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n          <TextField id=\"outlined-basic\" label=\"Action Duration\" \r\n          variant=\"outlined\" defaultValue=\"0\" type=\"number\" />\r\n          </div> */}\r\n        \r\n        </div>\r\n\r\n        <div className={styles.table}>\r\n          {taskTableData.length > 0 && \r\n          <Table columnDefs={taskTableColumns}\r\n          setGrid={setGriTaskdApi}\r\n          gridApi={gridTaskApi}\r\n          rowData={taskTableData}\r\n          tableUpdate={() => {}}\r\n          tableSize= {180}>\r\n            </Table>}\r\n        </div>\r\n\r\n        <div className={styles.table}>\r\n          {taskTableData.length > 0 && \r\n          <Table columnDefs={taskMissionTableColumns}\r\n          setGrid={setgridMissionApi}\r\n          gridApi={gridMissionApi}\r\n          rowData={taskMissionTableData}\r\n          tableUpdate={() => {}}\r\n          tableSize= {290}></Table>}\r\n        </div>\r\n        \r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default TaskDashboard;\r\n"]},"metadata":{},"sourceType":"module"}