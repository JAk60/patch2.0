{"ast":null,"code":"var _jsxFileName = \"E:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\ModifyandDisplay\\\\ModifyandDisplayMaintenance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from '../../../components/navigation/Navigation';\nimport styles from \"./ModifyandDisplayMaintenance.module.css\";\nimport UserSelection from '../../../ui/userSelection/userSelection';\nimport { Button, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from '../../../ui/Form/AutoSelect';\nimport { AgGridColumn } from 'ag-grid-react';\nimport { v4 as uuid } from 'uuid';\nimport Table from '../../../ui/Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModifyandDisplayMaintenance = props => {\n  _s();\n\n  var _matchingItems$;\n\n  // const rowData = []\n  const [rowData, setRowData] = useState([]);\n  const [tableRows, setTableRows] = useState([]);\n  const DCcolumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"name\",\n    headerName: \"Parameter Name\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"failure_mode_id\",\n    headerName: \"Failure Mode\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level Name\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"min_value\",\n    headerName: \"Min Value\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"max_value\",\n    headerName: \"Max Value\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"unit\",\n    headerName: \"Unit\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"threshold\",\n    headerName: \"Threshold\",\n    type: \"number\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)];\n  const dispatch = useDispatch();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  let fData = useSelector(state => state.treeData.treeData);\n  const sData = useSelector(state => state.userSelection.componentsData);\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\n  const matchingId = (_matchingItems$ = matchingItems[0]) === null || _matchingItems$ === void 0 ? void 0 : _matchingItems$.id;\n\n  const onLoadTreeStructure = () => {\n    const payload = {\n      system: currentSelection[\"equipmentName\"],\n      ship_name: currentSelection[\"shipName\"]\n    };\n\n    if (matchingId) {\n      payload.component_id = matchingId;\n    }\n\n    console.log(payload);\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      console.log(failureModes);\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD\n      }));\n      dispatch(treeDataActions.setFailureModes(failureModes));\n    });\n  };\n\n  const [nextOption, setNext] = useState('assignMaintenance');\n  const [selectedComponent, setComponent] = useState(null);\n\n  const selectOnChange = (e, value) => {\n    debugger;\n    setComponent(value);\n  };\n\n  const handleNextChange = e => {\n    setNext(e.target.value);\n  };\n\n  const updateFinalRowData = allRows => {\n    setTableRows(allRows);\n  };\n\n  const deleteProfile = () => {\n    if (selectedComponent != null) {\n      fetch(\"/fetch_condition_monitoring\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          system: selectedComponent,\n          type: \"delete\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(d => {\n        console.log(d);\n      });\n    } else {\n      alert(\"Please select component first!!\");\n    }\n  };\n\n  const updateTable = () => {\n    fetch(\"/fetch_condition_monitoring\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: tableRows,\n        type: \"update\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n    });\n  };\n\n  const submitForDisplay = () => {\n    debugger;\n\n    if (selectedComponent == null) {\n      alert(\"Please select component\");\n    } else {\n      fetch(\"/fetch_condition_monitoring\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          system: selectedComponent,\n          type: \"display\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(d => {\n        setRowData(d);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.btn,\n        onClick: onLoadTreeStructure,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tree,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.treeChild,\n          children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n            height: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.selectComponent,\n            children: [\"Select Component\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n              fields: fData,\n              onChange: selectOnChange,\n              value: selectedComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.submitbtn,\n            onClick: submitForDisplay,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.submitbtn,\n            onClick: updateTable,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.submitbtn,\n            onClick: deleteProfile,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Delete Param Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tablediv,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columnDefs: DCcolumnDefs,\n            rowData: rowData,\n            tableUpdate: updateFinalRowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModifyandDisplayMaintenance, \"sfdiTtkY7WPxpy8BltmTpcRHOt4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ModifyandDisplayMaintenance;\nexport default ModifyandDisplayMaintenance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyandDisplayMaintenance\");","map":{"version":3,"sources":["E:/NetraB/netra/src/pages/Maintenance Allocation/ModifyandDisplay/ModifyandDisplayMaintenance.js"],"names":["React","useState","Navigation","styles","UserSelection","Button","RadioGroup","FormControlLabel","Radio","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","AgGridColumn","v4","uuid","Table","ModifyandDisplayMaintenance","props","rowData","setRowData","tableRows","setTableRows","DCcolumnDefs","dispatch","currentSelection","state","userSelection","fData","treeData","sData","componentsData","currentEquipmentName","matchingItems","filter","item","name","matchingId","id","onLoadTreeStructure","payload","system","ship_name","component_id","console","log","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","setFailureModes","nextOption","setNext","selectedComponent","setComponent","selectOnChange","e","value","handleNextChange","target","updateFinalRowData","allRows","deleteProfile","type","alert","updateTable","submitForDisplay","btn","content","tree","treeChild","rightSection","selectComponent","submitbtn","tablediv"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navigation from '../../../components/navigation/Navigation';\r\nimport styles from \"./ModifyandDisplayMaintenance.module.css\";\r\nimport UserSelection from '../../../ui/userSelection/userSelection'\r\nimport { Button,RadioGroup,FormControlLabel,Radio } from '@material-ui/core';\r\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from '../../../ui/Form/AutoSelect';\r\nimport { AgGridColumn } from 'ag-grid-react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport Table from '../../../ui/Table/Table'\r\n\r\nconst ModifyandDisplayMaintenance=(props)=> {\r\n\r\n  // const rowData = []\r\n  const [rowData, setRowData] = useState([])\r\n  const [tableRows, setTableRows] = useState([])\r\n  const DCcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"name\"\r\n      headerName=\"Parameter Name\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"failure_mode_id\"\r\n      headerName=\"Failure Mode\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"level\"\r\n      headerName=\"Level Name\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"min_value\"\r\n      headerName=\"Min Value\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"max_value\"\r\n      headerName=\"Max Value\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"unit\"\r\n      headerName=\"Unit\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"threshold\"\r\n      headerName=\"Threshold\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n  ];\r\n    const dispatch = useDispatch();\r\n    const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      );\r\n    let fData = useSelector((state) => state.treeData.treeData);\r\n    const sData = useSelector((state) => state.userSelection.componentsData);\r\n\r\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\r\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\r\n\r\n  const matchingId = matchingItems[0]?.id;\r\n  const onLoadTreeStructure = () => {\r\n    const payload = {\r\n      system: currentSelection[\"equipmentName\"],\r\n      ship_name: currentSelection[\"shipName\"],\r\n    };\r\n  \r\n    if (matchingId) {\r\n      payload.component_id = matchingId;\r\n    }\r\n    console.log(payload)\r\n    fetch(\"/fetch_system\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        console.log(d);\r\n        let treeD = d[\"treeD\"];\r\n        let failureModes = d[\"failureMode\"];\r\n        console.log(failureModes)\r\n        dispatch(\r\n          treeDataActions.setTreeData({\r\n            treeData: treeD,\r\n          }),\r\n        );\r\n        dispatch(\r\n          treeDataActions.setFailureModes(failureModes)\r\n        )\r\n      });\r\n  };\r\n      const[nextOption,setNext]=useState('assignMaintenance')\r\n      const[selectedComponent,setComponent]=useState(null)\r\n      const selectOnChange=(e,value)=>{\r\n        debugger\r\n        setComponent(value)\r\n      }\r\n      const handleNextChange=(e)=>{\r\n        setNext(e.target.value)\r\n      }\r\n      const updateFinalRowData = (allRows) => {\r\n        setTableRows(allRows);\r\n      };\r\n      const deleteProfile = () => {\r\n        if(selectedComponent != null){\r\n          fetch(\"/fetch_condition_monitoring\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              system: selectedComponent,\r\n              type: \"delete\"\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          })\r\n            .then((res) => res.json())\r\n            .then((d) => {\r\n              console.log(d)\r\n            });\r\n        }else{\r\n          alert(\"Please select component first!!\")\r\n        }\r\n      }\r\n      const updateTable = () => {\r\n        fetch(\"/fetch_condition_monitoring\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            system: tableRows,\r\n            type: \"update\"\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            console.log(d)\r\n          });\r\n      }\r\n      const submitForDisplay = () => {\r\n        debugger;\r\n        if(selectedComponent == null){\r\n          alert(\"Please select component\")\r\n        }else{\r\n          fetch(\"/fetch_condition_monitoring\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              system: selectedComponent,\r\n              type: \"display\"\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          })\r\n            .then((res) => res.json())\r\n            .then((d) => {\r\n              setRowData(d)\r\n            });\r\n        }\r\n      }\r\n    \r\n\r\n    return (\r\n      <>\r\n      <Navigation/>\r\n      <div className={styles.userSelection}>\r\n          <UserSelection/>\r\n          <Button className={styles.btn} onClick={onLoadTreeStructure} variant='contained' color='primary'>Submit</Button>\r\n      </div>\r\n          \r\n          <div className={styles.content}>\r\n            <div className={styles.tree}>\r\n              <div className={styles.treeChild}>\r\n                {/* <FullscreenIcon style={{ float: \"right\", marginRight: \"25px\" }} /> */}\r\n                <TreeComponent height='600px'></TreeComponent>\r\n                {/* <div></div> */}\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightSection}>\r\n              <div>\r\n              <div className={styles.selectComponent}>\r\n                Select Component\r\n                <AutoSelect\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              <Button className={styles.submitbtn} onClick={submitForDisplay} variant='contained' color='primary' >Submit</Button>\r\n              <Button className={styles.submitbtn} onClick={updateTable} variant='contained' color='primary' >Update</Button>\r\n              <Button className={styles.submitbtn} onClick={deleteProfile} variant='contained' color='primary' >Delete Param Profile</Button>\r\n              </div>\r\n              <div className={styles.tablediv}>\r\n                  <Table  columnDefs={DCcolumnDefs}\r\n                    rowData={rowData}\r\n                    tableUpdate={updateFinalRowData}\r\n                     />\r\n              </div>\r\n              </div>     \r\n              </div>\r\n      \r\n    </>\r\n    );\r\n  }\r\n  export default ModifyandDisplayMaintenance;"]},"metadata":{},"sourceType":"module"}