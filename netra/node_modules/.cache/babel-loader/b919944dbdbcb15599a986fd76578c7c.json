{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\TaskDashboard\\\\TaskDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./TaskDashboard.module.css\";\nimport { InputLabel, TextField, makeStyles, Button } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Label, ReferenceLine } from 'recharts'; // import { arr,arr2 } from \"./data\";\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport { SelectWithLimit } from \"../../ui/Form/SelectWithLimit\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskDashboard = () => {\n  _s();\n\n  const [shipOption, setshipOption] = useState([]);\n  const [taskOption, settaskOption] = useState([]);\n  const [missionOption, setmissionOption] = useState([]);\n  useEffect(() => {\n    fetch(\"/task_dash_populate\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      debugger;\n      const mission_data = data[\"missionData\"];\n      const taskNames = data[\"tasks\"];\n      setmissionOption(mission_data);\n      settaskOption(taskNames);\n    });\n  }, []);\n  const dropDownStyle = makeStyles({\n    root: {\n      paddingLeft: 10,\n      background: \"#fff\",\n      border: \"1px solid #0263a1\",\n      borderRadius: \"5px\",\n      width: \"320px\",\n      minHeight: \"40px\",\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  });\n  const classes = dropDownStyle();\n  let arr = [];\n  let arr2 = [];\n\n  for (let i = 0; i < 50; i++) {\n    // const maxDate = Date.now();\n    // const timestamp = Math.floor(Math.random() * maxDate);\n    arr = [...arr, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    }];\n    arr2 = [...arr2, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (75 - 30 + 1)) + 30\n    }];\n  }\n\n  const [showGraph, setShowGraph] = useState(false);\n\n  const getSelectedValues = (d, selectType) => {// console.log(selectedEqName, selectedShipName, selectedMissionName);\n    // if (selectType === \"equipmentName\") {\n    //   setEquipmentName(d);\n    // }\n    // if (selectType === \"shipName\") {\n    //   var filteredEqData = [];\n    //   d.map((element) => {\n    //     var xx = userSelectionData\n    //       .filter((x) => x.shipName === element)\n    //       .map((x) => {\n    //         return { name: x.equipmentName, parent: element };\n    //       });\n    //     filteredEqData = [...filteredEqData, ...xx];\n    //     return null;\n    //   });\n    //   setEqDataOption(filteredEqData);\n    //   setShipName(d);\n    // }\n    // if (selectType === \"missionName\") {\n    //   setMissionName(d);\n    // }\n  };\n\n  const onSubmitHandler = () => {\n    // setGraphData([]);\n    // setSubSystem(false);\n    // setLoading(true);\n    const data = {\n      taskName: taskOption\n    }; // setMission(0);\n    // console.log(missionInfo);\n\n    fetch(\"/rel_estimate\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        data: data\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n    });\n  };\n\n  const minThreshold = 45;\n  const maxThreshold = 60;\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectWithLimit, {\n            limit: 3,\n            options: taskOption,\n            getSelectedValues: getSelectedValues,\n            selectType: \"taskName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Mission Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectWithLimit, {\n            limit: 3,\n            options: missionOption,\n            getSelectedValues: getSelectedValues,\n            selectType: \"missionName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: \"2rem\"\n          },\n          onClick: onSubmitHandler,\n          children: [console.log(arr[arr.length - 1][\"uv\"] + \"hello2\"), \"Submit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), showGraph ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.midSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rchart,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Parameter 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n              width: 550,\n              height: 300,\n              data: arr2,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                tick: false,\n                label: {\n                  value: \"Date\",\n                  position: \"insideBottom\",\n                  dy: 10\n                },\n                height: 45\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [30, 75],\n                label: {\n                  value: 'Vibration Data',\n                  angle: -90,\n                  position: 'center',\n                  paddingRight: '20px',\n                  dy: -10\n                },\n                width: 80\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 45,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 60,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                horizontal: false,\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: maxThreshold >= arr2[arr2.length - 1][\"uv\"] && arr2[arr2.length - 1][\"uv\"] >= minThreshold ? \"green\" : \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rchart,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Parameter 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n              width: 550,\n              height: 300,\n              data: arr2,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                tick: false,\n                label: {\n                  value: \"Date\",\n                  position: \"insideBottom\",\n                  dy: 10\n                },\n                height: 45\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [30, 75],\n                label: {\n                  value: 'Vibration Data',\n                  angle: -90,\n                  position: 'center',\n                  paddingRight: '20px',\n                  dy: -10\n                },\n                width: 80\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 45,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 60,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                horizontal: false,\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: maxThreshold >= arr2[arr2.length - 1][\"uv\"] && arr2[arr2.length - 1][\"uv\"] >= minThreshold ? \"green\" : \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rchart,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Parameter 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n              width: 550,\n              height: 300,\n              data: arr,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                tick: false,\n                label: {\n                  value: \"Date\",\n                  position: \"insideBottom\",\n                  dy: 10\n                },\n                height: 45\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [30, 80],\n                label: {\n                  value: 'Vibration Data',\n                  angle: -90,\n                  position: 'center',\n                  paddingRight: '20px',\n                  dy: -10\n                },\n                width: 80\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 45,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 60,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                horizontal: false,\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"pv\",\n                stroke: \"#82ca9d\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rchart,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Parameter 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n              width: 500,\n              height: 300,\n              data: arr,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                label: {\n                  value: \"Date\",\n                  position: \"insideBottom\",\n                  dy: 10\n                },\n                height: 45,\n                tick: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [30, 80],\n                label: {\n                  value: 'Vibration Data',\n                  angle: -90,\n                  position: 'center',\n                  paddingRight: '20px',\n                  dy: -10\n                },\n                width: 80\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 40,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                y: 60,\n                stroke: \"red\",\n                strokeDasharray: \"6 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                horizontal: false,\n                vertical: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"pv\",\n                stroke: \"#82ca9d\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDashboard, \"+KB5BzXxNaP0YlC3xLhwiTZD3aU=\");\n\n_c = TaskDashboard;\nexport default TaskDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/TaskDashboard/TaskDashboard.js"],"names":["React","useState","useEffect","styles","InputLabel","TextField","makeStyles","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Label","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","Navigation","SelectWithLimit","CustomSelect","Autocomplete","TaskDashboard","shipOption","setshipOption","taskOption","settaskOption","missionOption","setmissionOption","fetch","method","headers","Accept","then","res","json","data","mission_data","taskNames","dropDownStyle","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","classes","arr","arr2","i","name","Date","getTime","Math","random","toISOString","slice","uv","floor","showGraph","setShowGraph","getSelectedValues","d","selectType","onSubmitHandler","taskName","body","JSON","stringify","console","log","minThreshold","maxThreshold","mprofile","fontWeight","color","fontSize","marginBottom","marginTop","length","midSection","rchart","content","value","position","dy","angle","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TaskDashboard.module.css\";\r\nimport {  InputLabel, TextField,makeStyles,Button} from \"@material-ui/core\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Label,ReferenceLine } from 'recharts';\r\n// import { arr,arr2 } from \"./data\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { SelectWithLimit } from \"../../ui/Form/SelectWithLimit\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\n\r\n\r\nconst TaskDashboard = () => {\r\n  const [shipOption, setshipOption] = useState([]);\r\n  const [taskOption, settaskOption] = useState([]);\r\n  const [missionOption, setmissionOption] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/task_dash_populate\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        debugger;\r\n        const mission_data = data[\"missionData\"];\r\n        const taskNames = data[\"tasks\"]\r\n        setmissionOption(mission_data);\r\n        settaskOption(taskNames);      \r\n      });\r\n  }, []);\r\n\r\n\r\n  const dropDownStyle = makeStyles({\r\n    root: {\r\n      paddingLeft: 10,\r\n      background: \"#fff\",\r\n      border: \"1px solid #0263a1\",\r\n      borderRadius: \"5px\",\r\n      width: \"320px\",\r\n      minHeight: \"40px\",\r\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    inputRoot:{\r\n      width: '100%'\r\n    },\r\n  });\r\n  const classes=dropDownStyle();\r\n  let arr=[]\r\n  let arr2=[]\r\n  for(let i=0;i<50;i++){\r\n    // const maxDate = Date.now();\r\n    // const timestamp = Math.floor(Math.random() * maxDate);\r\n    arr=[...arr,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (80 - 30 + 1)) + 30}]\r\n\r\n    arr2=[...arr2,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (75 - 30 + 1)) + 30}]\r\n  }\r\n  const [showGraph,setShowGraph]=useState(false);\r\n\r\n  const getSelectedValues = (d, selectType) => {\r\n    // console.log(selectedEqName, selectedShipName, selectedMissionName);\r\n    // if (selectType === \"equipmentName\") {\r\n    //   setEquipmentName(d);\r\n    // }\r\n    // if (selectType === \"shipName\") {\r\n    //   var filteredEqData = [];\r\n    //   d.map((element) => {\r\n    //     var xx = userSelectionData\r\n    //       .filter((x) => x.shipName === element)\r\n    //       .map((x) => {\r\n    //         return { name: x.equipmentName, parent: element };\r\n    //       });\r\n    //     filteredEqData = [...filteredEqData, ...xx];\r\n    //     return null;\r\n    //   });\r\n    //   setEqDataOption(filteredEqData);\r\n    //   setShipName(d);\r\n    // }\r\n    // if (selectType === \"missionName\") {\r\n    //   setMissionName(d);\r\n    // }\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    // setGraphData([]);\r\n    // setSubSystem(false);\r\n    // setLoading(true);\r\n    const data = {\r\n      taskName: taskOption\r\n    };\r\n    // setMission(0);\r\n    // console.log(missionInfo);\r\n    fetch(\"/rel_estimate\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ data: data }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        console.log(d);\r\n      });\r\n  };\r\n\r\n  const minThreshold=45\r\n  const maxThreshold=60\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n            <CustomSelect fields={['a','b','c','d','e']}/>\r\n              \r\n           \r\n            \r\n          </div> */}\r\n           <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Task Name\r\n            </InputLabel>\r\n            <SelectWithLimit\r\n              limit={3}\r\n              options={taskOption}\r\n              getSelectedValues={getSelectedValues}\r\n              selectType={\"taskName\"}\r\n            />\r\n          </div>\r\n          \r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Mission Name\r\n            </InputLabel>\r\n            <SelectWithLimit\r\n              limit={3}\r\n              options={missionOption}\r\n              getSelectedValues={getSelectedValues}\r\n              selectType={\"missionName\"}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginTop: \"2rem\",\r\n            }}\r\n            onClick={onSubmitHandler} \r\n          >{console.log(arr[arr.length-1][\"uv\"]+\"hello2\")}\r\n            Submit\r\n          </Button>\r\n\r\n\r\n         \r\n          \r\n        </div>\r\n        \r\n        \r\n        \r\n            {showGraph?<div className={styles.midSection}>\r\n\r\n            <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 1</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  \r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                 \r\n                </LineChart>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 2</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                  \r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 3</div>\r\n                <LineChart width={550} height={300} data={arr}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n            \r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 4</div>\r\n                <LineChart width={500} height={300} data={arr}>\r\n                \r\n                <XAxis dataKey=\"name\" label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} tick={false} />\r\n                 \r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n\r\n                  \r\n                  <ReferenceLine y={40} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n                \r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n\r\n              \r\n             \r\n            </div>:null}\r\n            \r\n          \r\n        \r\n      </div>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default TaskDashboard;\r\n"]},"metadata":{},"sourceType":"module"}