{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netraaaa\\\\Netra\\\\netra\\\\src\\\\pages\\\\Module Selection\\\\ModuleSelection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styles from './ModuleSelection.module.css';\nimport { Paper, makeStyles, FormControlLabel, Switch, FormGroup, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '15px 0px 5px 0px',\n    paddingRight: 10,\n    paddingLeft: 10,\n    minWidth: 300,\n    background: \"#ebebeb\",\n    borderRadius: \"5px\",\n    height: 40,\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      background: \"#d1d1d1\"\n    }\n  },\n  label: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\n\nconst ModuleSelection = props => {\n  _s();\n\n  const labelClasses = LabelStyles();\n  const [sysConfig, setSysConfig] = React.useState(true);\n  const [phaseManager, setPhaseManager] = React.useState(true);\n  const [hep, setHep] = React.useState(true);\n  const [dataManager, setDataManager] = React.useState(true);\n  const [dashboard, setDashboard] = React.useState(true);\n\n  const toggleSysConfig = () => {\n    setSysConfig(prev => !prev);\n  };\n\n  const togglePhaseManager = () => {\n    setPhaseManager(prev => !prev);\n  };\n\n  const toggleHep = () => {\n    setHep(prev => !prev);\n  };\n\n  const toggleDataManager = () => {\n    setDataManager(prev => !prev);\n  };\n\n  const toggleDashboard = () => {\n    setDashboard(prev => !prev);\n  };\n\n  const save = () => {\n    let settings = {\n      'SystemConfiguration': sysConfig,\n      'PhaseManager': phaseManager,\n      'HEP': hep,\n      'DataManager': dataManager,\n      'ReliabilityDashboard': dashboard\n    };\n    localStorage.setItem('settings', JSON.stringify(settings));\n    props.setSettings(settings);\n    props.history.push('/');\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"settings\")) {\n      let settings = JSON.parse(localStorage.getItem('settings'));\n      setSysConfig(settings.SystemConfiguration);\n      setPhaseManager(settings.PhaseManager);\n      setHep(settings.HEP);\n      setDataManager(settings.DataManager);\n      setDashboard(settings.ReliabilityDashboard);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.ModulePaper,\n      elevation: 5,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/netra-logo.png\",\n          width: 60,\n          height: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"NETRA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            margin: 0\n          },\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          style: {\n            margin: 0\n          },\n          children: \"Please Select the required modules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: labelClasses,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: sysConfig,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 30\n          }, this),\n          label: \"System Configuration\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: labelClasses,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: phaseManager,\n            onChange: togglePhaseManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 30\n          }, this),\n          label: \"Phase Manager\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: labelClasses,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: hep,\n            onChange: toggleHep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 30\n          }, this),\n          label: \"HEP\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: labelClasses,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: dataManager,\n            onChange: toggleDataManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 30\n          }, this),\n          label: \"Data Manager\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: labelClasses,\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: dashboard,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 30\n          }, this),\n          label: \"Reliability Dashboard\",\n          labelPlacement: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => save(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleSelection, \"Tey+rjy2JLLYWNexgD+C3RCd/6I=\");\n\n_c = ModuleSelection;\nexport default ModuleSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleSelection\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/Module Selection/ModuleSelection.js"],"names":["React","useEffect","styles","Paper","makeStyles","FormControlLabel","Switch","FormGroup","Button","LabelStyles","root","display","justifyContent","margin","paddingRight","paddingLeft","minWidth","background","borderRadius","height","boxShadow","label","fontSize","fontWeight","ModuleSelection","props","labelClasses","sysConfig","setSysConfig","useState","phaseManager","setPhaseManager","hep","setHep","dataManager","setDataManager","dashboard","setDashboard","toggleSysConfig","prev","togglePhaseManager","toggleHep","toggleDataManager","toggleDashboard","save","settings","localStorage","setItem","JSON","stringify","setSettings","history","push","getItem","parse","SystemConfiguration","PhaseManager","HEP","DataManager","ReliabilityDashboard","container","ModulePaper","textAlign"],"mappings":"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","sourcesContent":["import React,{ useEffect } from 'react'\r\nimport styles from './ModuleSelection.module.css'\r\nimport { \r\n    Paper,\r\n    makeStyles,\r\n    FormControlLabel,\r\n    Switch,\r\n    FormGroup, \r\n    Button} \r\n    from '@material-ui/core'\r\n\r\nconst LabelStyles = makeStyles({\r\n    root: {\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        margin:'15px 0px 5px 0px',\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n        minWidth:300,\r\n        background: \"#ebebeb\",\r\n        borderRadius: \"5px\",\r\n        height: 40,\r\n        boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n        '&:hover':{\r\n            background: \"#d1d1d1\",\r\n        }\r\n    },\r\n    label: {\r\n        fontSize:20,\r\n        fontWeight:'bold',\r\n    }\r\n  });\r\n\r\nconst ModuleSelection=(props)=>{\r\n    const labelClasses=LabelStyles();\r\n\r\n    const [sysConfig, setSysConfig] = React.useState(true);\r\n    const [phaseManager, setPhaseManager] = React.useState(true);\r\n    const [hep, setHep] = React.useState(true);\r\n    const [dataManager, setDataManager] = React.useState(true);\r\n    const [dashboard, setDashboard] = React.useState(true);\r\n\r\n    const toggleSysConfig = () => {\r\n        setSysConfig((prev) => !prev);\r\n    };\r\n    const togglePhaseManager = () => {\r\n        setPhaseManager((prev) => !prev);\r\n    };\r\n    const toggleHep = () => {\r\n        setHep((prev) => !prev);\r\n    };\r\n    const toggleDataManager = () => {\r\n        setDataManager((prev) => !prev);\r\n    };\r\n    const toggleDashboard = () => {\r\n        setDashboard((prev) => !prev);\r\n    };\r\n\r\n    const save=()=>{\r\n        let settings={\r\n            'SystemConfiguration':sysConfig,\r\n            'PhaseManager':phaseManager,\r\n            'HEP':hep,\r\n            'DataManager':dataManager,\r\n            'ReliabilityDashboard':dashboard,\r\n        }\r\n        localStorage.setItem('settings',JSON.stringify(settings))\r\n        props.setSettings(settings)\r\n        props.history.push('/')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"settings\")){\r\n        let settings=JSON.parse(localStorage.getItem('settings'))\r\n        setSysConfig(settings.SystemConfiguration)\r\n        setPhaseManager(settings.PhaseManager)\r\n        setHep(settings.HEP)\r\n        setDataManager(settings.DataManager)\r\n        setDashboard(settings.ReliabilityDashboard)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        <Paper className={styles.ModulePaper} elevation={5}>\r\n            <div>\r\n                <img src='/netra-logo.png' width={60} height={60}/>\r\n                <div style={{textAlign:'center'}}>NETRA</div>\r\n            </div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h5 style={{margin:0}}>Settings</h5>\r\n                <h6 style={{margin:0}}>Please Select the required modules</h6>\r\n            </div>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={sysConfig} disabled/>}\r\n                    label=\"System Configuration\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={phaseManager} onChange={togglePhaseManager}/>}\r\n                    label=\"Phase Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={hep} onChange={toggleHep} />}\r\n                    label=\"HEP\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dataManager} onChange={toggleDataManager} />}\r\n                    label=\"Data Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dashboard} disabled/>}\r\n                    label=\"Reliability Dashboard\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </FormGroup>\r\n            <Button variant='contained' color='secondary' onClick={()=>save()}>Save</Button>\r\n        </Paper>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ModuleSelection;"]},"metadata":{},"sourceType":"module"}