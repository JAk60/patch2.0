{"ast":null,"code":"/**\r\n * Default accessor for returning a cell value for a given attribute.\r\n * This function expects to operate on either a vanilla Object or an Immutable Map.\r\n * You should override the column's cellDataGetter if your data is some other type of object.\r\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js"],"names":["defaultCellDataGetter","_ref","dataKey","rowData","get","bpfrpt_proptype_CellDataGetterParams"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AAClD,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;;AAGA,MAAI,OAAOA,OAAO,CAACC,GAAf,KAAuB,UAA3B,EAAuC;AACrC,WAAOD,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAP;AACD,GAFD,MAEO;AACL,WAAOC,OAAO,CAACD,OAAD,CAAd;AACD;AACF;AACD,SAASG,oCAAT,QAAqD,SAArD","sourcesContent":["/**\r\n * Default accessor for returning a cell value for a given attribute.\r\n * This function expects to operate on either a vanilla Object or an Immutable Map.\r\n * You should override the column's cellDataGetter if your data is some other type of object.\r\n */\r\nexport default function defaultCellDataGetter(_ref) {\r\n  var dataKey = _ref.dataKey,\r\n      rowData = _ref.rowData;\r\n\r\n  if (typeof rowData.get === 'function') {\r\n    return rowData.get(dataKey);\r\n  } else {\r\n    return rowData[dataKey];\r\n  }\r\n}\r\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";"]},"metadata":{},"sourceType":"module"}