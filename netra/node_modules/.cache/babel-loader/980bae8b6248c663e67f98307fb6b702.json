{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Data Manager\\\\historicalData\\\\expert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"../../../ui/Table/DataManagerTable\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"../DataManager.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(30),\n      height: theme.spacing(5),\n      background: \"#048ee7\",\n      color: \"white\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }\n}));\n\nconst Expert = props => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const classes = useStyles();\n  const rows = props.childList.map(x => {\n    return {\n      name: x.name,\n      id: x.id\n    };\n  });\n  const [rowState, setRows] = useState([{\n    id: rows[0].id,\n    ComponentName: rows[0].name,\n    MostLikely: \"\",\n    MaxLife: \"\",\n    MinLife: \"\",\n    componentFailure: \"\",\n    time_wo_failure: \"\"\n  }]);\n  const ExpertColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ComponentName\",\n    headerName: \"Component Name\",\n    editable: true,\n    width: 200,\n    checkboxSelection: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: rows.map(x => x.name)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MostLikely\",\n    headerName: \"Most Likely Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MaxLife\",\n    headerName: \"Maximum Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MinLife\",\n    headerName: \"Minimum Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this),\n  /*#__PURE__*/\n  // <AgGridColumn\n  //   field=\"Replacements\"\n  //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\n  //   editable={true}\n  // />,\n  _jsxDEV(AgGridColumn, {\n    field: \"componentFailure\",\n    headerName: \"Number of Component seen withour Failure\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"time_wo_failure\",\n    headerName: \"Total time without Failure\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)];\n\n  const updateFinalRowData = allRows => {\n    props.tableUpdate(allRows, \"expert\");\n  };\n\n  const AddRow = () => {\n    const defaultRow = [{\n      id: rows[0].id,\n      ComponentName: rows[0].name,\n      MostLikely: \"\",\n      MaxLife: \"\",\n      MinLife: \"\",\n      componentFailure: \"\",\n      time_wo_failure: \"\"\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        variant: \"outlined\",\n        children: \"Expert Judgement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: ExpertColumns,\n      setGrid: setGridApi,\n      gridApi: gridApi,\n      rowData: rowState,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableFooter,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => AddRow(),\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => deleteRows(),\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expert, \"J7cWlVjyeMIignRDFjm1cGXqwiI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Expert;\nexport default Expert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expert\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Data Manager/historicalData/expert.js"],"names":["React","useState","Table","AgGridColumn","Paper","makeStyles","Button","AddIcon","IconButton","DeleteIcon","styles","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","background","color","alignItems","justifyContent","Expert","props","gridApi","setGridApi","classes","rows","childList","map","x","name","id","rowState","setRows","ComponentName","MostLikely","MaxLife","MinLife","componentFailure","time_wo_failure","ExpertColumns","values","updateFinalRowData","allRows","tableUpdate","AddRow","defaultRow","applyTransaction","add","allRowData","forEachNode","node","push","data","deleteRows","selectedRows","getSelectedRows","remove","tableFooter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(30),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Expert = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      MostLikely: \"\",\r\n      MaxLife: \"\",\r\n      MinLife: \"\",\r\n      componentFailure: \"\",\r\n      time_wo_failure: \"\",\r\n    },\r\n  ]);\r\n\r\n  const ExpertColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      width={200}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MostLikely\"\r\n      headerName=\"Most Likely Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaxLife\"\r\n      headerName=\"Maximum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MinLife\"\r\n      headerName=\"Minimum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Replacements\"\r\n    //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"componentFailure\"\r\n      headerName=\"Number of Component seen withour Failure\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"time_wo_failure\"\r\n      headerName=\"Total time without Failure\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"expert\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        MostLikely: \"\",\r\n        MaxLife: \"\",\r\n        MinLife: \"\",\r\n        componentFailure: \"\",\r\n        time_wo_failure: \"\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          Expert Judgement\r\n        </Paper>\r\n      </div>\r\n      <Table\r\n        columnDefs={ExpertColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expert;\r\n"]},"metadata":{},"sourceType":"module"}