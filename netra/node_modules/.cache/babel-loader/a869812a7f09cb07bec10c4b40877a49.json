{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\RCM\\\\CreateRCM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from '../../../components/navigation/Navigation';\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\nimport UserSelection from '../../../ui/userSelection/userSelection';\nimport { Button, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from '../../../ui/Form/AutoSelect';\nimport { Route, useHistory } from 'react-router'; // import { useHistory } from \"react-router-dom\";\n// import {useNavigate} from 'react-router-dom'\n// import AssignType from './AssignType';\n\nimport AssignType from '../CreateMaintenance/AssignType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateRCM = props => {\n  _s();\n\n  var _matchingItems$;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  let fData = useSelector(state => state.treeData.treeData);\n  debugger;\n  fData = fData.filter(x => x.parentName === currentSelection[\"equipmentName\"] || x.parentId === null); //console.log(fData);\n\n  const sData = useSelector(state => state.userSelection.componentsData);\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\n  const matchingId = (_matchingItems$ = matchingItems[0]) === null || _matchingItems$ === void 0 ? void 0 : _matchingItems$.id;\n\n  const onLoadTreeStructure = () => {\n    const payload = {\n      system: currentSelection[\"equipmentName\"],\n      ship_name: currentSelection[\"shipName\"]\n    };\n\n    if (matchingId) {\n      payload.component_id = matchingId;\n    }\n\n    console.log(payload);\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      console.log(failureModes);\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD\n      }));\n      dispatch(treeDataActions.setFailureModes(failureModes));\n    });\n  };\n\n  const [selectedComponent, setComponent] = useState([]);\n\n  const selectOnChange = (e, value) => {\n    setComponent(value);\n  };\n\n  const nextLevelBtn = () => {\n    history.push('/maintenance_allocation/conduct_rcm_analysis/critical_comp');\n  };\n\n  const SaveAssemplyHandler = () => {\n    alert(\"Hello\");\n    console.log(selectedComponent);\n    fetch(\"/save_assembly_rcm\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"],\n        asm_data: selectedComponent\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      alert(d.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.btn,\n        onClick: onLoadTreeStructure,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tree,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.treeChild,\n          children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n            height: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectComponent,\n          children: [\"Select Assemblies to be included for RCM Analysis :\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n            multiple: \"multiple\",\n            fields: fData,\n            onChange: selectOnChange,\n            value: selectedComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.nextbtn,\n          onClick: nextLevelBtn,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add Information for Critical Components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.nextbtn,\n          onClick: SaveAssemplyHandler,\n          style: {\n            marginRight: \"2rem\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateRCM, \"gevLdlcxz1RdNnqTyKsQbtfnylA=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector];\n});\n\n_c = CreateRCM;\nexport default CreateRCM;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRCM\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Maintenance Allocation/RCM/CreateRCM.js"],"names":["React","useState","Navigation","styles","UserSelection","Button","RadioGroup","FormControlLabel","Radio","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","Route","useHistory","AssignType","CreateRCM","props","dispatch","history","currentSelection","state","userSelection","fData","treeData","filter","x","parentName","parentId","sData","componentsData","currentEquipmentName","matchingItems","item","name","matchingId","id","onLoadTreeStructure","payload","system","ship_name","component_id","console","log","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","setFailureModes","selectedComponent","setComponent","selectOnChange","e","value","nextLevelBtn","push","SaveAssemplyHandler","alert","asm_data","message","btn","content","tree","treeChild","rightSection","selectComponent","nextbtn","marginRight"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navigation from '../../../components/navigation/Navigation';\r\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\r\nimport UserSelection from '../../../ui/userSelection/userSelection'\r\nimport { Button,RadioGroup,FormControlLabel,Radio } from '@material-ui/core';\r\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from '../../../ui/Form/AutoSelect';\r\nimport { Route, useHistory } from 'react-router';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {useNavigate} from 'react-router-dom'\r\n// import AssignType from './AssignType';\r\nimport AssignType from '../CreateMaintenance/AssignType';\r\n\r\n\r\n\r\nconst CreateRCM=(props)=> {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      );\r\n    let fData = useSelector((state) => state.treeData.treeData);\r\n    debugger;\r\n    fData = fData.filter(x => x.parentName === currentSelection[\"equipmentName\"] || x.parentId === null)\r\n    //console.log(fData);\r\n    const sData = useSelector((state) => state.userSelection.componentsData);\r\n\r\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\r\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\r\n\r\n  const matchingId = matchingItems[0]?.id;\r\n  const onLoadTreeStructure = () => {\r\n    const payload = {\r\n      system: currentSelection[\"equipmentName\"],\r\n      ship_name: currentSelection[\"shipName\"],\r\n    };\r\n  \r\n    if (matchingId) {\r\n      payload.component_id = matchingId;\r\n    }\r\n    console.log(payload)\r\n    fetch(\"/fetch_system\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        console.log(d);\r\n        let treeD = d[\"treeD\"];\r\n        let failureModes = d[\"failureMode\"];\r\n        console.log(failureModes)\r\n        dispatch(\r\n          treeDataActions.setTreeData({\r\n            treeData: treeD,\r\n          }),\r\n        );\r\n        dispatch(\r\n          treeDataActions.setFailureModes(failureModes)\r\n        )\r\n      });\r\n  };\r\n\r\n      const[selectedComponent,setComponent]=useState([])\r\n      const selectOnChange=(e,value)=>{\r\n        setComponent(value)\r\n      }\r\n\r\n    const nextLevelBtn = () => {\r\n        history.push('/maintenance_allocation/conduct_rcm_analysis/critical_comp')\r\n    }\r\n\r\n    const SaveAssemplyHandler = () => {\r\n        alert(\"Hello\");\r\n        console.log(selectedComponent);\r\n        fetch(\"/save_assembly_rcm\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              system: currentSelection[\"equipmentName\"],\r\n              ship_name: currentSelection[\"shipName\"],\r\n              asm_data: selectedComponent\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            alert(d.message)\r\n          })\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Navigation/>\r\n      <div className={styles.userSelection}>\r\n          <UserSelection/>\r\n          <Button className={styles.btn} onClick={onLoadTreeStructure} variant='contained' color='primary'>Submit</Button>\r\n          {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          </Route> */}\r\n      </div>\r\n      {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          \r\n      </Route> */}\r\n      <div className={styles.content}>\r\n            <div className={styles.tree}>\r\n              <div className={styles.treeChild}>\r\n                {/* <FullscreenIcon style={{ float: \"right\", marginRight: \"25px\" }} /> */}\r\n                <TreeComponent height='600px'></TreeComponent>\r\n                {/* <div></div> */}\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightSection}>\r\n              <div className={styles.selectComponent}>\r\n                Select Assemblies to be included for RCM Analysis :\r\n                <AutoSelect\r\n                    multiple=\"multiple\"\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              <Button className={styles.nextbtn} onClick={nextLevelBtn} variant='contained' color='primary'>Add Information for Critical Components</Button>\r\n              <Button className={styles.nextbtn} onClick={SaveAssemplyHandler} style={{marginRight: \"2rem\"}} variant='contained' color='primary'>Save</Button>\r\n              \r\n            </div>\r\n          </div>\r\n      {/* <Route exact path='/maintenance_allocation/create/assignMaintenance'>\r\n          <AssignType selectedComponent={selectedComponent}/>\r\n      </Route> */}\r\n    </>\r\n    );\r\n  }\r\n  export default CreateRCM;"]},"metadata":{},"sourceType":"module"}