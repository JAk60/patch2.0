{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\HEP\\\\LifeMultiplier\\\\LifeMultiplier.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport LensIcon from \"@material-ui/icons/Lens\";\nimport styles from \"../HEP.module.css\";\nimport Table from \"../../../ui/Table/Table\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HEPLifeMultiplier = props => {\n  _s();\n\n  const systemData = useSelector(state => state.treeData.treeData);\n  const colDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"component\",\n    headerName: \"Component\",\n    minWidth: 80,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"refurbished\",\n    headerName: \"Refurbished\",\n    minWidth: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"cannibalised\",\n    headerName: \"Cannibalised\",\n    minWidth: 80,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"nonOEM\",\n    headerName: \"Non-OEM/Duplicate\",\n    minWidth: 80,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)];\n  const rowData = systemData.map((ele, index) => {\n    return {\n      id: uuid(),\n      ComponentId: ele.id,\n      component: ele.name,\n      lmu: ele.lmu,\n      refurbished: 1,\n      cannibalised: 1,\n      nonOEM: 1\n    };\n  });\n\n  const getLmuRowStyle = params => {\n    //console.log(params.node);\n    if (params.node.data.lmu == 1) {\n      return {\n        background: '#d8f0f4'\n      };\n    }\n  };\n\n  const updateFinalRowData = allRows => {\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.phaseTable,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columnDefs: colDefs,\n        rowData: rowData,\n        tableUpdate: updateFinalRowData,\n        getRowStyle: getLmuRowStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HEPLifeMultiplier, \"pGqyY09l2fwOyWqzlFeuO2TaLMs=\", false, function () {\n  return [useSelector];\n});\n\n_c = HEPLifeMultiplier;\nexport default HEPLifeMultiplier;\n\nvar _c;\n\n$RefreshReg$(_c, \"HEPLifeMultiplier\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/HEP/LifeMultiplier/LifeMultiplier.js"],"names":["Fragment","LensIcon","styles","Table","AgGridColumn","useSelector","useDispatch","v4","uuid","HEPLifeMultiplier","props","systemData","state","treeData","colDefs","rowData","map","ele","index","id","ComponentId","component","name","lmu","refurbished","cannibalised","nonOEM","getLmuRowStyle","params","node","data","background","updateFinalRowData","allRows","tableUpdate","phaseTable"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeA,QAA3B,CAA9B;AACA,QAAMC,OAAO,GAAG,cACd,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,UAAU,EAAC,WAFb;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,UADc,eAOd,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,UAAU,EAAC,aAFb;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAIE,IAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,UAPc,eAad,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,UAAU,EAAC,cAFb;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,UAbc,eAmBd,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,UAAU,EAAC,mBAFb;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,UAnBc,CAAhB;AA2BA,QAAMC,OAAO,GAAGJ,UAAU,CAACK,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7C,WAAO;AACLC,MAAAA,EAAE,EAACX,IAAI,EADF;AAELY,MAAAA,WAAW,EAACH,GAAG,CAACE,EAFX;AAGLE,MAAAA,SAAS,EAAEJ,GAAG,CAACK,IAHV;AAILC,MAAAA,GAAG,EAACN,GAAG,CAACM,GAJH;AAKLC,MAAAA,WAAW,EAAE,CALR;AAMLC,MAAAA,YAAY,EAAE,CANT;AAOLC,MAAAA,MAAM,EAAE;AAPH,KAAP;AASD,GAVe,CAAhB;;AAYA,QAAMC,cAAc,GAAGC,MAAM,IAAI;AAC/B;AACA,QAAIA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiBP,GAAjB,IAAsB,CAA1B,EAA6B;AAC3B,aAAO;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAAP;AACD;AACF,GALD;;AAOA,QAAMC,kBAAkB,GAAIC,OAAD,IAAa;AACtCvB,IAAAA,KAAK,CAACwB,WAAN,CAAkBD,OAAlB;AACD,GAFD;;AAGA,sBACE,QAAC,QAAD;AAAA,2BASE;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACiC,UAAvB;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,UAAU,EAAErB,OADd;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,WAAW,EAAEiB,kBAHf;AAIE,QAAA,WAAW,EAAEL;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvED;;GAAMlB,iB;UACeJ,W;;;KADfI,iB;AAyEN,eAAeA,iBAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport styles from \"../HEP.module.css\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst HEPLifeMultiplier = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const colDefs = [\r\n    <AgGridColumn\r\n      field=\"component\"\r\n      headerName=\"Component\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"refurbished\"\r\n      headerName=\"Refurbished\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"cannibalised\"\r\n      headerName=\"Cannibalised\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"nonOEM\"\r\n      headerName=\"Non-OEM/Duplicate\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const rowData = systemData.map((ele, index) => {\r\n    return {\r\n      id:uuid(),\r\n      ComponentId:ele.id,\r\n      component: ele.name,\r\n      lmu:ele.lmu,\r\n      refurbished: 1,\r\n      cannibalised: 1,\r\n      nonOEM: 1,\r\n    };\r\n  });\r\n\r\n  const getLmuRowStyle = params => {\r\n    //console.log(params.node);\r\n    if (params.node.data.lmu==1) {\r\n      return { background: '#d8f0f4' };\r\n    }\r\n  };\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {/* <div className={styles.flex2}>\r\n        <div>\r\n          <span style={{ fontSize: \"0.7rem\" }}>\r\n            <LensIcon style={{ color: \"#d8f0f4\" }} />\r\n            LMU-Lowest Maintainable Unit\r\n          </span>\r\n        </div>\r\n      </div> */}\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={colDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n          getRowStyle={getLmuRowStyle}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HEPLifeMultiplier;\r\n"]},"metadata":{},"sourceType":"module"}