{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar _isDisposable = require('./isDisposable');\n\nvar _isDisposable2 = _interopRequireDefault(_isDisposable);\n\nvar SerialDisposable = function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    this.isDisposed = false;\n    this.current = null;\n  }\n  /**\r\n   * Gets the underlying disposable.\r\n   * @return The underlying disposable.\r\n   */\n\n\n  SerialDisposable.prototype.getDisposable = function getDisposable() {\n    return this.current;\n  };\n  /**\r\n   * Sets the underlying disposable.\r\n   * @param {Disposable} value The new underlying disposable.\r\n   */\n\n\n  SerialDisposable.prototype.setDisposable = function setDisposable() {\n    var value = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n    if (value != null && !_isDisposable2['default'](value)) {\n      throw new Error('Expected either an empty value or a valid disposable');\n    }\n\n    var isDisposed = this.isDisposed;\n    var previous = undefined;\n\n    if (!isDisposed) {\n      previous = this.current;\n      this.current = value;\n    }\n\n    if (previous) {\n      previous.dispose();\n    }\n\n    if (isDisposed && value) {\n      value.dispose();\n    }\n  };\n  /**\r\n   * Disposes the underlying disposable as well as all future replacements.\r\n   */\n\n\n  SerialDisposable.prototype.dispose = function dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this.isDisposed = true;\n    var previous = this.current;\n    this.current = null;\n\n    if (previous) {\n      previous.dispose();\n    }\n  };\n\n  return SerialDisposable;\n}();\n\nexports['default'] = SerialDisposable;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/node_modules/disposables/modules/SerialDisposable.js"],"names":["exports","__esModule","_interopRequireDefault","obj","_classCallCheck","instance","Constructor","TypeError","_isDisposable","require","_isDisposable2","SerialDisposable","isDisposed","current","prototype","getDisposable","setDisposable","value","arguments","length","undefined","Error","previous","dispose","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACF,UAAX,GAAwBE,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AAEA,IAAIC,cAAc,GAAGR,sBAAsB,CAACM,aAAD,CAA3C;;AAEA,IAAIG,gBAAgB,GAAI,YAAY;AAClC,WAASA,gBAAT,GAA4B;AAC1BP,IAAAA,eAAe,CAAC,IAAD,EAAOO,gBAAP,CAAf;;AAEA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;AAED;AACF;AACA;AACA;;;AAEEF,EAAAA,gBAAgB,CAACG,SAAjB,CAA2BC,aAA3B,GAA2C,SAASA,aAAT,GAAyB;AAClE,WAAO,KAAKF,OAAZ;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AAEEF,EAAAA,gBAAgB,CAACG,SAAjB,CAA2BE,aAA3B,GAA2C,SAASA,aAAT,GAAyB;AAClE,QAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAA1C,GAAsD,IAAtD,GAA6DF,SAAS,CAAC,CAAD,CAAlF;;AAEA,QAAID,KAAK,IAAI,IAAT,IAAiB,CAACP,cAAc,CAAC,SAAD,CAAd,CAA0BO,KAA1B,CAAtB,EAAwD;AACtD,YAAM,IAAII,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,QAAIT,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIU,QAAQ,GAAGF,SAAf;;AAEA,QAAI,CAACR,UAAL,EAAiB;AACfU,MAAAA,QAAQ,GAAG,KAAKT,OAAhB;AACA,WAAKA,OAAL,GAAeI,KAAf;AACD;;AAED,QAAIK,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACC,OAAT;AACD;;AAED,QAAIX,UAAU,IAAIK,KAAlB,EAAyB;AACvBA,MAAAA,KAAK,CAACM,OAAN;AACD;AACF,GAtBD;AAwBA;AACF;AACA;;;AAEEZ,EAAAA,gBAAgB,CAACG,SAAjB,CAA2BS,OAA3B,GAAqC,SAASA,OAAT,GAAmB;AACtD,QAAI,KAAKX,UAAT,EAAqB;AACnB;AACD;;AAED,SAAKA,UAAL,GAAkB,IAAlB;AACA,QAAIU,QAAQ,GAAG,KAAKT,OAApB;AACA,SAAKA,OAAL,GAAe,IAAf;;AAEA,QAAIS,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACC,OAAT;AACD;AACF,GAZD;;AAcA,SAAOZ,gBAAP;AACD,CAjEsB,EAAvB;;AAmEAX,OAAO,CAAC,SAAD,CAAP,GAAqBW,gBAArB;AACAa,MAAM,CAACxB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\r\n\r\nexports.__esModule = true;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\nvar _isDisposable = require('./isDisposable');\r\n\r\nvar _isDisposable2 = _interopRequireDefault(_isDisposable);\r\n\r\nvar SerialDisposable = (function () {\r\n  function SerialDisposable() {\r\n    _classCallCheck(this, SerialDisposable);\r\n\r\n    this.isDisposed = false;\r\n    this.current = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the underlying disposable.\r\n   * @return The underlying disposable.\r\n   */\r\n\r\n  SerialDisposable.prototype.getDisposable = function getDisposable() {\r\n    return this.current;\r\n  };\r\n\r\n  /**\r\n   * Sets the underlying disposable.\r\n   * @param {Disposable} value The new underlying disposable.\r\n   */\r\n\r\n  SerialDisposable.prototype.setDisposable = function setDisposable() {\r\n    var value = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\r\n\r\n    if (value != null && !_isDisposable2['default'](value)) {\r\n      throw new Error('Expected either an empty value or a valid disposable');\r\n    }\r\n\r\n    var isDisposed = this.isDisposed;\r\n    var previous = undefined;\r\n\r\n    if (!isDisposed) {\r\n      previous = this.current;\r\n      this.current = value;\r\n    }\r\n\r\n    if (previous) {\r\n      previous.dispose();\r\n    }\r\n\r\n    if (isDisposed && value) {\r\n      value.dispose();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disposes the underlying disposable as well as all future replacements.\r\n   */\r\n\r\n  SerialDisposable.prototype.dispose = function dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    this.isDisposed = true;\r\n    var previous = this.current;\r\n    this.current = null;\r\n\r\n    if (previous) {\r\n      previous.dispose();\r\n    }\r\n  };\r\n\r\n  return SerialDisposable;\r\n})();\r\n\r\nexports['default'] = SerialDisposable;\r\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}