{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\systen_configuration\\\\redundancy\\\\redundancy.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useImperativeHandle, useRef, forwardRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport Table from \"../../../ui/Table/Table\";\nimport styles from \"../SystemConfiguration.module.css\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport { v4 as uuid } from \"uuid\";\nimport RenderParallelComponent from \"./RenderParallelComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RedundancyInfo = props => {\n  _s();\n\n  // const [rows, setRows] = useState([]);\n  // useEffect(() => {\n  //   fetch(\"/home\", {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   })\n  //     .then((res) => {\n  //       console.log(res);\n  //       return res.json();\n  //     })\n  //     .then((data) => {\n  //       setRows(data);\n  //     });\n  // }, [setRows]);\n  const [gridApi, setGridApi] = useState(null);\n  let ParallelIds = [];\n\n  const setParallelIds = d => {\n    ParallelIds = d;\n  };\n\n  const systemData = useSelector(state => state.treeData.treeData);\n  const currentSelectedSystem = useSelector(state => state.userSelection.currentSelection.equipmentName);\n  const RIDemo = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"eqId\",\n    hide: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"EquipmentName\",\n    headerName: \"Equipment name\",\n    headerTooltip: \"Equipment name\",\n    width: \"220\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"EquipmentParentName\",\n    headerName: \"Equipment Parent Name\",\n    headerTooltip: \"Equipment Parent Name\",\n    width: 300\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ParallelComponent\",\n    headerName: \"Parallel Component (Component - Parent Name)\",\n    headerTooltip: \"Parallel Component (Component - Parent Name)\" // cellEditor=\"agSelectCellEditor\"\n    ,\n    cellEditorFramework: RenderParallelComponent,\n    cellEditorParams: {\n      setParallelIds: setParallelIds,\n      label: \"Select Parallel Equipments!\",\n      isMultiple: true\n    } //onCellClicked={onCellChanged}\n    ,\n    width: \"220\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this),\n  /*#__PURE__*/\n  // <AgGridColumn\n  //   field=\"ParallelComponent\"\n  //   headerName=\"Parallel Component (Component - Parent Name)\"\n  //   cellEditor=\"agSelectCellEditor\"\n  //   // cellEditorParams={renderParallelComponent}\n  //   // onCellValueChanged={onCellChanged}\n  //   cellRendererFramework={MultipleSelect}\n  //   width=\"220\"\n  //   editable={true}\n  // />,\n  _jsxDEV(AgGridColumn, {\n    field: \"RedundancyType\",\n    headerName: \"Redundancy Type\",\n    headerTooltip: \"Redundancy Type\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: [\"\", \"K out-of N - Active Redundancy\", \"K out-of N - Inactive Redundancy\"]\n    },\n    width: \"220\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"K\",\n    headerName: \"K\",\n    headerTooltip: \"K\",\n    type: \"number\",\n    width: 100,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this)];\n  const rData = systemData.map((element, index) => {\n    return {\n      eqId: element.id,\n      EquipmentName: element.name,\n      componentId: element.id,\n      systemName: currentSelectedSystem,\n      id: uuid(),\n      EquipmentParentName: element.parentName,\n      ParallelComponent: \"\",\n      RedundancyType: \"K out-of N - Active Redundancy\",\n      K: 1,\n      // hK: 1,\n      // elhK: 0,\n      // cK: 0,\n      // dsK: 0,\n      // asK: 0,\n      parallelComponentIds: [],\n      N: 0\n    };\n  });\n\n  const updateFinalRowData = (allRows, id) => {\n    if (id) {\n      allRows.filter(x => x.id === id)[0].parallelComponentIds = ParallelIds;\n      allRows.filter(x => x.id === id)[0].N = ParallelIds.length + 1;\n    }\n\n    debugger;\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.systemTable,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: RIDemo,\n      rowData: rData,\n      tableUpdate: updateFinalRowData,\n      setGrid: setGridApi,\n      gridApi: gridApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RedundancyInfo, \"Ctx/GMjOIwXosVWzk1Y2g6m6GGQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = RedundancyInfo;\nexport default RedundancyInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RedundancyInfo\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/systen_configuration/redundancy/redundancy.js"],"names":["useEffect","useState","useImperativeHandle","useRef","forwardRef","useDispatch","useSelector","Button","CustomSelect","Table","styles","AgGridColumn","v4","uuid","RenderParallelComponent","RedundancyInfo","props","gridApi","setGridApi","ParallelIds","setParallelIds","d","systemData","state","treeData","currentSelectedSystem","userSelection","currentSelection","equipmentName","RIDemo","label","isMultiple","values","rData","map","element","index","eqId","id","EquipmentName","name","componentId","systemName","EquipmentParentName","parentName","ParallelComponent","RedundancyType","K","parallelComponentIds","N","updateFinalRowData","allRows","filter","x","length","tableUpdate","systemTable"],"mappings":"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","sourcesContent":["import {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  useRef,\r\n  forwardRef,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport RenderParallelComponent from \"./RenderParallelComponent\";\r\nconst RedundancyInfo = (props) => {\r\n  // const [rows, setRows] = useState([]);\r\n  // useEffect(() => {\r\n  //   fetch(\"/home\", {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Accept: \"application/json\",\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((data) => {\r\n  //       setRows(data);\r\n  //     });\r\n  // }, [setRows]);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  let ParallelIds = [];\r\n\r\n  const setParallelIds = (d) => {\r\n    ParallelIds = d;\r\n  };\r\n\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n\r\n  const currentSelectedSystem = useSelector(\r\n    (state) => state.userSelection.currentSelection.equipmentName\r\n  );\r\n\r\n  const RIDemo = [\r\n    <AgGridColumn field=\"eqId\" hide={true} />,\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment name\"\r\n      headerTooltip=\"Equipment name\"\r\n      width=\"220\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"EquipmentParentName\"\r\n      headerName=\"Equipment Parent Name\"\r\n      headerTooltip=\"Equipment Parent Name\"\r\n      width={300}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ParallelComponent\"\r\n      headerName=\"Parallel Component (Component - Parent Name)\"\r\n      headerTooltip=\"Parallel Component (Component - Parent Name)\"\r\n      // cellEditor=\"agSelectCellEditor\"\r\n      cellEditorFramework={RenderParallelComponent}\r\n      cellEditorParams={{\r\n        setParallelIds: setParallelIds,\r\n        label: \"Select Parallel Equipments!\",\r\n        isMultiple: true,\r\n      }}\r\n      //onCellClicked={onCellChanged}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"ParallelComponent\"\r\n    //   headerName=\"Parallel Component (Component - Parent Name)\"\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   // cellEditorParams={renderParallelComponent}\r\n    //   // onCellValueChanged={onCellChanged}\r\n    //   cellRendererFramework={MultipleSelect}\r\n    //   width=\"220\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"RedundancyType\"\r\n      headerName=\"Redundancy Type\"\r\n      headerTooltip=\"Redundancy Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\r\n          \"\",\r\n          \"K out-of N - Active Redundancy\",\r\n          \"K out-of N - Inactive Redundancy\",\r\n        ],\r\n      }}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"K\"\r\n      headerName=\"K\"\r\n      headerTooltip=\"K\"\r\n      type=\"number\"\r\n      width={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const rData = systemData.map((element, index) => {\r\n    return {\r\n      eqId: element.id,\r\n      EquipmentName: element.name,\r\n      componentId: element.id,\r\n      systemName: currentSelectedSystem,\r\n      id: uuid(),\r\n      EquipmentParentName: element.parentName,\r\n      ParallelComponent: \"\",\r\n      RedundancyType: \"K out-of N - Active Redundancy\",\r\n      K: 1,\r\n      // hK: 1,\r\n      // elhK: 0,\r\n      // cK: 0,\r\n      // dsK: 0,\r\n      // asK: 0,\r\n      parallelComponentIds: [],\r\n      N: 0,\r\n    };\r\n  });\r\n\r\n  const updateFinalRowData = (allRows, id) => {\r\n    if (id) {\r\n      allRows.filter((x) => x.id === id)[0].parallelComponentIds = ParallelIds;\r\n      allRows.filter((x) => x.id === id)[0].N = ParallelIds.length + 1;\r\n    }\r\n    debugger;\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={RIDemo}\r\n        rowData={rData}\r\n        tableUpdate={updateFinalRowData}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedundancyInfo;\r\n"]},"metadata":{},"sourceType":"module"}