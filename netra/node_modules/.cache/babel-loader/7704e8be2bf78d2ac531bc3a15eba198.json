{"ast":null,"code":"var _jsxFileName = \"E:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\AddData\\\\AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport Navigation from \"../../../components/navigation/Navigation\";\nimport styles from \"./AddData.module.css\";\nimport UserSelection from \"../../../ui/userSelection/userSelection\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport TreeComponent from \"../../../components/sortableTree/SortableTree\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Table from \"../../../ui/Table/Table\";\nimport { v4 as uuid } from \"uuid\";\nimport Loader from \"react-loader-spinner\";\nimport { useDropzone } from \"react-dropzone\";\nimport CustomizedSnackbars from \"../../../ui/CustomSnackBar\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  buttons: {\n    margin: 5,\n    minWidth: 170,\n    float: \"right\"\n  },\n  align: {\n    marginBottom: 10\n  }\n});\n\nconst AddData = props => {\n  _s();\n\n  var _matchingItems$;\n\n  const dispatch = useDispatch();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  let fData = useSelector(state => state.treeData.treeData);\n  const sData = useSelector(state => state.userSelection.componentsData);\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\n  const matchingId = (_matchingItems$ = matchingItems[0]) === null || _matchingItems$ === void 0 ? void 0 : _matchingItems$.id;\n\n  const onLoadTreeStructure = () => {\n    const payload = {\n      system: currentSelection[\"equipmentName\"],\n      ship_name: currentSelection[\"shipName\"]\n    };\n\n    if (matchingId) {\n      payload.component_id = matchingId;\n    }\n\n    console.log(payload);\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      console.log(d);\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      console.log(failureModes);\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD\n      }));\n      dispatch(treeDataActions.setFailureModes(failureModes));\n    });\n  };\n\n  const [isloading, setLoading] = useState(false);\n  const [dataRows, setDataRows] = useState([]);\n  const [selectedComponent, setComponent] = useState(null);\n  const [paramData, setParamData] = useState([]);\n\n  const selectOnChange = (e, value) => {\n    setDataRows([]);\n\n    if (value) {\n      setLoading(true);\n      fetch(\"/fetch_params\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          ComponentId: value.id\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(d => {\n        setParamData(d);\n      });\n      setComponent(value);\n      setLoading(false);\n    }\n  };\n\n  const saveParamData = () => {\n    fetch(\"/save_condition_monitoring\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        flatData: dataRows,\n        dtype: \"insertParamData\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      setSnackBarMessage({\n        severity: \"success\",\n        message: data.message,\n        showSnackBar: true\n      });\n    }).catch(error => {\n      setSnackBarMessage({\n        severity: \"error\",\n        message: \"Some Error Occured. \" + error,\n        showSnackBar: true\n      });\n    });\n  };\n\n  const DataColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"date\",\n    headerName: \"DateTime\",\n    headerTooltip: \"DateTime\",\n    editable: true,\n    cellEditorFramework: params => /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        value: params.value,\n        onChange: date => {\n          const formattedDate = moment(date).format(\"DD/MM/YYYY, HH:mm:ss\");\n          const newValue = { ...params.data,\n            date: formattedDate\n          };\n          const updatedDataRows = dataRows.map(row => {\n            if (row.id === newValue.id) {\n              return newValue;\n            }\n\n            return row;\n          });\n          setDataRows(updatedDataRows);\n        },\n        format: \"yyyy-MM-dd HH:mm:ss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"parameterName\",\n    headerName: \"Parameter\",\n    headerTooltip: \"Parameter\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: paramData.map(data => data.name)\n    },\n    editable: true,\n    onCellValueChanged: params => {\n      var _parameter$;\n\n      let parameter = paramData.filter(d => d.name === params.data.parameterName);\n      params.data.paramId = (_parameter$ = parameter[0]) === null || _parameter$ === void 0 ? void 0 : _parameter$.id;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"value\",\n    headerName: \"Value\",\n    headerTooltip: \"Value\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    headerName: \"Operating Hours\",\n    field: \"operatingHours\",\n    headerTooltip: \"Operating Hours\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this)];\n\n  const addRow = () => {\n    let newRow = {\n      componentId: selectedComponent.id,\n      id: uuid(),\n      date: \"\",\n      parameterName: \"\",\n      paramId: \"\",\n      value: \"\",\n      operatingHours: \"\"\n    };\n    setDataRows([...dataRows, newRow]);\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    const formData = new FormData();\n    formData.append(\"File\", acceptedFiles[0]);\n    fetch(\"/add_data\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(result => {\n      console.log(\"Success:\", result);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  }); // Snackbar\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  };\n\n  const classes = useStyles();\n  console.log(dataRows, \"flag\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttons,\n          onClick: onLoadTreeStructure,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tree,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.treeChild,\n          children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n            height: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userSelection,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.selectContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.selectC,\n              children: [\"Select Component\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n                fields: fData,\n                onChange: selectOnChange,\n                value: selectedComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.importBtnContainer,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: classes.buttons,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Import File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n                children: /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), isloading ? /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#86a0ff\",\n          height: 300,\n          width: 300,\n          style: {\n            marginTop: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            columnDefs: DataColumnDefs,\n            rowData: dataRows,\n            tableUpdate: rows => {\n              console.log(rows);\n            },\n            height: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addRow,\n            children: \"+ Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttons,\n            onClick: saveParamData,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddData, \"5hU0Peg/EIPMBCaZtAGwgqOqijw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useDropzone, useStyles];\n});\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["E:/NetraB/netra/src/pages/Maintenance Allocation/AddData/AddData.js"],"names":["React","useState","useCallback","Navigation","styles","UserSelection","Button","makeStyles","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","AgGridColumn","Table","v4","uuid","Loader","useDropzone","CustomizedSnackbars","DateTimePicker","MuiPickersUtilsProvider","MomentUtils","moment","useStyles","buttons","margin","minWidth","float","align","marginBottom","AddData","props","dispatch","currentSelection","state","userSelection","fData","treeData","sData","componentsData","currentEquipmentName","matchingItems","filter","item","name","matchingId","id","onLoadTreeStructure","payload","system","ship_name","component_id","console","log","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","setFailureModes","isloading","setLoading","dataRows","setDataRows","selectedComponent","setComponent","paramData","setParamData","selectOnChange","e","value","ComponentId","saveParamData","flatData","dtype","data","setSnackBarMessage","severity","message","showSnackBar","catch","error","DataColumnDefs","params","date","formattedDate","format","newValue","updatedDataRows","map","row","values","parameter","parameterName","paramId","addRow","newRow","componentId","operatingHours","onDrop","acceptedFiles","formData","FormData","append","response","result","getRootProps","getInputProps","SnackBarMessage","onHandleSnackClose","classes","content","tree","treeChild","rightSection","selectContainer","selectC","importBtnContainer","marginTop","table","rows"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport Navigation from \"../../../components/navigation/Navigation\";\r\nimport styles from \"./AddData.module.css\";\r\nimport UserSelection from \"../../../ui/userSelection/userSelection\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport TreeComponent from \"../../../components/sortableTree/SortableTree\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport CustomizedSnackbars from \"../../../ui/CustomSnackBar\";\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  buttons: {\r\n    margin: 5,\r\n    minWidth: 170,\r\n    float: \"right\",\r\n  },\r\n  align: {\r\n    marginBottom: 10,\r\n  }\r\n});\r\n\r\nconst AddData = (props) => {\r\n  const dispatch = useDispatch();\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  let fData = useSelector((state) => state.treeData.treeData);\r\n\r\n  const sData = useSelector((state) => state.userSelection.componentsData);\r\n\r\n  const currentEquipmentName = currentSelection[\"equipmentName\"];\r\n  const matchingItems = sData.filter(item => item.name === currentEquipmentName);\r\n\r\n  const matchingId = matchingItems[0]?.id;\r\n  const onLoadTreeStructure = () => {\r\n    const payload = {\r\n      system: currentSelection[\"equipmentName\"],\r\n      ship_name: currentSelection[\"shipName\"],\r\n    };\r\n  \r\n    if (matchingId) {\r\n      payload.component_id = matchingId;\r\n    }\r\n    console.log(payload)\r\n    fetch(\"/fetch_system\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        console.log(d);\r\n        let treeD = d[\"treeD\"];\r\n        let failureModes = d[\"failureMode\"];\r\n        console.log(failureModes)\r\n        dispatch(\r\n          treeDataActions.setTreeData({\r\n            treeData: treeD,\r\n          }),\r\n        );\r\n        dispatch(\r\n          treeDataActions.setFailureModes(failureModes)\r\n        )\r\n      });\r\n  };\r\n\r\n  const [isloading, setLoading] = useState(false);\r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [selectedComponent, setComponent] = useState(null);\r\n  const [paramData, setParamData] = useState([]);\r\n\r\n  const selectOnChange = (e, value) => {\r\n    setDataRows([]);\r\n    if (value) {\r\n      setLoading(true);\r\n      fetch(\"/fetch_params\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          ComponentId: value.id,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((d) => {\r\n          setParamData(d);\r\n        });\r\n      setComponent(value);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveParamData = () => {\r\n    fetch(\"/save_condition_monitoring\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        flatData: dataRows,\r\n        dtype: \"insertParamData\",\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSnackBarMessage({\r\n          severity: \"success\",\r\n          message: data.message,\r\n          showSnackBar: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setSnackBarMessage({\r\n          severity: \"error\",\r\n          message: \"Some Error Occured. \" + error,\r\n          showSnackBar: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const DataColumnDefs = [\r\n    <AgGridColumn\r\n  field=\"date\"\r\n  headerName=\"DateTime\"\r\n  headerTooltip=\"DateTime\"\r\n  editable={true}\r\n  cellEditorFramework={(params) => (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <DateTimePicker\r\n        value={params.value}\r\n        onChange={(date) => {\r\n          const formattedDate = moment(date).format(\"DD/MM/YYYY, HH:mm:ss\");\r\n          const newValue = {\r\n            ...params.data,\r\n            date: formattedDate,\r\n          };\r\n          const updatedDataRows = dataRows.map((row) => {\r\n            if (row.id === newValue.id) {\r\n              return newValue;\r\n            }\r\n            return row;\r\n          });\r\n          setDataRows(updatedDataRows);\r\n        }}\r\n        format=\"yyyy-MM-dd HH:mm:ss\"\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  )}\r\n/>\r\n,\r\n    <AgGridColumn\r\n      field=\"parameterName\"\r\n      headerName=\"Parameter\"\r\n      headerTooltip=\"Parameter\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: paramData.map((data) => data.name),\r\n      }}\r\n      editable={true}\r\n      onCellValueChanged={(params) => {\r\n        let parameter = paramData.filter(\r\n          (d) => d.name === params.data.parameterName\r\n        );\r\n        params.data.paramId = parameter[0]?.id;\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"value\"\r\n      headerName=\"Value\"\r\n      headerTooltip=\"Value\"\r\n      editable={true}\r\n    />,\r\n      <AgGridColumn\r\n        headerName=\"Operating Hours\"\r\n        field=\"operatingHours\"\r\n        headerTooltip=\"Operating Hours\"\r\n        editable={true}\r\n      />,\r\n  ];\r\n\r\n  const addRow = () => {\r\n    let newRow = {\r\n      componentId: selectedComponent.id,\r\n      id: uuid(),\r\n      date: \"\",\r\n      parameterName: \"\",\r\n      paramId: \"\",\r\n      value: \"\",\r\n      operatingHours: \"\",\r\n    };\r\n    setDataRows([...dataRows, newRow]);\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const formData = new FormData();\r\n    formData.append(\"File\", acceptedFiles[0]);\r\n    fetch(\"/add_data\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Success:\", result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  // Snackbar\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  console.log(dataRows, \"flag\");\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.userSelection}>\r\n        <UserSelection />\r\n        <div>\r\n          {/* <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Button\r\n              className={classes.buttons}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Import File\r\n            </Button>\r\n          </div> */}\r\n          <Button\r\n            className={classes.buttons}\r\n            onClick={onLoadTreeStructure}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.content}>\r\n        <div className={styles.tree}>\r\n          <div className={styles.treeChild}>\r\n            <TreeComponent height=\"600px\"></TreeComponent>\r\n          </div>\r\n        </div>\r\n        <div className={styles.rightSection}>\r\n          \r\n          {/* <div className={styles.userSelection} >\r\n          <div className={styles.selectComponent}>\r\n            Select Component\r\n            <AutoSelect\r\n              fields={fData}\r\n              onChange={selectOnChange}\r\n              value={selectedComponent}\r\n            ></AutoSelect>\r\n          </div>\r\n            <div>\r\n              <Button\r\n                className={classes.buttons}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Import File\r\n              </Button>\r\n              <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          <div className={styles.userSelection}>\r\n  <div className={styles.selectContainer}>\r\n    <div className={styles.selectC}>\r\n      Select Component\r\n      <AutoSelect\r\n        fields={fData}\r\n        onChange={selectOnChange}\r\n        value={selectedComponent}\r\n      ></AutoSelect>\r\n    </div>\r\n    <div className={styles.importBtnContainer}>\r\n      <Button\r\n        className={classes.buttons}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Import File\r\n      </Button>\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n          {isloading ? (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#86a0ff\"\r\n              height={300}\r\n              width={300}\r\n              style={{ marginTop: 100 }}\r\n            />\r\n          ) : (\r\n            <div className={styles.table}>\r\n              <Table\r\n                columnDefs={DataColumnDefs}\r\n                rowData={dataRows}\r\n                tableUpdate={(rows) => {\r\n                  console.log(rows);\r\n                }}\r\n                height={300}\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={addRow}>\r\n                + Add Row\r\n              </Button>\r\n              <Button\r\n            className={classes.buttons}\r\n            onClick={saveParamData}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddData;\r\n"]},"metadata":{},"sourceType":"module"}