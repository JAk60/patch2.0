{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport _ from \"lodash\";\n\nconst GroupData = () => {\n  _s();\n\n  const allElements = useSelector(state => state.elements.elements);\n\n  const group = _.groupBy(allElements.filter(x => x.dtype === \"edge\"), x => x.source);\n\n  const groupKeys = Object.keys(group);\n  const groupName = groupKeys.map((item, index) => {\n    const gName = allElements.filter(x => x.id === item)[0].data.label;\n    const gOption = group[item].map((ele, eIndex) => {\n      const filteredEle = allElements.filter(x => x.id === ele.target)[0];\n      return {\n        value: filteredEle.id,\n        label: filteredEle.data.label\n      };\n    });\n    return {\n      label: `Parent Nsme - ${gName}`,\n      options: gOption\n    };\n  });\n  return groupName;\n};\n\n_s(GroupData, \"L74jUqRMJsg5NI5mGAE3A7H8D8w=\", false, function () {\n  return [useSelector];\n});\n\n_c = GroupData;\nexport default GroupData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupData\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/dragNdrop/ComponentDetails/GroupData.js"],"names":["useSelector","_","GroupData","allElements","state","elements","group","groupBy","filter","x","dtype","source","groupKeys","Object","keys","groupName","map","item","index","gName","id","data","label","gOption","ele","eIndex","filteredEle","target","value","options"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,WAAW,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeA,QAA3B,CAA/B;;AACA,QAAMC,KAAK,GAAGL,CAAC,CAACM,OAAF,CACZJ,WAAW,CAACK,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAY,MAAtC,CADY,EAEXD,CAAD,IAAOA,CAAC,CAACE,MAFG,CAAd;;AAIA,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAAlB;AACA,QAAMS,SAAS,GAAGH,SAAS,CAACI,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,UAAMC,KAAK,GAAGhB,WAAW,CAACK,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACW,EAAF,KAASH,IAAnC,EAAyC,CAAzC,EAA4CI,IAA5C,CAAiDC,KAA/D;AACA,UAAMC,OAAO,GAAGjB,KAAK,CAACW,IAAD,CAAL,CAAYD,GAAZ,CAAgB,CAACQ,GAAD,EAAMC,MAAN,KAAiB;AAC/C,YAAMC,WAAW,GAAGvB,WAAW,CAACK,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACW,EAAF,KAASI,GAAG,CAACG,MAAvC,EAA+C,CAA/C,CAApB;AACA,aAAO;AAAEC,QAAAA,KAAK,EAAEF,WAAW,CAACN,EAArB;AAAyBE,QAAAA,KAAK,EAAGI,WAAW,CAACL,IAAZ,CAAiBC;AAAlD,OAAP;AACD,KAHe,CAAhB;AAIA,WAAO;AACLA,MAAAA,KAAK,EAAG,iBAAgBH,KAAM,EADzB;AAELU,MAAAA,OAAO,EAAEN;AAFJ,KAAP;AAID,GAViB,CAAlB;AAWA,SAAOR,SAAP;AACD,CAnBD;;GAAMb,S;UACgBF,W;;;KADhBE,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nconst GroupData = () => {\r\n  const allElements = useSelector((state) => state.elements.elements);\r\n  const group = _.groupBy(\r\n    allElements.filter((x) => x.dtype === \"edge\"),\r\n    (x) => x.source\r\n  );\r\n  const groupKeys = Object.keys(group);\r\n  const groupName = groupKeys.map((item, index) => {\r\n    const gName = allElements.filter((x) => x.id === item)[0].data.label;\r\n    const gOption = group[item].map((ele, eIndex) => {\r\n      const filteredEle = allElements.filter((x) => x.id === ele.target)[0];\r\n      return { value: filteredEle.id, label : filteredEle.data.label };\r\n    });\r\n    return {\r\n      label: `Parent Nsme - ${gName}`,\r\n      options: gOption,\r\n    };\r\n  });\r\n  return groupName;\r\n};\r\nexport default GroupData;\r\n"]},"metadata":{},"sourceType":"module"}