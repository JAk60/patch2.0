{"ast":null,"code":"var _jsxFileName = \"E:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Data Manager\\\\historicalData\\\\oem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"../../../ui/Table/DataManagerTable\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Button, Input, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"../DataManager.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"50px\",\n    margin: 50,\n    height: 1\n  },\n  parent: {\n    marginTop: \"20px\"\n  },\n  child1: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(20),\n      height: theme.spacing(5),\n      background: \"#048ee7\",\n      color: \"white\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  },\n  child2: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(60),\n      height: theme.spacing(3),\n      textAlign: \"center\",\n      padding: \"10px\"\n    }\n  },\n  buttons: {\n    marginLeft: \"20px\",\n    marginTop: \"25px\",\n    alignItems: \"center\",\n    height: \"40px\"\n  }\n}));\n\nconst OEM = props => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const rows = props.childList.map(x => {\n    return {\n      name: x.name,\n      id: x.id\n    };\n  });\n  const [lifeEstimates, setlifeEstimates] = useState([\"L10\", \"L90\"]);\n  const [columnDefs, setColumnDefs] = useState([/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ComponentName\",\n    headerName: \"Component Name\",\n    editable: true,\n    width: 200,\n    checkboxSelection: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: rows.map(x => x.name)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)]); // console.log(lifeEstimates);\n\n  const classes = useStyles();\n  const [rowState, setRows] = useState([{\n    id: rows[0].id,\n    ComponentName: rows[0].name,\n    L10: \"\",\n    L90: \"\"\n  }]); // const OEMColumns = [\n  //   <AgGridColumn\n  //     field=\"ComponentName\"\n  //     headerName=\"Component Name\"\n  //     editable={true}\n  //     width={200}\n  //     checkboxSelection={true}\n  //     cellEditor=\"agSelectCellEditor\"\n  //     cellEditorParams={{\n  //       values: [\"Pressure Cap\", \"Tank\", \"Water Pump Mounting Support\"],\n  //     }}\n  //   />,\n  //   <AgGridColumn field=\"L10\" headerName=\"L10\" editable={true} />,\n  //   <AgGridColumn field=\"L90\" headerName=\"L90\" editable={true} />,\n  // ];\n\n  const updateFinalRowData = allRows => {\n    props.tableUpdate(allRows, \"oem\");\n  };\n\n  const AddRow = () => {\n    const defaultRow = [{\n      id: rows[0].id,\n      ComponentName: rows[0].name,\n      L10: \"\",\n      L90: \"\"\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    console.log(selectedRows);\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  const submitLifeEstimates = () => {\n    const columns = lifeEstimates.map((c, i) => {\n      if (!columnDefs.some(e => e.props.headerName === c)) {\n        return /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: c,\n          headerName: c,\n          editable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      }\n    });\n    setColumnDefs(prevState => {\n      return [...prevState, ...columns];\n    });\n  };\n\n  const addMoreLifeEstimates = () => {\n    setlifeEstimates(prevState => {\n      return [...prevState, \"L\"];\n    });\n  };\n\n  const onChangeTextField = function (e, i) {\n    setlifeEstimates(prevState => {\n      let stateCopy = [...prevState];\n      stateCopy[i] = e.target.value;\n      return [...stateCopy];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.parent,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.child2,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: lifeEstimates.map((l, i) => {\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            \"data-index\": i,\n            onChange: e => onChangeTextField(e, i),\n            label: \"Life Estimate\",\n            defaultValue: l,\n            variant: \"outlined\",\n            classes: {\n              root: classes.root\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttons,\n        onClick: submitLifeEstimates,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columnDefs: columnDefs,\n        setGrid: setGridApi,\n        gridApi: gridApi,\n        rowData: rowState,\n        tableUpdate: updateFinalRowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableFooter,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => AddRow(),\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => deleteRows(),\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OEM, \"bgfz+XW3qSKnXr++Litl4B7xQ7c=\", false, function () {\n  return [useStyles];\n});\n\n_c = OEM;\nexport default OEM;\n\nvar _c;\n\n$RefreshReg$(_c, \"OEM\");","map":{"version":3,"sources":["E:/NetraB/netra/src/pages/Data Manager/historicalData/oem.js"],"names":["React","useState","Table","AgGridColumn","Paper","Button","Input","TextField","makeStyles","AddIcon","IconButton","DeleteIcon","styles","useStyles","theme","root","width","margin","height","parent","marginTop","child1","display","flexWrap","spacing","background","color","alignItems","justifyContent","child2","flexDirection","paper","textAlign","padding","buttons","marginLeft","OEM","props","gridApi","setGridApi","rows","childList","map","x","name","id","lifeEstimates","setlifeEstimates","columnDefs","setColumnDefs","values","classes","rowState","setRows","ComponentName","L10","L90","updateFinalRowData","allRows","tableUpdate","AddRow","defaultRow","applyTransaction","add","allRowData","forEachNode","node","push","data","deleteRows","selectedRows","getSelectedRows","remove","console","log","submitLifeEstimates","columns","c","i","some","e","headerName","prevState","addMoreLifeEstimates","onChangeTextField","stateCopy","target","value","l","tableFooter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button, Input, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"50px\",\r\n    margin: 50,\r\n    height: 1,\r\n  },\r\n  parent: { marginTop: \"20px\" },\r\n  child1: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  child2: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(60),\r\n      height: theme.spacing(3),\r\n      textAlign: \"center\",\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  buttons: {\r\n    marginLeft: \"20px\",\r\n    marginTop: \"25px\",\r\n    alignItems: \"center\",\r\n    height: \"40px\",\r\n  },\r\n}));\r\n\r\nconst OEM = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [lifeEstimates, setlifeEstimates] = useState([\"L10\", \"L90\"]);\r\n  const [columnDefs, setColumnDefs] = useState([\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      width={200}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n  ]);\r\n  // console.log(lifeEstimates);\r\n  const classes = useStyles();\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      L10: \"\",\r\n      L90: \"\",\r\n    },\r\n  ]);\r\n\r\n  // const OEMColumns = [\r\n  //   <AgGridColumn\r\n  //     field=\"ComponentName\"\r\n  //     headerName=\"Component Name\"\r\n  //     editable={true}\r\n  //     width={200}\r\n  //     checkboxSelection={true}\r\n  //     cellEditor=\"agSelectCellEditor\"\r\n  //     cellEditorParams={{\r\n  //       values: [\"Pressure Cap\", \"Tank\", \"Water Pump Mounting Support\"],\r\n  //     }}\r\n  //   />,\r\n  //   <AgGridColumn field=\"L10\" headerName=\"L10\" editable={true} />,\r\n  //   <AgGridColumn field=\"L90\" headerName=\"L90\" editable={true} />,\r\n  // ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"oem\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        L10: \"\",\r\n        L90: \"\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    console.log(selectedRows);\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const submitLifeEstimates = () => {\r\n    const columns = lifeEstimates.map((c, i) => {\r\n      if (!columnDefs.some((e) => e.props.headerName === c)) {\r\n        return <AgGridColumn field={c} headerName={c} editable={true} />;\r\n      }\r\n    });\r\n\r\n    setColumnDefs((prevState) => {\r\n      return [...prevState, ...columns];\r\n    });\r\n  };\r\n  const addMoreLifeEstimates = () => {\r\n    setlifeEstimates((prevState) => {\r\n      return [...prevState, \"L\"];\r\n    });\r\n  };\r\n  const onChangeTextField = function (e, i) {\r\n    setlifeEstimates((prevState) => {\r\n      let stateCopy = [...prevState];\r\n      stateCopy[i] = e.target.value;\r\n      return [...stateCopy];\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.parent}>\r\n      {/* <div className={classes.child1}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          OEM\r\n        </Paper>\r\n      </div> */}\r\n      <div className={classes.child2}>\r\n        <div className={classes.paper}>\r\n          {lifeEstimates.map((l, i) => {\r\n            return (\r\n              <TextField\r\n                key={i}\r\n                data-index={i}\r\n                onChange={(e) => onChangeTextField(e, i)}\r\n                label=\"Life Estimate\"\r\n                defaultValue={l}\r\n                variant=\"outlined\"\r\n                classes={{ root: classes.root }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Button\r\n          className={classes.buttons}\r\n          onClick={submitLifeEstimates}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n        {/* <Button\r\n          className={classes.buttons}\r\n          variant=\"contained\"\r\n          onClick={addMoreLifeEstimates}\r\n          color=\"primary\"\r\n        >\r\n          Add More Life Estimate\r\n        </Button> */}\r\n      </div>\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <Table\r\n          columnDefs={columnDefs}\r\n          setGrid={setGridApi}\r\n          gridApi={gridApi}\r\n          rowData={rowState}\r\n          tableUpdate={updateFinalRowData}\r\n        ></Table>\r\n      </div>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OEM;\r\n"]},"metadata":{},"sourceType":"module"}