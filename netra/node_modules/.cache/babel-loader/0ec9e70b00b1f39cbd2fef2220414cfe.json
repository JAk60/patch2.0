{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\systen_configuration\\\\failureMode\\\\failureMode.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport Table from \"../../../ui/Table/Table\";\nimport styles from \"../SystemConfiguration.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { useEffect, useState } from \"react\";\nimport RenderParallelComponent from \"../redundancy/RenderParallelComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FailureMode = props => {\n  _s();\n\n  const systemData = useSelector(state => state.treeData.treeData);\n  const failureModesData = useSelector(state => state.treeData.failureModes);\n  const equipments = systemData.map(eqpt => eqpt.name + \"-\" + eqpt.parentName);\n  let ParallelIds = [];\n\n  const setParallelIds = d => {\n    ParallelIds = d;\n  };\n\n  const rowData = systemData.map((element, index) => {\n    return {\n      EquipmentName: element.name,\n      id: uuid(),\n      eqId: element.id,\n      rEquipmentName: \"\",\n      rEquipmentId: \"\",\n      fixFailureMode: \"\",\n      FailureMode: \"\"\n    };\n  });\n  const FMcolumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"EquipmentName\",\n    headerName: \"Equipment Name\",\n    headerTooltip: \"Equipment Name\",\n    width: 300,\n    editable: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"rEquipmentName\",\n    headerName: \"Responsible Equipment\",\n    headerTooltip: \"Responsible Equipment\" // cellEditor=\"agSelectCellEditor\"\n    // cellEditorParams={{\n    //   values: equipments,\n    // }}\n    // width={300}\n    ,\n    cellEditorFramework: RenderParallelComponent,\n    cellEditorParams: {\n      setParallelIds: setParallelIds,\n      label: \"Select Equipment Responsible for this failure\",\n      isMultiple: false\n    },\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"fixFailureMode\",\n    headerName: \"Failure Mode\",\n    headerTooltip: \"Failure Mode\",\n    width: 300,\n    editable: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: failureModesData\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"FailureMode\",\n    headerName: \"Failure Mode (Enter ',' seperated Multiple Modes)\",\n    headerTooltip: \"Failure Mode (Enter ',' seperated Multiple Modes)\",\n    width: 800,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)];\n\n  const updateFinalRowData = (allRows, rowId) => {\n    debugger;\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.systemTable,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: FMcolumnDefs,\n      rowData: rowData,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FailureMode, \"YYR8db2pWRlDQwi025+krONb2dU=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = FailureMode;\nexport default FailureMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"FailureMode\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/systen_configuration/failureMode/failureMode.js"],"names":["Button","AgGridColumn","CustomSelect","Table","styles","useDispatch","useSelector","v4","uuid","useEffect","useState","RenderParallelComponent","FailureMode","props","systemData","state","treeData","failureModesData","failureModes","equipments","map","eqpt","name","parentName","ParallelIds","setParallelIds","d","rowData","element","index","EquipmentName","id","eqId","rEquipmentName","rEquipmentId","fixFailureMode","FMcolumnDefs","label","isMultiple","values","updateFinalRowData","allRows","rowId","tableUpdate","systemTable"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RenderParallelComponent from \"../redundancy/RenderParallelComponent\";\r\nconst FailureMode = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const failureModesData = useSelector((state) => state.treeData.failureModes);\r\n  const equipments = systemData.map(\r\n    (eqpt) => eqpt.name + \"-\" + eqpt.parentName\r\n  );\r\n  let ParallelIds = [];\r\n\r\n  const setParallelIds = (d) => {\r\n    ParallelIds = d;\r\n  };\r\n  const rowData = systemData.map((element, index) => {\r\n    return {\r\n      EquipmentName: element.name,\r\n      id: uuid(),\r\n      eqId: element.id,\r\n      rEquipmentName: \"\",\r\n      rEquipmentId: \"\",\r\n      fixFailureMode: \"\",\r\n      FailureMode: \"\",\r\n    };\r\n  });\r\n  const FMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment Name\"\r\n      headerTooltip=\"Equipment Name\"\r\n      width={300}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"rEquipmentName\"\r\n      headerName=\"Responsible Equipment\"\r\n      headerTooltip=\"Responsible Equipment\"\r\n      // cellEditor=\"agSelectCellEditor\"\r\n      // cellEditorParams={{\r\n      //   values: equipments,\r\n      // }}\r\n      // width={300}\r\n      cellEditorFramework={RenderParallelComponent}\r\n      cellEditorParams={{\r\n        setParallelIds: setParallelIds,\r\n        label: \"Select Equipment Responsible for this failure\",\r\n        isMultiple: false,\r\n      }}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"fixFailureMode\"\r\n      headerName=\"Failure Mode\"\r\n      headerTooltip=\"Failure Mode\"\r\n      width={300}\r\n      editable={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: failureModesData,\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FailureMode\"\r\n      headerName=\"Failure Mode (Enter ',' seperated Multiple Modes)\"\r\n      headerTooltip=\"Failure Mode (Enter ',' seperated Multiple Modes)\"\r\n      width={800}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows, rowId) => {\r\n    debugger;\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={FMcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default FailureMode;\r\n"]},"metadata":{},"sourceType":"module"}