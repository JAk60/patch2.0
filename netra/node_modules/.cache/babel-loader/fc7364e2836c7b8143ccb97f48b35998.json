{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\ui\\\\CustomSnackBar.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst CustomizedSnackbars = props => {\n  // const classes = useStyles();\n  // const [open, setOpen] = React.useState(props.message.showSnackBar);\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = (event, reason) => {\n  //   if (reason === \"clickaway\") {\n  //     return;\n  //   }\n  //   setOpen(false);\n  // };\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: props.message.showSnackBar,\n    autoHideDuration: 7000,\n    onClose: props.onHandleClose,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: props.onHandleClose,\n      severity: props.message.severity,\n      children: props.message.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CustomizedSnackbars;\nexport default CustomizedSnackbars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"CustomizedSnackbars\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/ui/CustomSnackBar.js"],"names":["React","Button","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","message","showSnackBar","onHandleClose","severity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,K;AAIT,MAAME,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,mBAAmB,GAAIP,KAAD,IAAW;AACrC;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACQ,OAAN,CAAcC,YADtB;AAEE,IAAA,gBAAgB,EAAE,IAFpB;AAGE,IAAA,OAAO,EAAET,KAAK,CAACU,aAHjB;AAAA,2BAKE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEV,KAAK,CAACU,aAAtB;AAAqC,MAAA,QAAQ,EAAEV,KAAK,CAACQ,OAAN,CAAcG,QAA7D;AAAA,gBACGX,KAAK,CAACQ,OAAN,CAAcA;AADjB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BD;;MAAMD,mB;AA6BN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomizedSnackbars = (props) => {\r\n  // const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(props.message.showSnackBar);\r\n\r\n  // const handleClick = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = (event, reason) => {\r\n  //   if (reason === \"clickaway\") {\r\n  //     return;\r\n  //   }\r\n\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={props.message.showSnackBar}\r\n      autoHideDuration={7000}\r\n      onClose={props.onHandleClose}\r\n    >\r\n      <Alert onClose={props.onHandleClose} severity={props.message.severity}>\r\n        {props.message.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n"]},"metadata":{},"sourceType":"module"}