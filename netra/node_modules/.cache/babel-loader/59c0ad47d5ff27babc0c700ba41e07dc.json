{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { MProwData } from \"../pages/Phase_Manager/PhasetableData\";\nconst initialState = {\n  phase: []\n};\nconst phase = createSlice({\n  name: \"phase\",\n  initialState: initialState,\n  reducers: {\n    setPhase(state, action) {\n      const phaseData = action.payload.phaseData;\n      state.phase = [...state.phase, ...phaseData];\n    },\n\n    addPhase(state, action) {\n      const newPhase = action.payload.newPhase;\n      state.phase = [...state.phase, ...newPhase];\n    },\n\n    loadPhase(state, action) {\n      const phase_data = action.payload.newPhase; // state.phase = [...phase_data];\n\n      state.phase = phase_data;\n    } //End of Reducers\n\n\n  }\n});\nexport default phase;\nexport const phaseActions = phase.actions;","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/store/PhaseStore.js"],"names":["createSlice","MProwData","initialState","phase","name","reducers","setPhase","state","action","phaseData","payload","addPhase","newPhase","loadPhase","phase_data","phaseActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAMA,KAAK,GAAGH,WAAW,CAAC;AACxBI,EAAAA,IAAI,EAAE,OADkB;AAExBF,EAAAA,YAAY,EAAEA,YAFU;AAGxBG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAMC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeD,SAAjC;AACAF,MAAAA,KAAK,CAACJ,KAAN,GAAc,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiB,GAAGM,SAApB,CAAd;AACD,KAJO;;AAKRE,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAMI,QAAQ,GAAGJ,MAAM,CAACE,OAAP,CAAeE,QAAhC;AACAL,MAAAA,KAAK,CAACJ,KAAN,GAAc,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiB,GAAGS,QAApB,CAAd;AACD,KARO;;AASRC,IAAAA,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMM,UAAU,GAAGN,MAAM,CAACE,OAAP,CAAeE,QAAlC,CADuB,CAEvB;;AACAL,MAAAA,KAAK,CAACJ,KAAN,GAAcW,UAAd;AACD,KAbO,CAcR;;;AAdQ;AAHc,CAAD,CAAzB;AAqBA,eAAeX,KAAf;AACA,OAAO,MAAMY,YAAY,GAAGZ,KAAK,CAACa,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MProwData } from \"../pages/Phase_Manager/PhasetableData\";\r\n\r\nconst initialState = {\r\n  phase: [],\r\n};\r\n\r\nconst phase = createSlice({\r\n  name: \"phase\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setPhase(state, action) {\r\n      const phaseData = action.payload.phaseData;\r\n      state.phase = [...state.phase, ...phaseData];\r\n    },\r\n    addPhase(state, action) {\r\n      const newPhase = action.payload.newPhase;\r\n      state.phase = [...state.phase, ...newPhase];\r\n    },\r\n    loadPhase(state, action) {\r\n      const phase_data = action.payload.newPhase;\r\n      // state.phase = [...phase_data];\r\n      state.phase = phase_data;\r\n    },\r\n    //End of Reducers\r\n  },\r\n});\r\n\r\nexport default phase;\r\nexport const phaseActions = phase.actions;\r\n"]},"metadata":{},"sourceType":"module"}