{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\CreateMaintenance\\\\AssignType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./CreateMaintenance.module.css\";\nimport { Button, RadioGroup, FormControlLabel, Radio, MenuItem, Select, Dialog } from '@material-ui/core';\nimport Table from \"../../../ui/Table/Table\";\nimport { AgGridColumn } from 'ag-grid-react';\nimport { v4 as uuid } from 'uuid';\nimport { saveSensor } from './SaveHandler';\nimport CustomizedSnackbars from '../../../ui/CustomSnackBar';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignType = props => {\n  _s();\n\n  const [type, setType] = useState(\"\");\n  const [ageBasedUnit, setAgeBasedUnit] = useState(null);\n  const [calendarBasedUnit, setCalendarBasedUnit] = useState(null);\n  const [condition, setCondition] = useState(\"visual\");\n  const [failureMode, setFailureMode] = useState(null);\n  const [visualWearLevels, setVisualWearLevels] = useState(0);\n  const [visualCorrosionLevels, setVisualCorrosionLevels] = useState(0);\n  const [visualFrequency, setVisualFrequency] = useState(0);\n  const [degradationWearLevels, setDegradationWearLevels] = useState(0);\n  const [VisualWearRows, setVisualWearRows] = useState([]);\n  const [VisualCorrosionRows, setVisualCorrosionRows] = useState([]);\n  const [visualActionsRows, setVisualActionRows] = useState([]);\n\n  const changeVisualFrequency = e => {\n    setVisualFrequency(e.target.value);\n  };\n\n  const changeVisualWearLevel = e => {\n    setVisualWearLevels(e.target.value);\n    addVisualWearRows(e.target.value);\n  };\n\n  const changeVisualCorrosionLevel = e => {\n    setVisualCorrosionLevels(e.target.value);\n    addVisualCorrosionRows(e.target.value);\n  };\n\n  const changeDegradationWearLevel = e => {\n    setVisualWearLevels(e.target.value);\n  };\n\n  const handleMtypeChange = e => {\n    setType(e.target.value);\n  };\n\n  useEffect(() => {\n    addVisualActionRows();\n  }, [VisualWearRows, VisualCorrosionRows]);\n  const visualWearColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"wear\",\n    headerName: \"Wear\",\n    headerTooltip: \"Wear\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"image\",\n    headerName: \"Image\",\n    headerTooltip: \"Image\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this)];\n  const visualActionsCols = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"wear\",\n    headerName: \"Wear\",\n    headerTooltip: \"Wear\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"corrosion\",\n    headerName: \"Corrosion\",\n    headerTooltip: \"Corrosion\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"alarm\",\n    headerName: \"Alarms\",\n    headerTooltip: \"Alarms\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: ['Show on dashboard', 'Alarm1', 'Alarm2', 'Alarm3']\n    } //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    headerName: \"Invalid\",\n    field: \"invalid\" //editable={true}\n    ,\n    cellRenderer: params => {\n      var input = document.createElement('input');\n      input.type = \"checkbox\";\n      input.checked = params.value;\n      input.addEventListener('click', function (event) {\n        params.value = !params.value;\n        params.node.data.invalid = params.value;\n      });\n      return input;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 11\n  }, this)];\n\n  const addVisualWearRows = n => {\n    let newRows = [];\n    let i = 1;\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        level: `L${i}`,\n        wear: '',\n        image: ''\n      }];\n      n--;\n      i++;\n    }\n\n    console.log(newRows);\n    setVisualWearRows(newRows);\n  };\n\n  const visualCorrosionColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"corrosion\",\n    headerName: \"Corrosion\",\n    headerTooltip: \"Corrosion\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"image\",\n    headerName: \"Image\",\n    headerTooltip: \"Image\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this)];\n\n  const addVisualCorrosionRows = n => {\n    let newRows = [];\n    let i = 1;\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        level: `L${i}`,\n        corrosion: '',\n        image: ''\n      }];\n      n--;\n      i++;\n    }\n\n    console.log(newRows);\n    setVisualCorrosionRows(newRows);\n  };\n\n  const addVisualActionRows = () => {\n    let rows = [];\n    VisualWearRows.map(wearRow => {\n      VisualCorrosionRows.map(corrosionRow => {\n        rows = [...rows, {\n          wear: wearRow.level,\n          corrosion: corrosionRow.level,\n          alarm: 'Show on dashboard',\n          invalid: false\n        }];\n      });\n    });\n    console.log(rows);\n    setVisualActionRows(rows);\n  }; // Snackbar\n\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  }; //Condition modal\n\n\n  const [modal, setModal] = useState(false); //Sensor Based Monitoring\n\n  const [monitoringType, setMonitoringType] = useState('intermittent');\n  const [numPara, setNumPara] = useState(0);\n  const [pRows, setpRows] = useState([]);\n\n  const addPRows = n => {\n    let newRows = [];\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        EquipmentId: eqptId,\n        ComponentId: props.selectedComponent.id,\n        id: uuid(),\n        name: '',\n        unit: '',\n        min: '',\n        max: '',\n        level: '',\n        frequency: '',\n        data: ''\n      }];\n      n--;\n    }\n\n    console.log(newRows);\n    setpRows(newRows);\n  };\n\n  const parameterColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"name\",\n    headerName: \"Name\",\n    headerTooltip: \"Name\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"unit\",\n    headerName: \"Unit\",\n    headerTooltip: \"Unit\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"min\",\n    headerName: \"Minimum Value\",\n    headerTooltip: \"Minimum Value\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"max\",\n    headerName: \"Maximum Value\",\n    headerTooltip: \"Maximum Value\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this), monitoringType === 'intermittent' ? /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"frequency\",\n    headerName: \"Frequency\",\n    headerTooltip: \"Frequency\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 41\n  }, this) : null, /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"data\",\n    headerName: \"Data\",\n    headerTooltip: \"Data\" //minWidth={100}\n    ,\n    editable: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: ['From Excel File', 'From DB']\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this)];\n  const lvlwiseColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"name\",\n    headerName: \"Name\",\n    headerTooltip: \"Name\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"threshold\",\n    headerName: \"Threshold\",\n    headerTooltip: \"Threshold\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this)];\n\n  const updateParameterRowData = allRows => {\n    //get object of levels and lvlwise rows\n    let lvlwisearr = [];\n    let paramarr = [];\n    allRows.map(data => {\n      let lvlarr = [];\n\n      for (let i = 1; i <= data.level; i++) {\n        lvlarr.push('L' + i);\n        lvlwisearr.push({\n          id: uuid(),\n          pid: data.id,\n          name: data.name,\n          level: 'L' + i,\n          threshold: ''\n        });\n      }\n\n      paramarr.push(lvlarr);\n    });\n    setLvlwiseRows(lvlwisearr);\n    let result = paramarr.reduce((a, b) => a.reduce((r, v) => r.concat(b.map(w => [].concat(v, w))), [])); // console.log(result);\n\n    let rows = [];\n    let alarm_att = [];\n    result.map(row => {\n      let alarmId = uuid();\n      let newrow = {\n        id: alarmId,\n        alarm: 'Show on dashboard',\n        invalid: false\n      };\n      let i = 0;\n      allRows.map(data => {\n        // console.log(row)\n        alarm_att = [...alarm_att, {\n          id: uuid(),\n          AlarmId: alarmId,\n          paramId: lvlwisearr.filter(element => {\n            return element.name === data.name && element.level === row[i];\n          })[0].pid,\n          lvlId: lvlwisearr.filter(element => {\n            return element.name === data.name && element.level === row[i];\n          })[0].id\n        }];\n        newrow = { ...newrow,\n          [data.name]: row[i]\n        };\n        i++;\n      });\n      console.log(alarm_att);\n      rows = [...rows, newrow];\n    }); //console.log(rows)\n\n    setSbAlarmAtts(alarm_att);\n    setSbAlarmRows(rows); //get columns\n\n    let columns = allRows.map(data => {\n      if (data.name != \"\") {\n        return /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: data.name,\n          headerName: data.name,\n          headerTooltip: data.name //minWidth={100}\n          //editable={true}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 20\n        }, this);\n      }\n    });\n    setSbAlarmCols([/*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"alarm\",\n      headerName: \"Alarms\",\n      headerTooltip: \"Alarms\",\n      cellEditor: \"agSelectCellEditor\",\n      cellEditorParams: {\n        values: ['Show on dashboard', 'Alarm1', 'Alarm2', 'Alarm3']\n      } //minWidth={100}\n      ,\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      headerName: \"Invalid\",\n      field: \"invalid\" //editable={true}\n      ,\n      cellRenderer: params => {\n        var input = document.createElement('input');\n        input.type = \"checkbox\";\n        input.checked = params.value;\n        input.addEventListener('click', function (event) {\n          params.value = !params.value;\n          params.node.data.invalid = params.value;\n        });\n        return input;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 14\n    }, this), ...columns]);\n  }; //sensor-based Alarms Table\n\n\n  const [sbAlarmCols, setSbAlarmCols] = useState([]);\n  const [lvlwiseRows, setLvlwiseRows] = useState([]);\n  const [sbAlarmRows, setSbAlarmRows] = useState([]);\n  const [sbAlarmAtts, setSbAlarmAtts] = useState([]);\n\n  const handleSave = () => {\n    if (type === 'conditionBased') {\n      if (condition === 'sensorBased') {\n        let newRows = pRows.map(row => {\n          return { ...row,\n            FailureModeId: failureMode\n          };\n        });\n        let validAlarms = sbAlarmRows.filter(data => {\n          return !data.invalid;\n        }).map(row => row.id);\n        saveSensor({\n          sData: newRows,\n          lData: lvlwiseRows,\n          aData: sbAlarmRows.filter(row => {\n            return !row.invalid;\n          }),\n          alarmAtts: sbAlarmAtts.filter(attrow => {\n            return validAlarms.includes(attrow.AlarmId);\n          })\n        }, setSnackBarMessage);\n        console.log(validAlarms);\n        console.log({\n          sData: newRows,\n          lData: lvlwiseRows,\n          aData: sbAlarmRows.filter(row => {\n            return !row.invalid;\n          }),\n          alarmAtts: sbAlarmAtts.filter(attrow => {\n            return validAlarms.includes(attrow.AlarmId);\n          })\n        });\n      }\n    }\n  };\n\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  const systemData = useSelector(state => state.treeData.treeData);\n  const eqptId = systemData.filter(data => data.name === currentSelection.equipmentName)[0].id;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.assignDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.assignContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.flex,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Selected Component:\", props.selectedComponent.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"maintenance-type\",\n            value: type,\n            onChange: handleMtypeChange,\n            className: styles.mtypeRadio,\n            children: [props.selectedComponent.repairType === 'Repairable' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"runToFailure\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 113\n              }, this),\n              label: \"Run to Failure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 65\n            }, this), props.selectedComponent.repairType !== 'Repairable' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"ageBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 109\n              }, this),\n              label: \"Age Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 65\n            }, this), props.selectedComponent.repairType !== 'Repairable' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"calendarBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 114\n              }, this),\n              label: \"Calendar Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 65\n            }, this), props.selectedComponent.repairType === 'Repairable' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"conditionBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                onClick: () => setModal(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 115\n              }, this),\n              label: \"Condition Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btns,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Optimise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: modal,\n        onClose: () => setModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modal,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"condition\",\n            value: condition,\n            onChange: e => setCondition(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"visual\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 63\n              }, this),\n              label: \"Visual Inspection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"degradation\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 68\n              }, this),\n              label: \"Degradation Measurement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"sensorBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 68\n              }, this),\n              label: \"Sensor Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }, this), type === 'runToFailure' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: \"Run To Failure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 33\n      }, this), type === 'ageBased' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age-based-measurement-unit\",\n            children: \" Unit of Measurement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"age-based-measurement-unit-label\",\n            id: \"age-based-measurement-unit\",\n            value: ageBasedUnit,\n            onChange: e => setAgeBasedUnit(e.target.value),\n            className: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"hours\",\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"days\",\n              children: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"weeks\",\n              children: \"Weeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"months\",\n              children: \"Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"years\",\n              children: \"Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age-based-replacement-age\",\n            children: \" Replacement Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            id: \"age-based-replacement-age\",\n            name: \"age-based-replacement-age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 29\n      }, this), type === 'calendarBased' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calendar-based-measurement-unit\",\n            children: \" Unit of Measurement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"calendar-based-measurement-unit-label\",\n            id: \"calendar-based-measurement-unit\",\n            value: calendarBasedUnit,\n            onChange: e => setCalendarBasedUnit(e.target.value),\n            className: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"hours\",\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"days\",\n              children: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"weeks\",\n              children: \"Weeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"months\",\n              children: \"Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"years\",\n              children: \"Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calendar-based-replacement-age\",\n            children: \" Replacement Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            id: \"calendar-based-replacement-age\",\n            name: \"calendar-based-replacement-age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 34\n      }, this), type === 'conditionBased' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"failure-mode\",\n            children: \" Failure Mode to be inspected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"failure-mode-label\",\n            id: \"failure-mode\",\n            value: failureMode,\n            onChange: e => setFailureMode(e.target.value),\n            className: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode1\",\n              children: \"Failure Mode 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode2\",\n              children: \"Failure Mode 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode3\",\n              children: \"Failure Mode 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode4\",\n              children: \"Failure Mode 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode5\",\n              children: \"Failure Mode 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"failureMode5\",\n              children: \"NA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 9\n        }, this), condition === 'visual' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inspection-frequency\",\n              children: \" Inspection Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.input,\n              value: visualFrequency,\n              onChange: changeVisualFrequency,\n              type: \"number\",\n              id: \"inspection-frequency\",\n              name: \"inspection-frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levels,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Wear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"visual-wear-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: visualWearLevels,\n                  onChange: changeVisualWearLevel,\n                  type: \"number\",\n                  id: \"visual-wear-level\",\n                  name: \"visual-wear-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualWearColumnDefs,\n                rowData: VisualWearRows,\n                tableUpdate: rows => {\n                  console.log(rows);\n                },\n                height: 250\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Corrosion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"visual-corrosion-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: visualCorrosionLevels,\n                  onChange: changeVisualCorrosionLevel,\n                  type: \"number\",\n                  id: \"visual-corrosion-level\",\n                  name: \"visual-corrosion-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualCorrosionColumnDefs,\n                rowData: VisualCorrosionRows,\n                tableUpdate: rows => {\n                  console.log(rows);\n                },\n                height: 250\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levelwise,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.lwCol,\n              children: [\"Actions\", /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualActionsCols,\n                rowData: visualActionsRows,\n                tableUpdate: data => console.log(data),\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), condition === 'degradation' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levels,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Wear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Corrosion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"degradation-wear-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: degradationWearLevels,\n                  onChange: changeDegradationWearLevel,\n                  type: \"number\",\n                  id: \"degradation-wear-level\",\n                  name: \"degradation-wear-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"degradation-corrosion-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  type: \"text\",\n                  id: \"degradation-corrosion-level\",\n                  name: \"degradation-corrosion-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this)\n        }, void 0, false), condition === 'sensorBased' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"monitoring-type\",\n            value: monitoringType,\n            onChange: e => setMonitoringType(e.target.value),\n            className: styles.sensorRadio,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                labelPlacement: \"start\",\n                value: \"intermittent\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 93\n                }, this),\n                label: \"Intermittent Monitoring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              value: \"continuous\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 87\n              }, this),\n              label: \"Continuous Monitoring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.parameters,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.formField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parameters\",\n                children: \" Number of parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles.input,\n                value: numPara,\n                onChange: e => setNumPara(e.target.value),\n                type: \"number\",\n                id: \"parameters\",\n                name: \"parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addPRows(numPara),\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  marginLeft: 10\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.formField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parameters\",\n                children: \" Define parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: parameterColumnDefs,\n                rowData: pRows,\n                tableUpdate: updateParameterRowData,\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levelwise,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.lwCol,\n              children: [\"Level Wise Parameters\", /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: lvlwiseColumnDefs,\n                rowData: lvlwiseRows,\n                tableUpdate: data => console.log(data),\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.lwCol,\n              children: [\"Alarms\", /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: sbAlarmCols,\n                rowData: sbAlarmRows,\n                tableUpdate: data => console.log(data),\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignType, \"TEidx3J1RJAI190JBWBTyI/LxDM=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AssignType;\nexport default AssignType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignType\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Maintenance Allocation/CreateMaintenance/AssignType.js"],"names":["React","useEffect","useState","styles","Button","RadioGroup","FormControlLabel","Radio","MenuItem","Select","Dialog","Table","AgGridColumn","v4","uuid","saveSensor","CustomizedSnackbars","useSelector","AssignType","props","type","setType","ageBasedUnit","setAgeBasedUnit","calendarBasedUnit","setCalendarBasedUnit","condition","setCondition","failureMode","setFailureMode","visualWearLevels","setVisualWearLevels","visualCorrosionLevels","setVisualCorrosionLevels","visualFrequency","setVisualFrequency","degradationWearLevels","setDegradationWearLevels","VisualWearRows","setVisualWearRows","VisualCorrosionRows","setVisualCorrosionRows","visualActionsRows","setVisualActionRows","changeVisualFrequency","e","target","value","changeVisualWearLevel","addVisualWearRows","changeVisualCorrosionLevel","addVisualCorrosionRows","changeDegradationWearLevel","handleMtypeChange","addVisualActionRows","visualWearColumnDefs","visualActionsCols","values","params","input","document","createElement","checked","addEventListener","event","node","data","invalid","n","newRows","i","level","wear","image","console","log","visualCorrosionColumnDefs","corrosion","rows","map","wearRow","corrosionRow","alarm","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","modal","setModal","monitoringType","setMonitoringType","numPara","setNumPara","pRows","setpRows","addPRows","EquipmentId","eqptId","ComponentId","selectedComponent","id","name","unit","min","max","frequency","parameterColumnDefs","lvlwiseColumnDefs","updateParameterRowData","allRows","lvlwisearr","paramarr","lvlarr","push","pid","threshold","setLvlwiseRows","result","reduce","a","b","r","v","concat","w","alarm_att","row","alarmId","newrow","AlarmId","paramId","filter","element","lvlId","setSbAlarmAtts","setSbAlarmRows","columns","setSbAlarmCols","sbAlarmCols","lvlwiseRows","sbAlarmRows","sbAlarmAtts","handleSave","FailureModeId","validAlarms","sData","lData","aData","alarmAtts","attrow","includes","currentSelection","state","userSelection","systemData","treeData","equipmentName","assignDiv","assignContent","flex","mtypeRadio","repairType","btns","MTypeContent","formField","levels","levelCol","sectionHead","levelwise","lwCol","sensorRadio","parameters","marginLeft"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport styles from \"./CreateMaintenance.module.css\";\r\nimport { \r\n    Button,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Radio, \r\n    MenuItem,\r\n    Select,\r\n    Dialog} from '@material-ui/core';\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { AgGridColumn } from 'ag-grid-react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { saveSensor } from './SaveHandler';\r\nimport CustomizedSnackbars from '../../../ui/CustomSnackBar';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AssignType=(props)=> {\r\n    const[type,setType]=useState(\"\")\r\n    const[ageBasedUnit,setAgeBasedUnit]=useState(null)\r\n    const[calendarBasedUnit,setCalendarBasedUnit]=useState(null)\r\n    const[condition,setCondition]=useState(\"visual\")\r\n    const[failureMode,setFailureMode]=useState(null)\r\n    const[visualWearLevels,setVisualWearLevels]=useState(0)\r\n    const[visualCorrosionLevels,setVisualCorrosionLevels]=useState(0)\r\n    const[visualFrequency,setVisualFrequency]=useState(0)\r\n    const[degradationWearLevels,setDegradationWearLevels]=useState(0)\r\n    const[VisualWearRows,setVisualWearRows]=useState([])\r\n    const[VisualCorrosionRows,setVisualCorrosionRows]=useState([])\r\n    const[visualActionsRows,setVisualActionRows]=useState([])\r\n    const changeVisualFrequency=(e)=>{\r\n        setVisualFrequency(e.target.value)\r\n        \r\n    }\r\n    const changeVisualWearLevel=(e)=>{\r\n        setVisualWearLevels(e.target.value)\r\n        addVisualWearRows(e.target.value)\r\n    }\r\n    const changeVisualCorrosionLevel=(e)=>{\r\n        setVisualCorrosionLevels(e.target.value)\r\n        addVisualCorrosionRows(e.target.value)\r\n    }\r\n    const changeDegradationWearLevel=(e)=>{\r\n        setVisualWearLevels(e.target.value)\r\n        \r\n    }\r\n    const handleMtypeChange=(e)=>{\r\n        setType(e.target.value)\r\n    }\r\n    useEffect(()=>{\r\n        addVisualActionRows();\r\n    },[VisualWearRows,VisualCorrosionRows])\r\n\r\n    const visualWearColumnDefs = [  \r\n        <AgGridColumn\r\n          field=\"level\"\r\n          headerName=\"Level\"\r\n          headerTooltip=\"Level\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"wear\"\r\n          headerName=\"Wear\"\r\n          headerTooltip=\"Wear\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"image\"\r\n          headerName=\"Image\"\r\n          headerTooltip=\"Image\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        \r\n      ];\r\n      const visualActionsCols = [\r\n        <AgGridColumn\r\n          field=\"wear\"\r\n          headerName=\"Wear\"\r\n          headerTooltip=\"Wear\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"corrosion\"\r\n          headerName=\"Corrosion\"\r\n          headerTooltip=\"Corrosion\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n            field='alarm'\r\n            headerName='Alarms'\r\n            headerTooltip='Alarms'\r\n            cellEditor=\"agSelectCellEditor\"\r\n            cellEditorParams={{\r\n                values: ['Show on dashboard','Alarm1','Alarm2','Alarm3'],\r\n            }}\r\n            //minWidth={100}\r\n            editable={true}\r\n          />,\r\n          <AgGridColumn\r\n                headerName= \"Invalid\"\r\n                field= \"invalid\"\r\n                //editable={true}\r\n                cellRenderer={ (params)=>{ \r\n                    var input = document.createElement('input');\r\n                    input.type=\"checkbox\";\r\n                    input.checked=params.value;\r\n                    input.addEventListener('click', function (event) {\r\n                        params.value=!params.value;\r\n                        params.node.data.invalid = params.value;\r\n                    });\r\n                    return input;\r\n                }}\r\n            />\r\n        \r\n      ];\r\n      const addVisualWearRows=(n)=>{\r\n        let newRows=[]\r\n        let i=1\r\n        while(n>0){\r\n            newRows=[...newRows,{level:`L${i}`,wear:'',image:''}]\r\n            n--\r\n            i++\r\n        }\r\n        console.log(newRows);\r\n        setVisualWearRows(newRows)\r\n    }\r\n    const visualCorrosionColumnDefs = [\r\n        <AgGridColumn\r\n          field=\"level\"\r\n          headerName=\"Level\"\r\n          headerTooltip=\"Level\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"corrosion\"\r\n          headerName=\"Corrosion\"\r\n          headerTooltip=\"Corrosion\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"image\"\r\n          headerName=\"Image\"\r\n          headerTooltip=\"Image\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        \r\n      ];\r\n      const addVisualCorrosionRows=(n)=>{\r\n        let newRows=[]\r\n        let i=1\r\n        while(n>0){\r\n            newRows=[...newRows,{level:`L${i}`,corrosion:'',image:''}]\r\n            n--\r\n            i++\r\n        }\r\n        console.log(newRows);\r\n        setVisualCorrosionRows(newRows)\r\n    }\r\n\r\n    const addVisualActionRows=()=>{\r\n        let rows=[]\r\n        VisualWearRows.map(wearRow=>{\r\n            VisualCorrosionRows.map(corrosionRow=>{\r\n                rows=[...rows,{wear:wearRow.level,corrosion:corrosionRow.level,alarm:'Show on dashboard',invalid:false}]\r\n            })\r\n        })\r\n        console.log(rows);\r\n        setVisualActionRows(rows)\r\n    }\r\n    // Snackbar\r\n    const [SnackBarMessage, setSnackBarMessage] = useState({\r\n        severity: \"error\",\r\n        message: \"This is awesome\",\r\n        showSnackBar: false,\r\n      });\r\n      const onHandleSnackClose = () => {\r\n        setSnackBarMessage({\r\n          severity: \"error\",\r\n          message: \"Please Add Systemss\",\r\n          showSnackBar: false,\r\n        });\r\n      };\r\n    //Condition modal\r\n    const[modal,setModal]=useState(false)\r\n    //Sensor Based Monitoring\r\n    const [monitoringType,setMonitoringType]=useState('intermittent')\r\n    const [numPara,setNumPara]=useState(0)\r\n    const [pRows,setpRows]=useState([])\r\n\r\n    const addPRows=(n)=>{\r\n        let newRows=[]\r\n        while(n>0){\r\n            newRows=[...newRows,{EquipmentId:eqptId,ComponentId:props.selectedComponent.id,id:uuid(),name:'',unit:'',min:'',max:'',level:'',frequency:'',data:''}]\r\n            n--\r\n        }\r\n        console.log(newRows);\r\n        setpRows(newRows)\r\n    }\r\n\r\n    const parameterColumnDefs = [\r\n        <AgGridColumn\r\n          field=\"name\"\r\n          headerName=\"Name\"\r\n          headerTooltip=\"Name\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"unit\"\r\n          headerName=\"Unit\"\r\n          headerTooltip=\"Unit\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"min\"\r\n          headerName=\"Minimum Value\"\r\n          headerTooltip=\"Minimum Value\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"max\"\r\n          headerName=\"Maximum Value\"\r\n          headerTooltip=\"Maximum Value\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"level\"\r\n          headerName=\"Level\"\r\n          headerTooltip=\"Level\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        monitoringType==='intermittent'?<AgGridColumn\r\n          field=\"frequency\"\r\n          headerName=\"Frequency\"\r\n          headerTooltip=\"Frequency\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />:null,\r\n        <AgGridColumn\r\n          field=\"data\"\r\n          headerName=\"Data\"\r\n          headerTooltip=\"Data\"\r\n          //minWidth={100}\r\n          editable={true}\r\n          cellEditor=\"agSelectCellEditor\"\r\n            cellEditorParams={{\r\n                values: ['From Excel File','From DB'],\r\n            }}\r\n        />,\r\n        \r\n      ];\r\n    const lvlwiseColumnDefs = [\r\n        <AgGridColumn\r\n          field=\"name\"\r\n          headerName=\"Name\"\r\n          headerTooltip=\"Name\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"level\"\r\n          headerName=\"Level\"\r\n          headerTooltip=\"Level\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        <AgGridColumn\r\n          field=\"threshold\"\r\n          headerName=\"Threshold\"\r\n          headerTooltip=\"Threshold\"\r\n          //minWidth={100}\r\n          editable={true}\r\n        />,\r\n        \r\n      ];\r\n      const updateParameterRowData = (allRows) => {\r\n        //get object of levels and lvlwise rows\r\n        let lvlwisearr=[]\r\n        let paramarr=[]\r\n        allRows.map(data=>{\r\n            let lvlarr=[]\r\n            for(let i=1;i<=data.level;i++){\r\n                lvlarr.push('L'+i)\r\n                lvlwisearr.push({id:uuid(),pid:data.id,name:data.name,level:'L'+i,threshold:''})\r\n            }\r\n            paramarr.push(lvlarr)\r\n        })\r\n        setLvlwiseRows(lvlwisearr)\r\n        let result = paramarr.reduce((a, b) => a.reduce((r, v) => r.concat(b.map(w => [].concat(v, w))), []));\r\n        // console.log(result);\r\n        let rows=[]\r\n        let alarm_att=[]\r\n        result.map(row=>{\r\n            let alarmId=uuid()\r\n            let newrow={id:alarmId,alarm:'Show on dashboard',invalid:false}\r\n            let i=0\r\n            allRows.map(data=>{\r\n                // console.log(row)\r\n                alarm_att=[...alarm_att,{id:uuid(),AlarmId:alarmId,paramId:lvlwisearr.filter(element=>{\r\n                  return element.name===data.name&&element.level===row[i]\r\n                })[0].pid,lvlId:lvlwisearr.filter(element=>{\r\n                  return element.name===data.name&&element.level===row[i]\r\n                })[0].id}]\r\n                newrow={...newrow,[data.name]:row[i]}\r\n                i++\r\n            })\r\n            console.log(alarm_att);\r\n            rows=[...rows,newrow]\r\n        })\r\n\r\n        //console.log(rows)\r\n        setSbAlarmAtts(alarm_att)\r\n        setSbAlarmRows(rows)\r\n        //get columns\r\n        let columns=allRows.map(data=>{\r\n            if(data.name!=\"\"){\r\n            return <AgGridColumn\r\n            field={data.name}\r\n            headerName={data.name}\r\n            headerTooltip={data.name}\r\n            //minWidth={100}\r\n            //editable={true}\r\n          />}\r\n        })\r\n        setSbAlarmCols([<AgGridColumn\r\n            field='alarm'\r\n            headerName='Alarms'\r\n            headerTooltip='Alarms'\r\n            cellEditor=\"agSelectCellEditor\"\r\n            cellEditorParams={{\r\n                values: ['Show on dashboard','Alarm1','Alarm2','Alarm3'],\r\n            }}\r\n            //minWidth={100}\r\n            editable={true}\r\n          />,<AgGridColumn\r\n                headerName= \"Invalid\"\r\n                field= \"invalid\"\r\n                //editable={true}\r\n                cellRenderer={ (params)=>{ \r\n                    var input = document.createElement('input');\r\n                    input.type=\"checkbox\";\r\n                    input.checked=params.value;\r\n                    input.addEventListener('click', function (event) {\r\n                        params.value=!params.value;\r\n                        params.node.data.invalid = params.value;\r\n                    });\r\n                    return input;\r\n                }}\r\n            />,...columns]);\r\n        \r\n      };\r\n      //sensor-based Alarms Table\r\n      const[sbAlarmCols,setSbAlarmCols]=useState([])\r\n      const[lvlwiseRows,setLvlwiseRows]=useState([])\r\n      const[sbAlarmRows,setSbAlarmRows]=useState([])\r\n      const[sbAlarmAtts,setSbAlarmAtts]=useState([])\r\n      const handleSave=()=>{\r\n        if(type==='conditionBased'){\r\n            if(condition==='sensorBased'){\r\n                let newRows=pRows.map(row=>{\r\n                    return {...row,FailureModeId:failureMode}\r\n                })\r\n                let validAlarms=sbAlarmRows.filter(data=>{\r\n                  return !data.invalid\r\n                }).map(row=>row.id)\r\n                saveSensor({sData:newRows,lData:lvlwiseRows,aData:sbAlarmRows.filter(row=>{\r\n                  return !row.invalid\r\n                }),alarmAtts:sbAlarmAtts.filter(attrow=>{\r\n                  return (validAlarms.includes(attrow.AlarmId))\r\n                })\r\n                },setSnackBarMessage)\r\n                console.log(validAlarms);\r\n                console.log({sData:newRows,lData:lvlwiseRows,aData:sbAlarmRows.filter(row=>{\r\n                  return !row.invalid\r\n                }),alarmAtts:sbAlarmAtts.filter(attrow=>{\r\n                  return (validAlarms.includes(attrow.AlarmId))\r\n                })\r\n                });\r\n            }\r\n        }\r\n      }\r\n\r\n      const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      )\r\n      const systemData = useSelector(\r\n        (state) => state.treeData.treeData\r\n      )\r\n      const eqptId = systemData.filter(data=>data.name===currentSelection.equipmentName)[0].id\r\n    return (\r\n      <>\r\n      <div className={styles.assignDiv}>\r\n      <div className={styles.assignContent}>\r\n      <div className={styles.flex}>\r\n        <h3>Selected Component:{props.selectedComponent.name}</h3>\r\n        <RadioGroup\r\n            row\r\n            name=\"maintenance-type\"\r\n            value={type}\r\n            onChange={handleMtypeChange}\r\n            className={styles.mtypeRadio}\r\n        >\r\n            {props.selectedComponent.repairType==='Repairable'&&<FormControlLabel value=\"runToFailure\" control={<Radio />} label=\"Run to Failure\" />}\r\n            {props.selectedComponent.repairType!=='Repairable'&&<FormControlLabel value=\"ageBased\" control={<Radio />} label=\"Age Based Maintenance\" />}\r\n            {props.selectedComponent.repairType!=='Repairable'&&<FormControlLabel value=\"calendarBased\" control={<Radio />} label=\"Calendar Based Maintenance\" />}\r\n            {props.selectedComponent.repairType==='Repairable'&&<FormControlLabel value=\"conditionBased\" control={<Radio onClick={()=>setModal(true)}/>} label=\"Condition Based Maintenance\" />}\r\n      </RadioGroup>\r\n      </div>\r\n      <div className={styles.btns}>\r\n          <Button variant='contained' color='primary' onClick={handleSave}>Save</Button>\r\n          <Button variant='contained' color='primary'>Optimise</Button>\r\n      </div>\r\n      </div>\r\n      <Dialog open={modal} onClose={()=>setModal(false)} >\r\n          <div className={styles.modal}>\r\n            <h4>Select Condition</h4>\r\n            <RadioGroup\r\n                    name=\"condition\"\r\n                    value={condition}\r\n                    onChange={(e)=>setCondition(e.target.value)}\r\n                >\r\n                    <FormControlLabel value=\"visual\" control={<Radio />} label=\"Visual Inspection\" />\r\n                    <FormControlLabel value=\"degradation\" control={<Radio />} label=\"Degradation Measurement\" />\r\n                    <FormControlLabel value=\"sensorBased\" control={<Radio />} label=\"Sensor Based\" />\r\n            </RadioGroup>\r\n            </div>\r\n      </Dialog>\r\n        {type==='runToFailure'&&<div className={styles.MTypeContent}>\r\n                Run To Failure\r\n            </div>}\r\n        {type==='ageBased'&&<div className={styles.MTypeContent}>\r\n            <div className={styles.formField}>\r\n                <label htmlFor='age-based-measurement-unit'> Unit of Measurement</label>\r\n                <Select\r\n                    disableUnderline\r\n                    labelId=\"age-based-measurement-unit-label\"\r\n                    id=\"age-based-measurement-unit\"\r\n                    value={ageBasedUnit}\r\n                    onChange={(e)=>setAgeBasedUnit(e.target.value)}\r\n                    className={styles.input}\r\n                >\r\n                    <MenuItem value='hours'>Hours</MenuItem>\r\n                    <MenuItem value='days'>Days</MenuItem>\r\n                    <MenuItem value='weeks'>Weeks</MenuItem>\r\n                    <MenuItem value='months'>Months</MenuItem>\r\n                    <MenuItem value='years'>Years</MenuItem>\r\n                </Select>\r\n                </div>\r\n                <div className={styles.formField}>\r\n                <label htmlFor='age-based-replacement-age'> Replacement Age</label>\r\n                <input className={styles.input}  type='text' id='age-based-replacement-age' name='age-based-replacement-age'/>\r\n            </div>\r\n        </div>}\r\n        {type==='calendarBased'&&<div className={styles.MTypeContent}>\r\n            <div className={styles.formField}>\r\n                <label htmlFor='calendar-based-measurement-unit'> Unit of Measurement</label>\r\n                <Select\r\n                    disableUnderline\r\n                    labelId=\"calendar-based-measurement-unit-label\"\r\n                    id=\"calendar-based-measurement-unit\"\r\n                    value={calendarBasedUnit}\r\n                    onChange={(e)=>setCalendarBasedUnit(e.target.value)}\r\n                    className={styles.input}\r\n                >\r\n                    <MenuItem value='hours'>Hours</MenuItem>\r\n                    <MenuItem value='days'>Days</MenuItem>\r\n                    <MenuItem value='weeks'>Weeks</MenuItem>\r\n                    <MenuItem value='months'>Months</MenuItem>\r\n                    <MenuItem value='years'>Years</MenuItem>\r\n                </Select>\r\n                </div>\r\n                <div className={styles.formField}>\r\n                <label htmlFor='calendar-based-replacement-age'> Replacement Age</label>\r\n                <input className={styles.input}  type='text' id='calendar-based-replacement-age' name='calendar-based-replacement-age'/>\r\n                </div>\r\n            </div>}\r\n        {type==='conditionBased'&&<div className={styles.MTypeContent}>\r\n        <div className={styles.formField}>\r\n                <label htmlFor='failure-mode'> Failure Mode to be inspected</label>\r\n                <Select\r\n                    disableUnderline\r\n                    labelId=\"failure-mode-label\"\r\n                    id=\"failure-mode\"\r\n                    value={failureMode}\r\n                    onChange={(e)=>setFailureMode(e.target.value)}\r\n                    className={styles.input}\r\n                >\r\n                    <MenuItem value='failureMode1'>Failure Mode 1</MenuItem>\r\n                    <MenuItem value='failureMode2'>Failure Mode 2</MenuItem>\r\n                    <MenuItem value='failureMode3'>Failure Mode 3</MenuItem>\r\n                    <MenuItem value='failureMode4'>Failure Mode 4</MenuItem>\r\n                    <MenuItem value='failureMode5'>Failure Mode 5</MenuItem>\r\n                    <MenuItem value='failureMode5'>NA</MenuItem>\r\n                </Select>\r\n                </div>\r\n            {condition==='visual'&&<>\r\n                    <div className={styles.formField}>\r\n                        <label htmlFor='inspection-frequency'> Inspection Frequency</label>\r\n                        <input className={styles.input} value={visualFrequency} onChange={changeVisualFrequency}  type='number' id='inspection-frequency' name='inspection-frequency'/>\r\n                    </div>\r\n                    <div className={styles.levels}>\r\n                        <div className={styles.levelCol}>\r\n                            <div className={styles.sectionHead}>Wear</div>\r\n                            <div className={styles.formField}>\r\n                            \r\n                            <label htmlFor='visual-wear-level'>No. of levels</label>\r\n                            <input className={styles.input} value={visualWearLevels} onChange={changeVisualWearLevel} type='number' id='visual-wear-level' name='visual-wear-level'/>\r\n                            \r\n                            </div>\r\n                            <Table columnDefs={visualWearColumnDefs} rowData={VisualWearRows} tableUpdate={(rows)=>{console.log(rows);}} height={250}/>\r\n                        </div>\r\n                        <div className={styles.levelCol}>\r\n                            <div className={styles.sectionHead}>Corrosion</div>\r\n                            <div className={styles.formField}>\r\n                            <label htmlFor='visual-corrosion-level'>No. of levels</label>\r\n                                <input className={styles.input} value={visualCorrosionLevels} onChange={changeVisualCorrosionLevel} type='number' id='visual-corrosion-level' name='visual-corrosion-level'/>\r\n                        \r\n                                </div>\r\n                                <Table columnDefs={visualCorrosionColumnDefs} rowData={VisualCorrosionRows} tableUpdate={(rows)=>{console.log(rows);}} height={250}/>\r\n                                </div>\r\n\r\n                    </div>\r\n                    <div className={styles.levelwise}>\r\n                    <div className={styles.lwCol}>\r\n                            Actions\r\n                            <Table\r\n                                columnDefs={visualActionsCols}\r\n                                rowData={visualActionsRows}\r\n                                tableUpdate={(data)=>console.log(data)}\r\n                                height={200}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            {condition==='degradation'&&<>\r\n                    <div className={styles.levels}>\r\n                        <div className={styles.levelCol}>\r\n                            <div className={styles.sectionHead}>Wear</div>\r\n                            <div className={styles.sectionHead}>Corrosion</div>\r\n                        </div>\r\n                        <div className={styles.levelCol}>\r\n                            <div className={styles.formField}>\r\n                                <label htmlFor='degradation-wear-level'>No. of levels</label>\r\n                                <input className={styles.input} value={degradationWearLevels} onChange={changeDegradationWearLevel} type='number' id='degradation-wear-level' name='degradation-wear-level'/>\r\n                            </div>\r\n                            <div className={styles.formField}>\r\n                                <label htmlFor='degradation-corrosion-level'>No. of levels</label>\r\n                                <input className={styles.input}  type='text' id='degradation-corrosion-level' name='degradation-corrosion-level'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.levelCol}>\r\n                        \r\n                        </div>\r\n                    </div>\r\n            </>}\r\n            {condition==='sensorBased'&&<>\r\n            <RadioGroup\r\n                row\r\n                name=\"monitoring-type\"\r\n                value={monitoringType}\r\n                onChange={(e)=>setMonitoringType(e.target.value)}\r\n                className={styles.sensorRadio}\r\n            >\r\n                <div>\r\n                    <FormControlLabel  labelPlacement='start' value=\"intermittent\" control={<Radio />} label=\"Intermittent Monitoring\" />\r\n                </div>\r\n                <FormControlLabel  labelPlacement='start' value=\"continuous\" control={<Radio />} label=\"Continuous Monitoring\" />\r\n            </RadioGroup>\r\n            <div className={styles.parameters}>\r\n                <div className={styles.formField}>\r\n                    <label htmlFor='parameters'> Number of parameters</label>\r\n                    <input className={styles.input} value={numPara} onChange={(e)=>setNumPara(e.target.value)}  type='number' id='parameters' name='parameters'/>\r\n                    <Button onClick={()=>addPRows(numPara)} variant='contained' color='primary' style={{marginLeft:10}}>Submit</Button>\r\n                </div>\r\n                <div className={styles.formField}>\r\n                    <label htmlFor='parameters'> Define parameters</label>\r\n                    <Table\r\n                    columnDefs={parameterColumnDefs}\r\n                    rowData={pRows}\r\n                    tableUpdate={updateParameterRowData}\r\n                    height={200}\r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className={styles.levelwise}>\r\n            <div className={styles.lwCol}>\r\n                Level Wise Parameters\r\n                <Table\r\n                    columnDefs={lvlwiseColumnDefs}\r\n                    rowData={lvlwiseRows}\r\n                    tableUpdate={(data)=>console.log(data)}\r\n                    height={200}\r\n                    />\r\n            </div>\r\n            <div className={styles.lwCol}>\r\n                Alarms\r\n                <Table\r\n                    columnDefs={sbAlarmCols}\r\n                    rowData={sbAlarmRows}\r\n                    tableUpdate={(data)=>console.log(data)}\r\n                    height={200}\r\n                    />\r\n            </div>\r\n            </div>\r\n            </>}\r\n            </div>}\r\n        </div>\r\n        {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n    );\r\n  }\r\n  export default AssignType;"]},"metadata":{},"sourceType":"module"}