{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\TaskDashboard\\\\TaskDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import styles from \"./TaskDashboard.module.css\";\n\nimport { InputLabel, TextField, makeStyles, Button } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Label, ReferenceLine } from 'recharts'; // import { arr,arr2 } from \"./data\";\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport styles from \"./tDashboard.module.css\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskDashboard = () => {\n  _s();\n\n  const [shipOption, setshipOption] = useState([]);\n  const [taskOption, settaskOption] = useState([]);\n  const [missionOption, setmissionOption] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(\"\");\n  const [selectedMission, setSelectedMission] = useState(\"\"); // Reliability Dashboard\n\n  const [showSubsystem, setSubSystem] = useState(false);\n  const [isCardFlipped, setCardFlipped] = useState(false);\n  const [currentMission, setMission] = useState(0);\n  const [eqDataOption, setEqDataOption] = useState([]);\n  const [selectedEqName, setEquipmentName] = useState(null);\n  const [selectedShipName, setShipName] = useState(null);\n  const [selectedMissionName, setMissionName] = useState(null);\n  const [graphData, setGraphData] = useState([]);\n  const [subSystemData, setSubSystemData] = useState([]);\n  const [eventInfo, setEventInfo] = useState(null);\n  useEffect(() => {\n    fetch(\"/task_dash_populate\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      debugger;\n      const mission_data = data[\"missionData\"];\n      const taskNames = data[\"tasks\"];\n      setmissionOption(mission_data);\n      settaskOption(taskNames);\n    });\n  }, []);\n  const dropDownStyle = makeStyles({\n    root: {\n      paddingLeft: 10,\n      background: \"#fff\",\n      border: \"1px solid #0263a1\",\n      borderRadius: \"5px\",\n      width: \"320px\",\n      minHeight: \"40px\",\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  });\n  const classes = dropDownStyle();\n  let arr = [];\n  let arr2 = [];\n\n  for (let i = 0; i < 50; i++) {\n    // const maxDate = Date.now();\n    // const timestamp = Math.floor(Math.random() * maxDate);\n    arr = [...arr, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    }];\n    arr2 = [...arr2, {\n      name: new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0, 10),\n      uv: Math.floor(Math.random() * (75 - 30 + 1)) + 30\n    }];\n  }\n\n  const [showGraph, setShowGraph] = useState(false);\n\n  const onSubmitHandler = () => {\n    const data = {\n      \"taskName\": selectedTask,\n      \"selectedMission\": selectedMission\n    };\n    fetch(\"/task_rel\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      debugger;\n      console.log(d);\n\n      if (d.length > 1) {\n        console.log(d);\n      }\n    });\n  };\n\n  const minThreshold = 45;\n  const maxThreshold = 60;\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: taskOption,\n            getOptionLabel: option => option.name,\n            onChange: (event, value) => setSelectedTask(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"black\",\n              fontSize: \"16px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Select Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: missionOption,\n            getOptionLabel: option => option.missionName,\n            onChange: (event, value) => setSelectedMission(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\" // label=\"Multiple values\"\n              // placeholder=\"Favorites\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: \"2rem\"\n          },\n          onClick: onSubmitHandler,\n          children: [console.log(arr[arr.length - 1][\"uv\"] + \"hello2\"), \"Submit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.midSection,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#86a0ff\",\n          height: 300,\n          width: 300,\n          style: {\n            marginTop: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), graphData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.midSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rchart,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.relChart,\n                children: graphData && /*#__PURE__*/_jsxDEV(ReliabilityChart, {\n                  data: graphData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.compareMission,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this), \" Compare with other missions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), cardData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: [/*#__PURE__*/_jsxDEV(MissionSlider, {\n                    missions: cardData,\n                    currentMission: currentMission,\n                    setMission: setMission\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(MissionData, {\n                    mission: cardData[currentMission]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.showSubsystem,\n                    children: [\"Show Subsytem Level\", \" \", /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: showSubsystem,\n                      disabled: !subSystemData.length,\n                      onChange: () => {\n                        setSubSystem(!showSubsystem);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.missionbox,\n                  children: \"Select Missions to compare\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.calendar,\n                children: /*#__PURE__*/_jsxDEV(EventCalendar, {\n                  events: events\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n                isFlipped: isCardFlipped,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.datePicker,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.dpHeader,\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    variant: \"inline\",\n                    format: \"L\",\n                    margin: \"normal\",\n                    id: \"start-date\",\n                    label: \"Start Date\",\n                    value: startDate,\n                    onChange: handleStartDateChange,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"start date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    variant: \"inline\",\n                    format: \"L\",\n                    margin: \"normal\",\n                    id: \"end-date\",\n                    label: \"End Date\",\n                    value: endDate,\n                    onChange: handleEndDateChange,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"end date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    style: {\n                      width: 200\n                    },\n                    onClick: () => {\n                      handleEventCheck();\n                    },\n                    children: \"Check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.datePicker,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.dpHeader,\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this), eventInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"The Equipment was: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Running for\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.working, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 29\n                      }, this), \"(\", (eventInfo.working / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Under Maintenance for\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.maintenance, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 29\n                      }, this), \"(\", (eventInfo.maintenance / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Down for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [eventInfo.down, \" days\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 38\n                      }, this), \"(\", (eventInfo.down / eventInfo.total * 100).toFixed(2), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    style: {\n                      width: 200\n                    },\n                    onClick: () => {\n                      setCardFlipped(!isCardFlipped);\n                    },\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskDashboard, \"tHR8Esid2bZzLre9pDZOPRAyW2g=\");\n\n_c = TaskDashboard;\nexport default TaskDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/TaskDashboard/TaskDashboard.js"],"names":["React","useState","useEffect","InputLabel","TextField","makeStyles","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Label","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","Navigation","styles","CustomSelect","Autocomplete","Loader","TaskDashboard","shipOption","setshipOption","taskOption","settaskOption","missionOption","setmissionOption","loading","setLoading","selectedTask","setSelectedTask","selectedMission","setSelectedMission","showSubsystem","setSubSystem","isCardFlipped","setCardFlipped","currentMission","setMission","eqDataOption","setEqDataOption","selectedEqName","setEquipmentName","selectedShipName","setShipName","selectedMissionName","setMissionName","graphData","setGraphData","subSystemData","setSubSystemData","eventInfo","setEventInfo","fetch","method","headers","Accept","then","res","json","data","mission_data","taskNames","dropDownStyle","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","classes","arr","arr2","i","name","Date","getTime","Math","random","toISOString","slice","uv","floor","showGraph","setShowGraph","onSubmitHandler","body","JSON","stringify","d","console","log","length","minThreshold","maxThreshold","mprofile","fontWeight","color","fontSize","marginBottom","option","event","value","params","InputProps","disableUnderline","missionName","marginTop","midSection","rchart","content","relChart","compareMission","display","alignItems","cardData","missionbox","calendar","events","datePicker","dpHeader","startDate","handleStartDateChange","endDate","handleEndDateChange","handleEventCheck","working","total","toFixed","maintenance","down"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import styles from \"./TaskDashboard.module.css\";\r\nimport {  InputLabel, TextField,makeStyles,Button} from \"@material-ui/core\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,Label,ReferenceLine } from 'recharts';\r\n// import { arr,arr2 } from \"./data\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport styles from \"./tDashboard.module.css\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\n\r\nconst TaskDashboard = () => {\r\n  const [shipOption, setshipOption] = useState([]);\r\n  const [taskOption, settaskOption] = useState([]);\r\n  const [missionOption, setmissionOption] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedTask, setSelectedTask] = useState(\"\");\r\n  const [selectedMission, setSelectedMission] = useState(\"\");\r\n\r\n  // Reliability Dashboard\r\n  const [showSubsystem, setSubSystem] = useState(false);\r\n\r\n  const [isCardFlipped, setCardFlipped] = useState(false);\r\n\r\n  const [currentMission, setMission] = useState(0);\r\n  const [eqDataOption, setEqDataOption] = useState([]);\r\n\r\n  const [selectedEqName, setEquipmentName] = useState(null);\r\n  const [selectedShipName, setShipName] = useState(null);\r\n  const [selectedMissionName, setMissionName] = useState(null);\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const [subSystemData, setSubSystemData] = useState([]);\r\n  const [eventInfo, setEventInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/task_dash_populate\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        debugger;\r\n        const mission_data = data[\"missionData\"];\r\n        const taskNames = data[\"tasks\"]\r\n        setmissionOption(mission_data);\r\n        settaskOption(taskNames);      \r\n      });\r\n  }, []);\r\n\r\n\r\n  const dropDownStyle = makeStyles({\r\n    root: {\r\n      paddingLeft: 10,\r\n      background: \"#fff\",\r\n      border: \"1px solid #0263a1\",\r\n      borderRadius: \"5px\",\r\n      width: \"320px\",\r\n      minHeight: \"40px\",\r\n      boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    inputRoot:{\r\n      width: '100%'\r\n    },\r\n  });\r\n  const classes=dropDownStyle();\r\n  let arr=[]\r\n  let arr2=[]\r\n  for(let i=0;i<50;i++){\r\n    // const maxDate = Date.now();\r\n    // const timestamp = Math.floor(Math.random() * maxDate);\r\n    arr=[...arr,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (80 - 30 + 1)) + 30}]\r\n\r\n    arr2=[...arr2,{name:new Date(new Date(2021, 1, 1).getTime() + Math.random() * (new Date(2022, 1, 1).getTime() - new Date(2021, 1, 1).getTime())).toISOString().slice(0,10),uv:Math.floor(Math.random() * (75 - 30 + 1)) + 30}]\r\n  }\r\n  const [showGraph,setShowGraph]=useState(false);\r\n\r\n  const onSubmitHandler = () => { \r\n    const data = {\"taskName\": selectedTask, \"selectedMission\": selectedMission}\r\n    fetch(\"/task_rel\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        debugger;\r\n        console.log(d);\r\n        if(d.length > 1){\r\n          console.log(d);\r\n        }\r\n      });\r\n  };\r\n\r\n  const minThreshold=45\r\n  const maxThreshold=60\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          {/* <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Ship Name\r\n            </InputLabel>\r\n            <CustomSelect fields={['a','b','c','d','e']}/>\r\n              \r\n           \r\n            \r\n          </div> */}\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Task Name\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={taskOption}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange = {(event, value) => setSelectedTask(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n          \r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Select Mission\r\n            </InputLabel>\r\n\r\n            <Autocomplete\r\n            classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={missionOption}\r\n              getOptionLabel={(option) => option.missionName}\r\n              onChange={(event, value) => setSelectedMission(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{...params.InputProps, disableUnderline: true}}\r\n                  variant=\"standard\"\r\n                  // label=\"Multiple values\"\r\n                  // placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            \r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginTop: \"2rem\",\r\n            }}\r\n            onClick={onSubmitHandler} \r\n          >{console.log(arr[arr.length-1][\"uv\"]+\"hello2\")}\r\n            Submit\r\n          </Button>\r\n\r\n\r\n         \r\n          \r\n        </div>\r\n        \r\n        \r\n        \r\n            {/* {showGraph?<div className={styles.midSection}>\r\n\r\n            <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 1</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  \r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                 \r\n                </LineChart>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 2</div>\r\n                <LineChart width={550} height={300} data={arr2}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,75]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke={maxThreshold>=arr2[arr2.length-1][\"uv\"] && arr2[arr2.length-1][\"uv\"]>=minThreshold?\"green\":\"red\"} />\r\n                  \r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 3</div>\r\n                <LineChart width={550} height={300} data={arr}>\r\n                  <XAxis dataKey=\"name\" tick={false} label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} />\r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n                  <ReferenceLine y={45} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n\r\n    \r\n                 \r\n                </div>\r\n              </div>\r\n            \r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                <div>Parameter 4</div>\r\n                <LineChart width={500} height={300} data={arr}>\r\n                \r\n                <XAxis dataKey=\"name\" label={{ value: \"Date\", position: \"insideBottom\", dy: 10}} height={45} tick={false} />\r\n                 \r\n                  <YAxis domain={[30,80]} label={{ value: 'Vibration Data', angle: -90, position: 'center' ,paddingRight:'20px', dy: -10}} width={80}/>\r\n\r\n                  \r\n                  <ReferenceLine y={40} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <ReferenceLine y={60} stroke=\"red\" strokeDasharray=\"6 6\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid horizontal={false} vertical={false}/>\r\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n                </LineChart>\r\n\r\n                \r\n    \r\n                 `\r\n                </div>\r\n              </div>\r\n\r\n              \r\n             \r\n            </div>:null} */}\r\n            \r\n            {loading && (\r\n          <div className={styles.midSection}>\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#86a0ff\"\r\n              height={300}\r\n              width={300}\r\n              style={{ marginTop: 100 }}\r\n            />\r\n          </div>\r\n        )}\r\n        {graphData.length ? (\r\n          <>\r\n            <div className={styles.midSection}>\r\n              <div className={styles.rchart}>\r\n                <div className={styles.content}>\r\n                  <div className={styles.relChart}>\r\n                    {graphData && <ReliabilityChart data={graphData} />}\r\n                  </div>\r\n                  <div className={styles.compareMission}>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <AddCircleOutlineIcon /> Compare with other missions\r\n                    </div>\r\n                    {cardData ? (\r\n                      <div className={styles.missionbox}>\r\n                        {/* <div className={styles.missionName}>Mission B</div> */}\r\n                        <MissionSlider\r\n                          missions={cardData}\r\n                          currentMission={currentMission}\r\n                          setMission={setMission}\r\n                        />\r\n                        <MissionData mission={cardData[currentMission]} />\r\n                        <div className={styles.showSubsystem}>\r\n                          Show Subsytem Level{\" \"}\r\n                          <Switch\r\n                            checked={showSubsystem}\r\n                            disabled={!subSystemData.length}\r\n                            onChange={() => {\r\n                              setSubSystem(!showSubsystem);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className={styles.missionbox}>\r\n                        Select Missions to compare\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.calendar}>\r\n                {/* <div className={styles.header}>\r\n              <div style={{display:'flex',alignItems:'center'}}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-calendar-event\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#0d1a45\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n              <rect x=\"4\" y=\"5\" width=\"16\" height=\"16\" rx=\"2\" />\r\n              <line x1=\"16\" y1=\"3\" x2=\"16\" y2=\"7\" />\r\n              <line x1=\"8\" y1=\"3\" x2=\"8\" y2=\"7\" />\r\n              <line x1=\"4\" y1=\"11\" x2=\"20\" y2=\"11\" />\r\n              <rect x=\"8\" y=\"15\" width=\"2\" height=\"2\" />\r\n            </svg>Calendar</div> <div><LensIcon style={{color:'#8af6ad',opacity:'0.5'}}/>Working <LensIcon style={{color:'#ff8788',opacity:'0.5'}}/>Down <LensIcon style={{color:'#f3f682',opacity:'0.5'}}/>Maintenance</div></div> */}\r\n                <div className={styles.content}>\r\n                  <div className={styles.calendar}>\r\n                    <EventCalendar events={events} />\r\n                  </div>\r\n                  <ReactCardFlip isFlipped={isCardFlipped}>\r\n                    <div className={styles.datePicker}>\r\n                      <div className={styles.dpHeader}>Availability</div>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"L\"\r\n                        margin=\"normal\"\r\n                        id=\"start-date\"\r\n                        label=\"Start Date\"\r\n                        value={startDate}\r\n                        onChange={handleStartDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"start date\",\r\n                        }}\r\n                      />\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"L\"\r\n                        margin=\"normal\"\r\n                        id=\"end-date\"\r\n                        label=\"End Date\"\r\n                        value={endDate}\r\n                        onChange={handleEndDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"end date\",\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ width: 200 }}\r\n                        onClick={() => {\r\n                          handleEventCheck();\r\n                        }}\r\n                      >\r\n                        Check\r\n                      </Button>\r\n                    </div>\r\n                    <div className={styles.datePicker}>\r\n                      <div className={styles.dpHeader}>Availability</div>\r\n                      {eventInfo && (\r\n                        <>\r\n                          <div>The Equipment was: </div>\r\n                          <div>\r\n                            Running for{\" \"}\r\n                            <strong>{eventInfo.working} days</strong>(\r\n                            {(\r\n                              (eventInfo.working / eventInfo.total) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            %)\r\n                          </div>\r\n                          <div>\r\n                            Under Maintenance for{\" \"}\r\n                            <strong>{eventInfo.maintenance} days</strong>(\r\n                            {(\r\n                              (eventInfo.maintenance / eventInfo.total) *\r\n                              100\r\n                            ).toFixed(2)}\r\n                            %)\r\n                          </div>\r\n                          <div>\r\n                            Down for <strong>{eventInfo.down} days</strong>(\r\n                            {((eventInfo.down / eventInfo.total) * 100).toFixed(\r\n                              2\r\n                            )}\r\n                            %)\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ width: 200 }}\r\n                        onClick={() => {\r\n                          setCardFlipped(!isCardFlipped);\r\n                        }}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    </div>\r\n                  </ReactCardFlip>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className={styles.subSystemLevel}>\r\n              {showSubsystem && (\r\n                <div className={styles.subSystemContent}>\r\n                  <div className={styles.subSystemLevelChart}>\r\n                    <div>\r\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          class=\"icon icon-tabler icon-tabler-adjustments\"\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke-width=\"1.5\"\r\n                          stroke=\"#0d1a45\"\r\n                          fill=\"none\"\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                        >\r\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                          <circle cx=\"6\" cy=\"10\" r=\"2\" />\r\n                          <line x1=\"6\" y1=\"4\" x2=\"6\" y2=\"8\" />\r\n                          <line x1=\"6\" y1=\"12\" x2=\"6\" y2=\"20\" />\r\n                          <circle cx=\"12\" cy=\"16\" r=\"2\" />\r\n                          <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"14\" />\r\n                          <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"20\" />\r\n                          <circle cx=\"18\" cy=\"7\" r=\"2\" />\r\n                          <line x1=\"18\" y1=\"4\" x2=\"18\" y2=\"5\" />\r\n                          <line x1=\"18\" y1=\"9\" x2=\"18\" y2=\"20\" />\r\n                        </svg>\r\n                        Sub System Level Indicator\r\n                      </div>\r\n                    </div>\r\n                    <BarGraph data={subSystemData} />\r\n                  </div>\r\n                  <div style={{ width: \"20%\" }}>\r\n                    <MissionData\r\n                      mission={cardData[currentMission]}\r\n                      style={{ height: 200 }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div> */}\r\n          </>\r\n        ) : null}\r\n\r\n        \r\n      </div>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\nexport default TaskDashboard;\r\n"]},"metadata":{},"sourceType":"module"}