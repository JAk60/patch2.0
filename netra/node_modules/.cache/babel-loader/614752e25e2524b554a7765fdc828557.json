{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\PM OPTIM\\\\GroupTable.js\";\nimport React from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupTable = ({\n  height,\n  n,\n  columnDefs\n}) => {\n  // Generate row data with 'n' number of rows\n  const rowData = [];\n\n  for (let i = 1; i <= n; i++) {\n    rowData.push({\n      id: i,\n      name: `Row ${i}`,\n      age: 20 + i,\n      component: `Component ${i}`\n    });\n  } // Modify the first column to be of type 'text'\n\n\n  const modifiedColumnDefs = [{\n    headerName: \"Component\",\n    field: \"component\",\n    editable: true\n  }, ...columnDefs.slice(1).map(col => ({ ...col,\n    type: 'number'\n  }))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: height,\n      width: '100%',\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: modifiedColumnDefs,\n      rowData: rowData,\n      defaultColDef: {\n        flex: 1,\n        resizable: true,\n        filter: true,\n        sortable: true,\n        editable: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GroupTable;\nexport default GroupTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupTable\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/PM OPTIM/GroupTable.js"],"names":["React","AgGridReact","GroupTable","height","n","columnDefs","rowData","i","push","id","name","age","component","modifiedColumnDefs","headerName","field","editable","slice","map","col","type","width","position","flex","resizable","filter","sortable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,CAAV;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAChD;AACA,QAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,CAArB,EAAwBG,CAAC,EAAzB,EAA6B;AAC3BD,IAAAA,OAAO,CAACE,IAAR,CAAa;AAAEC,MAAAA,EAAE,EAAEF,CAAN;AAASG,MAAAA,IAAI,EAAG,OAAMH,CAAE,EAAxB;AAA2BI,MAAAA,GAAG,EAAE,KAAKJ,CAArC;AAAwCK,MAAAA,SAAS,EAAG,aAAYL,CAAE;AAAlE,KAAb;AACD,GAL+C,CAOhD;;;AACA,QAAMM,kBAAkB,GAAG,CACzB;AAAEC,IAAAA,UAAU,EAAE,WAAd;AAA2BC,IAAAA,KAAK,EAAE,WAAlC;AAA+CC,IAAAA,QAAQ,EAAE;AAAzD,GADyB,EAEzB,GAAGX,UAAU,CAACY,KAAX,CAAiB,CAAjB,EAAoBC,GAApB,CAAwBC,GAAG,KAAK,EAAE,GAAGA,GAAL;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAL,CAA3B,CAFsB,CAA3B;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEjB,MAAAA,MAAM,EAAEA,MAAV;AAAkBkB,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAAxC;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,UAAU,EAAET,kBADd;AAEE,MAAA,OAAO,EAAEP,OAFX;AAGE,MAAA,aAAa,EAAE;AACbiB,QAAAA,IAAI,EAAE,CADO;AAEbC,QAAAA,SAAS,EAAE,IAFE;AAGbC,QAAAA,MAAM,EAAE,IAHK;AAIbC,QAAAA,QAAQ,EAAE,IAJG;AAKbV,QAAAA,QAAQ,EAAE;AALG;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5BD;;KAAMd,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nconst GroupTable = ({ height, n, columnDefs }) => {\r\n  // Generate row data with 'n' number of rows\r\n  const rowData = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    rowData.push({ id: i, name: `Row ${i}`, age: 20 + i, component: `Component ${i}` });\r\n  }\r\n\r\n  // Modify the first column to be of type 'text'\r\n  const modifiedColumnDefs = [\r\n    { headerName: \"Component\", field: \"component\", editable: true },\r\n    ...columnDefs.slice(1).map(col => ({ ...col, type: 'number' }))\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ag-theme-alpine\" style={{ height: height, width: '100%', position: 'relative' }}>\r\n      <AgGridReact\r\n        columnDefs={modifiedColumnDefs}\r\n        rowData={rowData}\r\n        defaultColDef={{\r\n          flex: 1,\r\n          resizable: true,\r\n          filter: true,\r\n          sortable: true,\r\n          editable: true,\r\n        }}\r\n      ></AgGridReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupTable;\r\n"]},"metadata":{},"sourceType":"module"}