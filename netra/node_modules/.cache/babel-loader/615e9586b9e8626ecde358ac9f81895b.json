{"ast":null,"code":"var _jsxFileName = \"E:\\\\NETRA PROJECT\\\\Netra\\\\netra\\\\src\\\\pages\\\\System Docs\\\\SysDocs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewModule from \"../../components/module/NewModule\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport styles from \"./SysDocs.module.css\";\nimport ustyles from '../systen_configuration/SystemConfiguration.module.css';\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\"; //From Add new equipment form\n\nimport { userActions } from \"../../store/ApplicationVariable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { treeDataActions } from \"../../store/TreeDataStore\";\nimport classes from \"./EqptStructuring.module.css\";\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\"; // import Tree from \"./Tree\";\n// import TreeComponent from \"../../sortableTree/SortableTree\";\n\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"0 2.5em\"\n  }\n});\nconst SystemStyles = makeStyles({\n  formControl: {\n    margin: \"2rem\",\n    minWidth: 200\n  },\n  Submit: {\n    margin: \"2rem\"\n  },\n  buttons: {\n    minWidth: 150,\n    marginLeft: 10,\n    marginTop: 15,\n    float: \"right\"\n  }\n});\n\nconst SysDocs = props => {\n  _s();\n\n  const SystemClasses = SystemStyles();\n  const dispatch = useDispatch();\n  const selectedInputs = useSelector(state => state.userSelection.currentSelection);\n  const [disableButton, setDisableButton] = useState(false);\n  let fData = useSelector(state => state.treeData.treeData);\n  const [file, setFile] = useState();\n\n  const handleFileChange = e => {\n    // alert(\"fghfgh\")\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleUploadClick = () => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append(\"system\", selectedInputs[\"equipmentName\"]);\n    data.append(\"name\", selectedInputs[\"shipName\"]); // if (!file) {\n    //   return;\n    // }\n    // // üëá Uploading the file using the fetch API to the server\n\n    fetch('/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(\"fs\");\n      });\n    });\n  }; //   const [gridApi, setGridApi] = useState(null);\n\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Close\",\n      showSnackBar: false\n    });\n  };\n\n  const [parentFiledValue, setParentFieldValue] = useState({\n    title: \"\",\n    name: \"\",\n    children: [],\n    id: \"\",\n    eqType: \"\",\n    parentName: \"\",\n    parentId: \"\",\n    lmu: 1\n  });\n  const [questionsOptions, setquestionsOptions] = useState([]);\n  const [selectedFileName, setselectedFileName] = useState(null);\n\n  const questionOnChange = e => {\n    debugger;\n    let data = e.target.value;\n    let name = e.target.name;\n    setselectedFileName(data);\n  };\n\n  const classesButton = useStyles();\n\n  const parentOnChange = (e, value) => {\n    debugger;\n    setParentFieldValue(value);\n  };\n\n  const clearForm = e => {\n    e.preventDefault();\n    setDisableButton(false);\n    dispatch(treeDataActions.setTreeData({\n      treeData: []\n    }));\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      command: \"\",\n      ship_name: \"\",\n      department: \"\",\n      shipClass: \"\",\n      shipC: \"\"\n    },\n    //validationSchema: validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      // alert(JSON.stringify(values, null, 2));\n      debugger; //   const { platform, platformType, system, systemType } = values;\n\n      console.log(values);\n      fetch(\"/addUserSelectionData\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          values\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.code == 1) {\n          // resetForm()\n          setSnackBarMessage({\n            severity: \"success\",\n            message: data.message,\n            showSnackBar: true\n          });\n        } else {\n          setSnackBarMessage({\n            severity: \"error\",\n            message: data.message,\n            showSnackBar: true\n          });\n        }\n      }); //   \n      //   const platformId = uuid();\n      //   const systemId = uuid();\n      //   debugger;\n      //   const treeNodes = [\n      //     {\n      //       name: system,\n      //       id: systemId,\n      //       eqType: systemType,\n      //       parentName: selectedInputs[\"shipName\"],\n      //       parentId: null,\n      //       parent: null,\n      //       children: [],\n      //       lmu: 1,\n      //       command: selectedInputs[\"command\"],\n      //       department: selectedInputs[\"department\"],\n      //       shipCategory: selectedInputs[\"shipCategory\"],\n      //       shipClass: selectedInputs[\"shipClass\"],\n      //       shipName: selectedInputs[\"shipName\"],\n      //     },\n      //   ];\n      //   const updateEqStore = {\n      //     equipmentName: system,\n      //     equipmentCode: systemType,\n      //   };\n      //   const filteredData = {\n      //     equipmentName: [system],\n      //     equipmentCode: [systemType],\n      //   };\n      //   dispatch(treeDataActions.addElement({ data: treeNodes }));\n      //   dispatch(\n      //     userActions.onAddingEquipmentName({\n      //       selectedData: updateEqStore,\n      //       filteredData: filteredData,\n      //     })\n      //   );\n      //   setDisableButton(true);\n    }\n  });\n\n  const loadFiles = () => {\n    fetch(\"/fetch_system_files\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        \"system\": selectedInputs[\"equipmentName\"],\n        \"ship_name\": selectedInputs[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(d => {\n      // debugger;\n      setquestionsOptions(d.files);\n    });\n  }; //handle download\n\n\n  const downloadFile = () => {\n    let system = selectedInputs[\"equipmentName\"].replace(/\\s/g, '');\n    let ship_name = selectedInputs[\"shipName\"].replace(/\\s/g, '');\n    let nnn = selectedFileName; // alert(questionsOptions)\n\n    const link = document.createElement('a');\n    link.download = `${selectedFileName}`; //       // üëáÔ∏è set to relative path\n\n    link.href = `/${ship_name}_${system}/${selectedFileName}`;\n    link.click();\n  }; //Save Button Handler\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ustyles.flex,\n        style: {\n          marginTop: \"5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: ustyles.user,\n          children: /*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: SystemClasses.buttons,\n            onClick: loadFiles,\n            children: \"Load System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: \"Previously Added Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              width: \"100%\"\n            },\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  style: {\n                    width: '100%'\n                  },\n                  id: \"q7\",\n                  name: \"\",\n                  label: \"\",\n                  fields: questionsOptions,\n                  onChange: questionOnChange,\n                  value: ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  className: classesButton.root,\n                  onClick: downloadFile,\n                  children: \"Download File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  className: classesButton.root,\n                  onClick: handleUploadClick,\n                  children: \"Upload File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SysDocs, \"dzAsvw1TKRASlXak5PJ0im9i3lc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useStyles, useFormik];\n});\n\n_c = SysDocs;\nexport default SysDocs;\n\nvar _c;\n\n$RefreshReg$(_c, \"SysDocs\");","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/src/pages/System Docs/SysDocs.js"],"names":["React","useEffect","useState","NewModule","Navigation","UserSelection","styles","ustyles","AgGridColumn","Table","Button","makeStyles","Grid","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","userActions","useDispatch","useSelector","treeDataActions","classes","LabelToolTip","CustomTextInput","CustomSelect","AutoSelect","useFormik","uuid","useStyles","root","margin","SystemStyles","formControl","minWidth","Submit","buttons","marginLeft","marginTop","float","SysDocs","props","SystemClasses","dispatch","selectedInputs","state","userSelection","currentSelection","disableButton","setDisableButton","fData","treeData","file","setFile","handleFileChange","e","target","files","handleUploadClick","data","FormData","append","fetch","method","body","then","response","json","console","log","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","parentFiledValue","setParentFieldValue","title","name","children","id","eqType","parentName","parentId","lmu","questionsOptions","setquestionsOptions","selectedFileName","setselectedFileName","questionOnChange","value","classesButton","parentOnChange","clearForm","preventDefault","setTreeData","formik","resetForm","initialValues","command","ship_name","department","shipClass","shipC","onSubmit","values","JSON","stringify","headers","Accept","res","code","loadFiles","d","downloadFile","system","replace","nnn","link","document","createElement","download","href","click","flex","user","table","form","header","width","handleSubmit","formrow1","field1"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport styles from \"./SysDocs.module.css\";\r\nimport ustyles from '../systen_configuration/SystemConfiguration.module.css'\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n\r\n//From Add new equipment form\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\nimport classes from \"./EqptStructuring.module.css\";\r\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\";\r\n// import Tree from \"./Tree\";\r\n// import TreeComponent from \"../../sortableTree/SortableTree\";\r\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\"; \r\nconst useStyles = makeStyles({\r\n    root: {\r\n      margin: \"0 2.5em\",\r\n    },\r\n  });\r\n  \r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\nconst SysDocs = (props) => {\r\n  const SystemClasses = SystemStyles();\r\n  const dispatch = useDispatch();\r\n  const selectedInputs = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  let fData = useSelector((state) => state.treeData.treeData);\r\n  const [file, setFile] = useState();\r\n\r\n  const handleFileChange = (e) => {\r\n    // alert(\"fghfgh\")\r\n    if (e.target.files) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n  const handleUploadClick = () => {\r\n    const data = new FormData() \r\n    data.append('file', file)\r\n    data.append(\"system\", selectedInputs[\"equipmentName\"])\r\n    data.append(\"name\", selectedInputs[\"shipName\"])\r\n    // if (!file) {\r\n    //   return;\r\n    // }\r\n\r\n    // // üëá Uploading the file using the fetch API to the server\r\n    fetch('/upload', {\r\n      method: 'POST',\r\n      body: data,\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        console.log(\"fs\")\r\n      });\r\n    });\r\n  };\r\n//   const [gridApi, setGridApi] = useState(null);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Close\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const [parentFiledValue, setParentFieldValue] = useState({\r\n    title: \"\",\r\n    name: \"\",\r\n    children: [],\r\n    id: \"\",\r\n    eqType: \"\",\r\n    parentName: \"\",\r\n    parentId: \"\",\r\n    lmu: 1,\r\n  });\r\n  const[questionsOptions,setquestionsOptions]=useState([]);\r\n  const[selectedFileName,setselectedFileName]=useState(null);\r\n  const questionOnChange = (e) => {\r\n    debugger;\r\n    let data = e.target.value;\r\n    let name = e.target.name;\r\n    setselectedFileName(data)\r\n  }\r\n  const classesButton = useStyles();\r\n  const parentOnChange = (e, value) => {\r\n    debugger\r\n    setParentFieldValue(value);\r\n  };\r\n  const clearForm = (e) => {\r\n    e.preventDefault();\r\n    setDisableButton(false);\r\n    dispatch(treeDataActions.setTreeData({ treeData: [] }));\r\n    formik.resetForm();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        command: \"\",\r\n      ship_name: \"\",\r\n      department: \"\",\r\n      shipClass: \"\",\r\n      shipC: \"\",\r\n    },\r\n    //validationSchema: validationSchema,\r\n    onSubmit: (values, {resetForm}) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      debugger;\r\n    //   const { platform, platformType, system, systemType } = values;\r\n      console.log(values);\r\n      fetch(\"/addUserSelectionData\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({values}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n            if (data.code == 1){\r\n                // resetForm()\r\n          setSnackBarMessage({\r\n            severity: \"success\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        }else{\r\n            setSnackBarMessage({\r\n                severity: \"error\",\r\n                message: data.message,\r\n                showSnackBar: true,\r\n              });\r\n        }\r\n        })\r\n    //   \r\n    //   const platformId = uuid();\r\n    //   const systemId = uuid();\r\n    //   debugger;\r\n    //   const treeNodes = [\r\n    //     {\r\n    //       name: system,\r\n    //       id: systemId,\r\n    //       eqType: systemType,\r\n    //       parentName: selectedInputs[\"shipName\"],\r\n    //       parentId: null,\r\n    //       parent: null,\r\n    //       children: [],\r\n    //       lmu: 1,\r\n    //       command: selectedInputs[\"command\"],\r\n    //       department: selectedInputs[\"department\"],\r\n    //       shipCategory: selectedInputs[\"shipCategory\"],\r\n    //       shipClass: selectedInputs[\"shipClass\"],\r\n    //       shipName: selectedInputs[\"shipName\"],\r\n    //     },\r\n    //   ];\r\n    //   const updateEqStore = {\r\n    //     equipmentName: system,\r\n    //     equipmentCode: systemType,\r\n    //   };\r\n    //   const filteredData = {\r\n    //     equipmentName: [system],\r\n    //     equipmentCode: [systemType],\r\n    //   };\r\n    //   dispatch(treeDataActions.addElement({ data: treeNodes }));\r\n    //   dispatch(\r\n    //     userActions.onAddingEquipmentName({\r\n    //       selectedData: updateEqStore,\r\n    //       filteredData: filteredData,\r\n    //     })\r\n    //   );\r\n    //   setDisableButton(true);\r\n    },\r\n  });\r\n\r\n  const loadFiles = () => {\r\n    fetch(\"/fetch_system_files\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\"system\": selectedInputs[\"equipmentName\"], \"ship_name\": selectedInputs[\"shipName\"]}),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      }).then((d) => {\r\n        // debugger;\r\n        setquestionsOptions(d.files)\r\n      })\r\n  }\r\n\r\n  //handle download\r\n  const downloadFile = () => {\r\n    let system = selectedInputs[\"equipmentName\"].replace(/\\s/g,'')\r\n    let ship_name = selectedInputs[\"shipName\"].replace(/\\s/g,'')\r\n    let nnn = selectedFileName\r\n    // alert(questionsOptions)\r\n    const link = document.createElement('a');\r\n    link.download = `${selectedFileName}`;\r\n    //       // üëáÔ∏è set to relative path\r\n    link.href = `/${ship_name}_${system}/${selectedFileName}`;\r\n    link.click();\r\n  }\r\n  //Save Button Handler\r\n \r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        {/* <div className={styles.module}>\r\n          <NewModule />\r\n        </div> */}\r\n        {/* <div className={styles.user}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={SystemClasses.buttons}\r\n            onClick={onSaveButtonClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div> */}\r\n        <div className={ustyles.flex} style={{ marginTop: \"5rem\" }}>\r\n          <div className={ustyles.user} ><UserSelection /></div>\r\n          <div className={styles.buttons}>\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={loadFiles}\r\n              >\r\n                Load System\r\n              </Button>\r\n        </div>\r\n          </div>\r\n\r\n        <div className={styles.table}>\r\n          {/* <Table\r\n            rowData={rowState}\r\n            columnDefs={MProfileColumns}\r\n            tableUpdate={setFinalTableData}\r\n            setGrid={setGridApi}\r\n            gridApi={gridApi}\r\n          /> */}\r\n         <div className={classes.form}>\r\n      <div className={classes.header}>Previously Added Documents</div>\r\n        <form style={{ width: \"100%\" }} onSubmit={formik.handleSubmit}>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              {/* <LabelToolTip label=\"Command Name\" info=\"Info\" /> */}\r\n              <CustomSelect\r\n                style={{ width: '100%'}}\r\n                id=\"q7\"\r\n                name= \"\"\r\n                label=\"\"\r\n                fields={questionsOptions}\r\n                onChange={questionOnChange}\r\n                value={''}\r\n\r\n                />\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className={classes.formrow1}>\r\n          <div className={classes.field1}>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n            </div>  \r\n          <div className={classes.field1}>\r\n          <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                className={classesButton.root}\r\n                onClick={downloadFile}\r\n              >\r\n                Download File\r\n              </Button>\r\n          </div>\r\n            <div className={classes.field1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                className={classesButton.root}\r\n                onClick={handleUploadClick}\r\n              >\r\n                Upload File\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n       \r\n      </div>\r\n          {/* <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SysDocs;\r\n"]},"metadata":{},"sourceType":"module"}