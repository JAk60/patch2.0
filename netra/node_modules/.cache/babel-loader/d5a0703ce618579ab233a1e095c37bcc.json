{"ast":null,"code":"var _jsxFileName = \"E:\\\\NetraB\\\\netra\\\\src\\\\components\\\\main\\\\EqptStructuring\\\\EqptStructuring.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useState, useRef } from \"react\";\nimport classes from \"./EqptStructuring.module.css\";\nimport LabelToolTip from \"./LabelToolTip/LabelToolTip\"; // import Tree from \"./Tree\";\n\nimport TreeComponent from \"../../sortableTree/SortableTree\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport xData from \"../../sortableTree/SortableTreeData\";\nimport { userActions } from \"../../../store/ApplicationVariable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"0 2.5em\"\n  }\n});\n\nfunction EqptStructuring() {\n  _s();\n\n  const dispatch = useDispatch();\n  let fData = useSelector(state => state.treeData.treeData);\n  const selectedInputs = useSelector(state => state.userSelection.currentSelection);\n  const systemConfigurationData = useSelector(state => state.treeData.sortTreeData);\n  const [disableButton, setDisableButton] = useState(false);\n  const classesButton = useStyles();\n  const [childInputFields, setChildInputFields] = useState([]); // const customSelectFields = treeData.map((x) => `${x.title}`);\n\n  const [parentFiledValue, setParentFieldValue] = useState({\n    title: \"\",\n    name: \"\",\n    children: [],\n    id: \"\",\n    eqType: \"\",\n    parentName: \"\",\n    parentId: \"\",\n    lmu: 1\n  });\n\n  const clearForm = e => {\n    e.preventDefault();\n    setDisableButton(false);\n    dispatch(treeDataActions.setTreeData({\n      treeData: []\n    }));\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      platform: \"\",\n      platformType: \"\",\n      system: \"\",\n      systemType: \"\"\n    },\n    //validationSchema: validationSchema,\n    onSubmit: values => {\n      // alert(JSON.stringify(values, null, 2));\n      const {\n        platform,\n        platformType,\n        system,\n        systemType\n      } = values;\n      console.log(selectedInputs);\n      const platformId = uuid();\n      const systemId = uuid();\n      debugger;\n      const treeNodes = [{\n        name: system,\n        id: systemId,\n        eqType: systemType,\n        parentName: selectedInputs[\"shipName\"],\n        parentId: null,\n        parent: null,\n        children: [],\n        lmu: 1,\n        command: selectedInputs[\"command\"],\n        department: selectedInputs[\"department\"],\n        shipCategory: selectedInputs[\"shipCategory\"],\n        shipClass: selectedInputs[\"shipClass\"],\n        shipName: selectedInputs[\"shipName\"]\n      }];\n      const updateEqStore = {\n        equipmentName: system,\n        equipmentCode: systemType\n      };\n      const filteredData = {\n        equipmentName: [system],\n        equipmentCode: [systemType]\n      };\n      dispatch(treeDataActions.addElement({\n        data: treeNodes\n      }));\n      dispatch(userActions.onAddingEquipmentName({\n        selectedData: updateEqStore,\n        filteredData: filteredData\n      }));\n      setDisableButton(true);\n    }\n  });\n\n  const onAddNewChildField = () => {\n    setChildInputFields(prevstate => {\n      // const stateLen = prevstate.length;\n      // // return [...prevstate, stateLen + 1];\n      return [...prevstate, {\n        childName: \"\",\n        childPartId: \"\"\n      }];\n    });\n  };\n\n  const onDeleteChildField = index => {\n    const childCopy = [...childInputFields];\n    childCopy.splice(index, 1);\n    setChildInputFields(childCopy);\n  };\n\n  const parentOnChange = (e, value) => {\n    debugger;\n    setParentFieldValue(value);\n  };\n\n  const updateChildTree = e => {\n    e.preventDefault(); //Make tree object\n\n    const treeNodes = childInputFields.map(x => {\n      const cUuid = uuid();\n      return {\n        name: x.childName,\n        children: [],\n        id: cUuid,\n        eqType: x.childPartId,\n        parentName: parentFiledValue.name,\n        parentId: parentFiledValue.id,\n        parent: parentFiledValue.id,\n        lmu: 1,\n        command: selectedInputs[\"command\"],\n        department: selectedInputs[\"department\"],\n        shipCategory: selectedInputs[\"shipCategory\"],\n        shipClass: selectedInputs[\"shipClass\"],\n        shipName: selectedInputs[\"shipName\"]\n      };\n    });\n    dispatch(treeDataActions.addChildElement({\n      children: treeNodes,\n      parentId: parentFiledValue.id\n    }));\n    setParentFieldValue({\n      title: \"\",\n      name: \"\",\n      children: [],\n      id: \"\",\n      eqType: \"\",\n      parentName: \"\",\n      parentId: \"\",\n      lmu: 1\n    }); // Autocomplete zero\n\n    setChildInputFields([]);\n  };\n\n  const handleChildChange = (index, e) => {\n    let newArr = [...childInputFields];\n    newArr[index][e.target.name] = e.target.value;\n    setChildInputFields(newArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: \"Add New Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            width: \"100%\"\n          },\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formrow1,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.field1,\n              children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                label: \"System Name\",\n                info: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                className: classes.fullWidth,\n                id: \"system\",\n                name: \"system\",\n                value: formik.values.system,\n                onChange: formik.handleChange,\n                disabled: disableButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.field1,\n              children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                label: \"System Type\",\n                info: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                className: classes.fullWidth,\n                id: \"systemType\",\n                name: \"systemType\",\n                value: formik.values.systemType,\n                onChange: formik.handleChange,\n                disabled: disableButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.parent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"400px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                label: \"Parent Component\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AutoSelect, {\n                fields: fData,\n                onChange: parentOnChange,\n                value: parentFiledValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"20px\",\n                marginRight: '2%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: classesButton.root,\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"reset\",\n                onClick: clearForm,\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 15\n              }, this), !disableButton && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formrow2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateChildTree,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.child,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 5,\n                  children: /*#__PURE__*/_jsxDEV(LabelToolTip, {\n                    label: \"Child Component Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 5,\n                  children: /*#__PURE__*/_jsxDEV(LabelToolTip, {\n                    label: \"Part Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), childInputFields.map((child, item) => {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 5,\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                      className: classes.fullWidth,\n                      name: \"childName\" // id=\"childName\"\n                      ,\n                      value: child.childName,\n                      onChange: e => handleChildChange(item, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 5,\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                      className: classes.fullWidth,\n                      name: \"childPartId\" // id=\"partId\"\n                      ,\n                      value: child.childPartId,\n                      onChange: e => handleChildChange(item, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    style: {\n                      marginTop: \"35px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"medium\",\n                      onClick: () => {\n                        onDeleteChildField(item);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this)]\n                }, item, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"right\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\" //onClick={updateChildTree}\n              ,\n              type: \"submit\",\n              disabled: !(childInputFields.length > 0),\n              children: \"Update All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: \"20px\"\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onAddNewChildField,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tree,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.treeChild,\n        children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n          height: \"400px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EqptStructuring, \"LDkA21VJdrW+6xJTP8GSVXCA4Wo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useStyles, useFormik];\n});\n\n_c = EqptStructuring;\nexport default EqptStructuring;\n\nvar _c;\n\n$RefreshReg$(_c, \"EqptStructuring\");","map":{"version":3,"sources":["E:/NetraB/netra/src/components/main/EqptStructuring/EqptStructuring.js"],"names":["Button","Grid","makeStyles","React","useState","useRef","classes","LabelToolTip","TreeComponent","DeleteIcon","CustomTextInput","CustomSelect","AutoSelect","useFormik","v4","uuid","useDispatch","useSelector","treeDataActions","xData","userActions","useStyles","root","margin","EqptStructuring","dispatch","fData","state","treeData","selectedInputs","userSelection","currentSelection","systemConfigurationData","sortTreeData","disableButton","setDisableButton","classesButton","childInputFields","setChildInputFields","parentFiledValue","setParentFieldValue","title","name","children","id","eqType","parentName","parentId","lmu","clearForm","e","preventDefault","setTreeData","formik","resetForm","initialValues","platform","platformType","system","systemType","onSubmit","values","console","log","platformId","systemId","treeNodes","parent","command","department","shipCategory","shipClass","shipName","updateEqStore","equipmentName","equipmentCode","filteredData","addElement","data","onAddingEquipmentName","selectedData","onAddNewChildField","prevstate","childName","childPartId","onDeleteChildField","index","childCopy","splice","parentOnChange","value","updateChildTree","map","x","cUuid","addChildElement","handleChildChange","newArr","target","form","header","width","handleSubmit","formrow1","field1","fullWidth","handleChange","marginTop","marginRight","formrow2","child","item","float","marginBottom","length","marginLeft","tree","treeChild"],"mappings":"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","sourcesContent":["import { Button, Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport classes from \"./EqptStructuring.module.css\";\r\nimport LabelToolTip from \"./LabelToolTip/LabelToolTip\";\r\n// import Tree from \"./Tree\";\r\nimport TreeComponent from \"../../sortableTree/SortableTree\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport xData from \"../../sortableTree/SortableTreeData\";\r\nimport { userActions } from \"../../../store/ApplicationVariable\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"0 2.5em\",\r\n  },\r\n});\r\n\r\nfunction EqptStructuring() {\r\n  const dispatch = useDispatch();\r\n  let fData = useSelector((state) => state.treeData.treeData);\r\n  const selectedInputs = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const systemConfigurationData = useSelector(\r\n    (state) => state.treeData.sortTreeData\r\n  );\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const classesButton = useStyles();\r\n  const [childInputFields, setChildInputFields] = useState([]);\r\n  // const customSelectFields = treeData.map((x) => `${x.title}`);\r\n  const [parentFiledValue, setParentFieldValue] = useState({\r\n    title: \"\",\r\n    name: \"\",\r\n    children: [],\r\n    id: \"\",\r\n    eqType: \"\",\r\n    parentName: \"\",\r\n    parentId: \"\",\r\n    lmu: 1,\r\n  });\r\n\r\n  const clearForm = (e) => {\r\n    e.preventDefault();\r\n    setDisableButton(false);\r\n    dispatch(treeDataActions.setTreeData({ treeData: [] }));\r\n    formik.resetForm();\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      platform: \"\",\r\n      platformType: \"\",\r\n      system: \"\",\r\n      systemType: \"\",\r\n    },\r\n    //validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      const { platform, platformType, system, systemType } = values;\r\n      console.log(selectedInputs);\r\n      const platformId = uuid();\r\n      const systemId = uuid();\r\n      debugger;\r\n      const treeNodes = [\r\n        {\r\n          name: system,\r\n          id: systemId,\r\n          eqType: systemType,\r\n          parentName: selectedInputs[\"shipName\"],\r\n          parentId: null,\r\n          parent: null,\r\n          children: [],\r\n          lmu: 1,\r\n          command: selectedInputs[\"command\"],\r\n          department: selectedInputs[\"department\"],\r\n          shipCategory: selectedInputs[\"shipCategory\"],\r\n          shipClass: selectedInputs[\"shipClass\"],\r\n          shipName: selectedInputs[\"shipName\"],\r\n        },\r\n      ];\r\n      const updateEqStore = {\r\n        equipmentName: system,\r\n        equipmentCode: systemType,\r\n      };\r\n      const filteredData = {\r\n        equipmentName: [system],\r\n        equipmentCode: [systemType],\r\n      };\r\n      dispatch(treeDataActions.addElement({ data: treeNodes }));\r\n      dispatch(\r\n        userActions.onAddingEquipmentName({\r\n          selectedData: updateEqStore,\r\n          filteredData: filteredData,\r\n        })\r\n      );\r\n      setDisableButton(true);\r\n    },\r\n  });\r\n\r\n  const onAddNewChildField = () => {\r\n    setChildInputFields((prevstate) => {\r\n      // const stateLen = prevstate.length;\r\n      // // return [...prevstate, stateLen + 1];\r\n      return [...prevstate, { childName: \"\", childPartId: \"\" }];\r\n    });\r\n  };\r\n  const onDeleteChildField = (index) => {\r\n    const childCopy = [...childInputFields];\r\n    childCopy.splice(index, 1);\r\n    setChildInputFields(childCopy);\r\n  };\r\n  const parentOnChange = (e, value) => {\r\n    debugger\r\n    setParentFieldValue(value);\r\n  };\r\n  const updateChildTree = (e) => {\r\n    e.preventDefault();\r\n    //Make tree object\r\n    const treeNodes = childInputFields.map((x) => {\r\n      const cUuid = uuid();\r\n      return {\r\n        name: x.childName,\r\n        children: [],\r\n        id: cUuid,\r\n        eqType: x.childPartId,\r\n        parentName: parentFiledValue.name,\r\n        parentId: parentFiledValue.id,\r\n        parent: parentFiledValue.id,\r\n        lmu: 1,\r\n        command: selectedInputs[\"command\"],\r\n        department: selectedInputs[\"department\"],\r\n        shipCategory: selectedInputs[\"shipCategory\"],\r\n        shipClass: selectedInputs[\"shipClass\"],\r\n        shipName: selectedInputs[\"shipName\"],\r\n      };\r\n    });\r\n    dispatch(\r\n      treeDataActions.addChildElement({\r\n        children: treeNodes,\r\n        parentId: parentFiledValue.id,\r\n      })\r\n    );\r\n    setParentFieldValue({\r\n      title: \"\",\r\n      name: \"\",\r\n      children: [],\r\n      id: \"\",\r\n      eqType: \"\",\r\n      parentName: \"\",\r\n      parentId: \"\",\r\n      lmu: 1,\r\n    });\r\n    // Autocomplete zero\r\n    setChildInputFields([]);\r\n  };\r\n  const handleChildChange = (index, e) => {\r\n    let newArr = [...childInputFields];\r\n    newArr[index][e.target.name] = e.target.value;\r\n    setChildInputFields(newArr);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.form}>\r\n      <div className={classes.header}>Add New Equipment</div>\r\n      <div>\r\n        <form style={{ width: \"100%\" }} onSubmit={formik.handleSubmit}>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Name\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"system\"\r\n                name=\"system\"\r\n                value={formik.values.system}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Type\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"systemType\"\r\n                name=\"systemType\"\r\n                value={formik.values.systemType}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n          </div>\r\n          <div className={classes.parent}>\r\n            <div style={{ width: \"400px\" }}>\r\n              <LabelToolTip label=\"Parent Component\" />\r\n              <AutoSelect\r\n                fields={fData}\r\n                onChange={parentOnChange}\r\n                value={parentFiledValue}\r\n              ></AutoSelect>\r\n            </div>\r\n            <div style={{ marginTop: \"20px\",marginRight:'2%' }}>\r\n              <Button\r\n                className={classesButton.root}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"reset\"\r\n                onClick={clearForm}\r\n              >\r\n                Clear\r\n              </Button>\r\n              {!disableButton && (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        </div>\r\n        <div className={classes.formrow2}>\r\n          {/* //onSubmit={updateChildTree} ref={childForm} */}\r\n\r\n          {/* This is the end */}\r\n          <form onSubmit={updateChildTree}>\r\n            <div className={classes.child}>\r\n              <Grid container>\r\n                <Grid container item spacing={4}>\r\n                  <Grid item xs={5}>\r\n                    <LabelToolTip label=\"Child Component Name\" />\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <LabelToolTip label=\"Part Code\" />\r\n                  </Grid>\r\n                  <Grid item xs={2}></Grid>\r\n                </Grid>\r\n                {childInputFields.map((child, item) => {\r\n                  return (\r\n                    <Grid container item key={item} spacing={4}>\r\n                      <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                        <CustomTextInput\r\n                          className={classes.fullWidth}\r\n                          name=\"childName\"\r\n                          // id=\"childName\"\r\n                          value={child.childName}\r\n                          onChange={(e) => handleChildChange(item, e)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                        <CustomTextInput\r\n                          className={classes.fullWidth}\r\n                          name=\"childPartId\"\r\n                          // id=\"partId\"\r\n                          value={child.childPartId}\r\n                          onChange={(e) => handleChildChange(item, e)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={2} style={{ marginTop: \"35px\" }}>\r\n                        <DeleteIcon\r\n                          fontSize=\"medium\"\r\n                          onClick={() => {\r\n                            onDeleteChildField(item);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              style={{\r\n                float: \"right\",\r\n                marginTop: \"30px\",\r\n                marginBottom: \"30px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //onClick={updateChildTree}\r\n                type=\"submit\"\r\n                disabled={!(childInputFields.length > 0)}\r\n              >\r\n                Update All\r\n              </Button>\r\n              <Button\r\n                style={{ marginLeft: \"20px\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onAddNewChildField}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={classes.tree}>\r\n        <div className={classes.treeChild}>\r\n          {/* <FullscreenIcon style={{ float: \"right\", marginRight: \"25px\" }} /> */}\r\n          <TreeComponent height='400px'></TreeComponent>\r\n          {/* <div></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EqptStructuring;\r\n"]},"metadata":{},"sourceType":"module"}