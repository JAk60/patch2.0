{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\components\\\\LevelsHOC\\\\AccessControlHOC.js\",\n    _s = $RefreshSig$();\n\n// components/AccessControlHOC.js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccessControlHOC = (allowedLevels, WrappedComponent) => {\n  _s();\n\n  const Levls = useSelector(state => state.LevelsData);\n  return props => {\n    const userAccessLevel = Levls; // Check if the user's access level is included in the allowedLevels array.\n\n    const isAllowed = allowedLevels.includes(userAccessLevel);\n\n    if (!isAllowed) {\n      // Replace this with your preferred way to handle unauthorized access.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"You are not authorized to access this content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  };\n};\n\n_s(AccessControlHOC, \"N/mhEgHUs8CB2KJXBmPn5EJfia4=\", false, function () {\n  return [useSelector];\n});\n\n_c = AccessControlHOC;\nexport default AccessControlHOC;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessControlHOC\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/components/LevelsHOC/AccessControlHOC.js"],"names":["React","useSelector","AccessControlHOC","allowedLevels","WrappedComponent","Levls","state","LevelsData","props","userAccessLevel","isAllowed","includes"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,aAAD,EAAgBC,gBAAhB,KAAqC;AAAA;;AAC1D,QAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAASA,KAAK,CAACC,UAAhB,CAAzB;AACF,SAAQC,KAAD,IAAW;AAChB,UAAMC,eAAe,GAAGJ,KAAxB,CADgB,CAGhB;;AACA,UAAMK,SAAS,GAAGP,aAAa,CAACQ,QAAd,CAAuBF,eAAvB,CAAlB;;AAEA,QAAI,CAACC,SAAL,EAAgB;AACd;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBAAO,QAAC,gBAAD,OAAsBF;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAZD;AAaD,CAfD;;GAAMN,gB;UACYD,W;;;KADZC,gB;AAiBN,eAAeA,gBAAf","sourcesContent":["// components/AccessControlHOC.js\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AccessControlHOC = (allowedLevels, WrappedComponent) => {\r\n    const Levls = useSelector((state)=>state.LevelsData)\r\n  return (props) => {\r\n    const userAccessLevel = Levls\r\n\r\n    // Check if the user's access level is included in the allowedLevels array.\r\n    const isAllowed = allowedLevels.includes(userAccessLevel);\r\n\r\n    if (!isAllowed) {\r\n      // Replace this with your preferred way to handle unauthorized access.\r\n      return <div>You are not authorized to access this content.</div>;\r\n    }\r\n\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n\r\nexport default AccessControlHOC;\r\n\r\n"]},"metadata":{},"sourceType":"module"}