{"ast":null,"code":"/**\r\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\r\n * If the cell is already visible then the current offset will be returned.\r\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\r\n *\r\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\r\n * @param cellOffset Offset (x or y) position for cell\r\n * @param cellSize Size (width or height) of cell\r\n * @param containerSize Total size (width or height) of the container\r\n * @param currentOffset Container's current (x or y) offset\r\n * @return Offset to use to ensure the specified cell is visible\r\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js"],"names":["getUpdatedOffsetForIndex","_ref","_ref$align","align","cellOffset","cellSize","containerSize","currentOffset","maxOffset","minOffset","Math","max","min"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;AACrD,MAAIC,UAAU,GAAGD,IAAI,CAACE,KAAtB;AAAA,MACIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,MAAxB,GAAiCA,UAD7C;AAAA,MAEIE,UAAU,GAAGH,IAAI,CAACG,UAFtB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,aAAa,GAAGL,IAAI,CAACK,aAJzB;AAAA,MAKIC,aAAa,GAAGN,IAAI,CAACM,aALzB;AAMA,MAAIC,SAAS,GAAGJ,UAAhB;AACA,MAAIK,SAAS,GAAGD,SAAS,GAAGF,aAAZ,GAA4BD,QAA5C;;AAEA,UAAQF,KAAR;AACE,SAAK,OAAL;AACE,aAAOK,SAAP;;AAEF,SAAK,KAAL;AACE,aAAOC,SAAP;;AAEF,SAAK,QAAL;AACE,aAAOD,SAAS,GAAG,CAACF,aAAa,GAAGD,QAAjB,IAA6B,CAAhD;;AAEF;AACE,aAAOK,IAAI,CAACC,GAAL,CAASF,SAAT,EAAoBC,IAAI,CAACE,GAAL,CAASJ,SAAT,EAAoBD,aAApB,CAApB,CAAP;AAXJ;AAaD","sourcesContent":["/**\r\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\r\n * If the cell is already visible then the current offset will be returned.\r\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\r\n *\r\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\r\n * @param cellOffset Offset (x or y) position for cell\r\n * @param cellSize Size (width or height) of cell\r\n * @param containerSize Total size (width or height) of the container\r\n * @param currentOffset Container's current (x or y) offset\r\n * @return Offset to use to ensure the specified cell is visible\r\n */\r\nexport default function getUpdatedOffsetForIndex(_ref) {\r\n  var _ref$align = _ref.align,\r\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\r\n      cellOffset = _ref.cellOffset,\r\n      cellSize = _ref.cellSize,\r\n      containerSize = _ref.containerSize,\r\n      currentOffset = _ref.currentOffset;\r\n  var maxOffset = cellOffset;\r\n  var minOffset = maxOffset - containerSize + cellSize;\r\n\r\n  switch (align) {\r\n    case 'start':\r\n      return maxOffset;\r\n\r\n    case 'end':\r\n      return minOffset;\r\n\r\n    case 'center':\r\n      return maxOffset - (containerSize - cellSize) / 2;\r\n\r\n    default:\r\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}