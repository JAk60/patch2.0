{"ast":null,"code":"export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\r\n * Calculates the number of cells to overscan before and after a specified range.\r\n * This function ensures that overscanning doesn't exceed the available cells.\r\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js"],"names":["SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_VERTICAL","defaultOverscanIndicesGetter","_ref","cellCount","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","Math","max","overscanStopIndex","min","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_OverscanIndices"],"mappings":"AAAA,OAAO,IAAIA,yBAAyB,GAAG,CAAC,CAAjC;AACP,OAAO,IAAIC,wBAAwB,GAAG,CAA/B;AACP,OAAO,IAAIC,2BAA2B,GAAG,YAAlC;AACP,OAAO,IAAIC,yBAAyB,GAAG,UAAhC;AACP;AACA;AACA;AACA;;AAEA,eAAe,SAASC,4BAAT,CAAsCC,IAAtC,EAA4C;AACzD,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,kBAAkB,GAAGF,IAAI,CAACE,kBAD9B;AAAA,MAEIC,eAAe,GAAGH,IAAI,CAACG,eAF3B;AAAA,MAGIC,UAAU,GAAGJ,IAAI,CAACI,UAHtB;AAAA,MAIIC,SAAS,GAAGL,IAAI,CAACK,SAJrB;;AAMA,MAAIF,eAAe,KAAKP,wBAAxB,EAAkD;AAChD,WAAO;AACLU,MAAAA,kBAAkB,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,UAAZ,CADf;AAELK,MAAAA,iBAAiB,EAAEF,IAAI,CAACG,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAS,GAAGH,kBAApC;AAFd,KAAP;AAID,GALD,MAKO;AACL,WAAO;AACLI,MAAAA,kBAAkB,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,UAAU,GAAGF,kBAAzB,CADf;AAELO,MAAAA,iBAAiB,EAAEF,IAAI,CAACG,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAxB;AAFd,KAAP;AAID;AACF;AACD,SAASM,2CAAT,QAA4D,SAA5D;AACA,SAASC,+BAAT,QAAgD,SAAhD","sourcesContent":["export var SCROLL_DIRECTION_BACKWARD = -1;\r\nexport var SCROLL_DIRECTION_FORWARD = 1;\r\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\r\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\r\n/**\r\n * Calculates the number of cells to overscan before and after a specified range.\r\n * This function ensures that overscanning doesn't exceed the available cells.\r\n */\r\n\r\nexport default function defaultOverscanIndicesGetter(_ref) {\r\n  var cellCount = _ref.cellCount,\r\n      overscanCellsCount = _ref.overscanCellsCount,\r\n      scrollDirection = _ref.scrollDirection,\r\n      startIndex = _ref.startIndex,\r\n      stopIndex = _ref.stopIndex;\r\n\r\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\r\n    return {\r\n      overscanStartIndex: Math.max(0, startIndex),\r\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\r\n    };\r\n  } else {\r\n    return {\r\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\r\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\r\n    };\r\n  }\r\n}\r\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\r\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";"]},"metadata":{},"sourceType":"module"}