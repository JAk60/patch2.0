{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Settings\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './SignIn.module.css';\nimport { Paper, makeStyles, FormControlLabel, FormGroup, Switch } from '@material-ui/core';\nimport CustomizedSnackbars from '../../ui/CustomSnackBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputStyles = makeStyles({// ... your existing styles\n});\n\nconst SignIn = props => {\n  _s();\n\n  // ... your existing code\n  const [toggleValues, setToggleValues] = useState({\n    L1: false,\n    L2: false,\n    L3: false,\n    L4: false,\n    L5: false\n  });\n\n  const handleToggleChange = toggleName => event => {\n    setToggleValues({ ...toggleValues,\n      [toggleName]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.SignInPaper,\n      elevation: 5,\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggleValues.L1,\n            onChange: handleToggleChange('L1')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this),\n          label: \"L1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggleValues.L2,\n            onChange: handleToggleChange('L2')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this),\n          label: \"L2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggleValues.L3,\n            onChange: handleToggleChange('L3')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this),\n          label: \"L3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggleValues.L4,\n            onChange: handleToggleChange('L4')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this),\n          label: \"L4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggleValues.L5,\n            onChange: handleToggleChange('L5')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this),\n          label: \"L5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"dcHIamRhMp6V5/BtUNiNDLV4Xvk=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Settings/SignIn.js"],"names":["React","useEffect","useState","styles","Paper","makeStyles","FormControlLabel","FormGroup","Switch","CustomizedSnackbars","InputStyles","SignIn","props","toggleValues","setToggleValues","L1","L2","L3","L4","L5","handleToggleChange","toggleName","event","target","checked","container","SignInPaper","SnackBarMessage","showSnackBar","onHandleSnackClose"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './SignIn.module.css';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  FormControlLabel,\r\n\r\n  FormGroup,\r\n  Switch,\r\n} from '@material-ui/core';\r\nimport CustomizedSnackbars from '../../ui/CustomSnackBar';\r\n\r\nconst InputStyles = makeStyles({\r\n  // ... your existing styles\r\n});\r\n\r\nconst SignIn = (props) => {\r\n  // ... your existing code\r\n\r\n  const [toggleValues, setToggleValues] = useState({\r\n    L1: false,\r\n    L2: false,\r\n    L3: false,\r\n    L4: false,\r\n    L5: false,\r\n  });\r\n\r\n  const handleToggleChange = (toggleName) => (event) => {\r\n    setToggleValues({ ...toggleValues, [toggleName]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Paper className={styles.SignInPaper} elevation={5}>\r\n        {/* ... your existing code */}\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={toggleValues.L1}\r\n                onChange={handleToggleChange('L1')}\r\n              />\r\n            }\r\n            label=\"L1\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={toggleValues.L2}\r\n                onChange={handleToggleChange('L2')}\r\n              />\r\n            }\r\n            label=\"L2\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={toggleValues.L3}\r\n                onChange={handleToggleChange('L3')}\r\n              />\r\n            }\r\n            label=\"L3\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={toggleValues.L4}\r\n                onChange={handleToggleChange('L4')}\r\n              />\r\n            }\r\n            label=\"L4\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={toggleValues.L5}\r\n                onChange={handleToggleChange('L5')}\r\n              />\r\n            }\r\n            label=\"L5\"\r\n          />\r\n        </FormGroup>\r\n        {/* ... rest of your code */}\r\n      </Paper>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}