{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\systen_configuration\\\\SystemConfiguration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport styles from \"./SystemConfiguration.module.css\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport EqptStructuring from \"../../components/main/EqptStructuring/EqptStructuring\";\nimport NewModule from \"../../components/module/NewModule\";\nimport StageSlider from \"../../components/slider/NewSlider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, unstable_createMuiStrictModeTheme } from \"@material-ui/core\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\nimport { Switch, Route, useHistory, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport RedundancyInfo from \"./redundancy/redundancy\";\nimport MaintenanceInfo from \"./maintenanceInfo/maintenanceInfo\";\nimport FailureMode from \"./failureMode/failureMode\";\nimport DutyCycle from \"./dutyCycle/dutyCycle\";\nimport AdditionalInfo from \"./additionalInfo/additionalInfo\";\nimport { useLocation } from \"react-router\";\nimport { treeDataActions } from \"../../store/TreeDataStore\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemStyles = makeStyles({\n  formControl: {\n    margin: \"2rem\",\n    minWidth: 200\n  },\n  Submit: {\n    margin: \"2rem\"\n  },\n  buttons: {\n    minWidth: 150,\n    marginLeft: 10,\n    marginTop: 15,\n    float: \"right\"\n  }\n});\n\nconst SystemConfiguration = props => {\n  _s();\n\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  let finalTableData = [];\n\n  const setFinalTableData = d => {\n    finalTableData = d;\n  };\n\n  const systemConfigurationTreeData = useSelector(state => state.treeData.treeData);\n  const systemConfigurationData = useSelector(state => state.treeData.sortTreeData);\n  const currentSelection = useSelector(state => state.userSelection.currentSelection); // const [showSnackBar, setShowSnackBar] = useState(false);\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n  const [Stage, setStage] = useState(0);\n  const SystemClasses = SystemStyles();\n  const history = useHistory();\n\n  const NextStage = () => {\n    if (Stage === 0) {\n      setStage(1);\n      history.push(\"/system_config/redundancy_info\");\n    }\n\n    if (Stage === 1) {\n      setStage(2);\n      history.push(\"/system_config/maintenance_info\");\n    }\n\n    if (Stage === 2) {\n      setStage(3);\n      history.push(\"/system_config/failure_mode\");\n    }\n\n    if (Stage === 3) {\n      setStage(4);\n      history.push(\"/system_config/duty_cycle\");\n    }\n\n    if (Stage === 4) {\n      setStage(5);\n      history.push(\"/system_config/additional_info\");\n    }\n  };\n\n  const PreviousStage = (reset = false) => {\n    if (Stage === 1 && reset === false) {\n      setStage(0);\n      history.push(\"/system_config\");\n    }\n\n    if (Stage === 1 && reset === true) {\n      setStage(0);\n      history.push(\"/system_config\");\n    }\n\n    if (Stage === 2) {\n      setStage(1);\n      history.push(\"/system_config/redundancy_info\");\n    }\n\n    if (Stage === 3) {\n      setStage(2);\n      history.push(\"/system_config/maintenance_info\");\n    }\n\n    if (Stage === 4) {\n      setStage(3);\n      history.push(\"/system_config/failure_mode\");\n    }\n\n    if (Stage === 5) {\n      setStage(4);\n      history.push(\"/system_config/duty_cycle\");\n    }\n  };\n\n  const CheckStage = () => {\n    if (Stage === 0) {\n      history.push(\"/system_config\");\n    }\n\n    if (Stage === 1) {\n      history.push(\"/system_config/redundancy_info\");\n    }\n\n    if (Stage === 2) {\n      history.push(\"/system_config/maintenance_info\");\n    }\n\n    if (Stage === 3) {\n      history.push(\"/system_config/failure_mode\");\n    }\n\n    if (Stage === 4) {\n      history.push(\"/system_config/duty_cycle\");\n    }\n  };\n\n  const nextModule = settings => {\n    if (settings.PhaseManager) {\n      props.history.push(\"/phase_manager\");\n    } else if (settings.HEP) {\n      props.history.push(\"/HEP\");\n    } else if (settings.DataManager) {\n      props.history.push(\"/data_manager\");\n    } else if (settings.ReliabilityDashboard) {\n      props.history.push(\"/rDashboard\");\n    }\n  };\n\n  const [locationKeys, setLocationKeys] = useState([]);\n  useEffect(() => {\n    if (location.pathname === \"/system_config\") {\n      setStage(0);\n    }\n\n    return history.listen(location => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n          NextStage();\n        } else {\n          setLocationKeys(keys => [location.key, ...keys]);\n          PreviousStage();\n        }\n      }\n    });\n  }, [locationKeys, history]);\n  let [marks, setMarks] = useState([{\n    value: 15,\n    label: \"Equipment Structuring\"\n  }, {\n    value: 30,\n    label: \"Redundancy & Parallel Information\"\n  }, {\n    value: 45,\n    label: \"Maintenance Information\"\n  }, {\n    value: 60,\n    label: \"Failure Mode\"\n  }, {\n    value: 75,\n    label: \"Duty Cycle\"\n  }, {\n    value: 90,\n    label: \"Additional Equipment Info\"\n  }]);\n\n  if (width < 768) {\n    marks = marks.map((item, index) => {\n      return item[\"value\"];\n    });\n  } //on Save button click to save tree and system config data to dB.\n\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  };\n\n  const onSaveButtonClickHandler = () => {\n    const currentLocation = location.pathname;\n\n    if (currentLocation === \"/system_config\") {\n      if (systemConfigurationTreeData.length > 0) {\n        fetch(\"/save_system\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            flatData: systemConfigurationTreeData,\n            nestedData: systemConfigurationData,\n            dtype: \"insertSystem\"\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }).then(res => {\n          return res.json();\n        }).then(data => {\n          setSnackBarMessage({\n            severity: \"success\",\n            message: data.message,\n            showSnackBar: true\n          });\n        }).catch(error => {\n          setSnackBarMessage({\n            severity: \"error\",\n            message: \"Some Error Occured. \" + error,\n            showSnackBar: true\n          });\n        });\n      } else {\n        setSnackBarMessage(prevState => {\n          const data = { ...prevState,\n            message: \"This is error\",\n            showSnackBar: true\n          };\n          return data;\n        });\n      }\n    } else {\n      let dType = null;\n\n      if (currentLocation === \"/system_config/redundancy_info\") {\n        dType = \"insertRedundancy\";\n      } else if (currentLocation === \"/system_config/maintenance_info\") {\n        dType = \"insertMaintenanceInfo\";\n      } else if (currentLocation === \"/system_config/additional_info\") {\n        dType = \"additionalInfo\";\n      } else if (currentLocation === \"/system_config/duty_cycle\") {\n        dType = \"insertDutyCycle\";\n      } else if (currentLocation === \"/system_config/failure_mode\") {\n        dType = \"failure_mode\"; // let data_ = [];\n\n        debugger; // const failureData = finalTableData.map((row) => {\n        //   let component_id = row.eqId;\n        //   let rComponent_id = row.rEquipmentId;\n        //   let fixFailureMode = row.fixFailureMode;\n        //   let failureMode = row.FailureMode.split(\",\");\n        //   if (fixFailureMode) {\n        //     if (fixFailureMode.length > 0) {\n        //       fixFailureMode.map((x) => {\n        //         if (x.trim() !== \"\") {\n        //           data_.push({\n        //             component_id,\n        //             rComponent_id,\n        //             failure_mode: x.trim(),\n        //             id: uuid(),\n        //           });\n        //         }\n        //         return null;\n        //       });\n        //     }\n        //   }\n        //   if (failureMode.length > 0) {\n        //     failureMode.map((x) => {\n        //       if (x.trim() !== \"\") {\n        //         data_.push({\n        //           component_id,\n        //           rComponent_id,\n        //           failure_mode: x.trim(),\n        //           id: uuid(),\n        //         });\n        //       }\n        //       return null;\n        //     });\n        //   }\n        //   return data_;\n        // });\n        // finalTableData = data_;\n      }\n\n      if (dType) {\n        if (finalTableData.length > 0) {\n          fetch(\"/save_system\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              flatData: finalTableData,\n              dtype: dType\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            }\n          }).then(res => {\n            return res.json();\n          }).then(data => {\n            setSnackBarMessage({\n              severity: \"success\",\n              message: data.message,\n              showSnackBar: true\n            });\n          }).catch(error => {\n            setSnackBarMessage({\n              severity: \"error\",\n              message: \"Some Error Occured. \" + error,\n              showSnackBar: true\n            });\n          });\n        } else {\n          setSnackBarMessage(prevState => {\n            const data = { ...prevState,\n              message: \"This is error\",\n              showSnackBar: true\n            };\n            return data;\n          });\n        }\n      }\n    } //End\n\n  };\n\n  const onLoadTreeStructure = () => {\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD,\n        failureModes: failureModes\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewModule, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StageSlider, {\n      marks: marks,\n      default: marks[Stage][\"value\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flex,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.user,\n        children: /*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/system_config\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: [\"/system_config/\"],\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: SystemClasses.buttons,\n              onClick: onLoadTreeStructure,\n              children: \"Load System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: [\"/system_config/redundancy_info\", \"/system_config/maintenance_info\", \"/system_config/failure_mode\", \"/system_config/duty_cycle\", \"/system_config/additional_info\"],\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: SystemClasses.buttons,\n              onClick: () => PreviousStage(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: SystemClasses.buttons,\n            children: \"Replicate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: SystemClasses.buttons,\n            onClick: onSaveButtonClickHandler,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: [\"/system_config\", \"/system_config/redundancy_info\", \"/system_config/maintenance_info\", \"/system_config/failure_mode\", \"/system_config/duty_cycle\"],\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: SystemClasses.buttons,\n              onClick: () => NextStage(),\n              children: \"Next Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/system_config/additional_info\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => nextModule(props.settings),\n              variant: \"contained\",\n              color: \"primary\",\n              className: SystemClasses.buttons,\n              children: \"Next Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/system_config/additional_info\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              variant: \"contained\",\n              color: \"primary\",\n              className: SystemClasses.buttons,\n              onClick: () => {\n                if (window.confirm(\"Are you sure you want to skip?\")) {\n                  history.push(\"/phase_manager\");\n                } else {\n                  console.log(\"Hii\");\n                }\n              },\n              children: \"Skip Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(EqptStructuring, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config/redundancy_info\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(RedundancyInfo, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config/maintenance_info\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(MaintenanceInfo, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config/failure_mode\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(FailureMode, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config/duty_cycle\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(DutyCycle, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/system_config/additional_info\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(AdditionalInfo, {\n          tableUpdate: setFinalTableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SystemConfiguration, \"510bbX8MM93rSKYBbaReUKSLL48=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector, useSelector, useHistory];\n});\n\n_c = SystemConfiguration;\nexport default SystemConfiguration;\n\nvar _c;\n\n$RefreshReg$(_c, \"SystemConfiguration\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/systen_configuration/SystemConfiguration.js"],"names":["React","useEffect","useState","useRef","styles","Navigation","EqptStructuring","NewModule","StageSlider","useDispatch","useSelector","Button","unstable_createMuiStrictModeTheme","CustomizedSnackbars","Switch","Route","useHistory","Link","makeStyles","UserSelection","RedundancyInfo","MaintenanceInfo","FailureMode","DutyCycle","AdditionalInfo","useLocation","treeDataActions","v4","uuid","SystemStyles","formControl","margin","minWidth","Submit","buttons","marginLeft","marginTop","float","SystemConfiguration","props","innerWidth","width","innerHeight","height","window","location","dispatch","finalTableData","setFinalTableData","d","systemConfigurationTreeData","state","treeData","systemConfigurationData","sortTreeData","currentSelection","userSelection","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","Stage","setStage","SystemClasses","history","NextStage","push","PreviousStage","reset","CheckStage","nextModule","settings","PhaseManager","HEP","DataManager","ReliabilityDashboard","locationKeys","setLocationKeys","pathname","listen","action","key","_","keys","marks","setMarks","value","label","map","item","index","onHandleSnackClose","onSaveButtonClickHandler","currentLocation","length","fetch","method","body","JSON","stringify","flatData","nestedData","dtype","headers","Accept","then","res","json","data","catch","error","prevState","dType","onLoadTreeStructure","system","ship_name","treeD","failureModes","setTreeData","flex","user","confirm","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport styles from \"./SystemConfiguration.module.css\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport EqptStructuring from \"../../components/main/EqptStructuring/EqptStructuring\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport StageSlider from \"../../components/slider/NewSlider\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, unstable_createMuiStrictModeTheme } from \"@material-ui/core\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\nimport { Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport RedundancyInfo from \"./redundancy/redundancy\";\r\nimport MaintenanceInfo from \"./maintenanceInfo/maintenanceInfo\";\r\nimport FailureMode from \"./failureMode/failureMode\";\r\nimport DutyCycle from \"./dutyCycle/dutyCycle\";\r\nimport AdditionalInfo from \"./additionalInfo/additionalInfo\";\r\nimport { useLocation } from \"react-router\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nconst SystemConfiguration = (props) => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  let finalTableData = [];\r\n  const setFinalTableData = (d) => {\r\n    finalTableData = d;\r\n  };\r\n  const systemConfigurationTreeData = useSelector(\r\n    (state) => state.treeData.treeData\r\n  );\r\n  const systemConfigurationData = useSelector(\r\n    (state) => state.treeData.sortTreeData\r\n  );\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  // const [showSnackBar, setShowSnackBar] = useState(false);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const [Stage, setStage] = useState(0);\r\n  const SystemClasses = SystemStyles();\r\n  const history = useHistory();\r\n  const NextStage = () => {\r\n    if (Stage === 0) {\r\n      setStage(1);\r\n      history.push(\"/system_config/redundancy_info\");\r\n    }\r\n    if (Stage === 1) {\r\n      setStage(2);\r\n      history.push(\"/system_config/maintenance_info\");\r\n    }\r\n    if (Stage === 2) {\r\n      setStage(3);\r\n      history.push(\"/system_config/failure_mode\");\r\n    }\r\n    if (Stage === 3) {\r\n      setStage(4);\r\n      history.push(\"/system_config/duty_cycle\");\r\n    }\r\n    if (Stage === 4) {\r\n      setStage(5);\r\n      history.push(\"/system_config/additional_info\");\r\n    }\r\n  };\r\n  const PreviousStage = (reset = false) => {\r\n    if (Stage === 1 && reset === false) {\r\n      setStage(0);\r\n      history.push(\"/system_config\");\r\n    }\r\n    if (Stage === 1 && reset === true) {\r\n      setStage(0);\r\n      history.push(\"/system_config\");\r\n    }\r\n    if (Stage === 2) {\r\n      setStage(1);\r\n      history.push(\"/system_config/redundancy_info\");\r\n    }\r\n    if (Stage === 3) {\r\n      setStage(2);\r\n      history.push(\"/system_config/maintenance_info\");\r\n    }\r\n    if (Stage === 4) {\r\n      setStage(3);\r\n      history.push(\"/system_config/failure_mode\");\r\n    }\r\n    if (Stage === 5) {\r\n      setStage(4);\r\n      history.push(\"/system_config/duty_cycle\");\r\n    }\r\n  };\r\n\r\n  const CheckStage = () => {\r\n    if (Stage === 0) {\r\n      history.push(\"/system_config\");\r\n    }\r\n    if (Stage === 1) {\r\n      history.push(\"/system_config/redundancy_info\");\r\n    }\r\n    if (Stage === 2) {\r\n      history.push(\"/system_config/maintenance_info\");\r\n    }\r\n    if (Stage === 3) {\r\n      history.push(\"/system_config/failure_mode\");\r\n    }\r\n    if (Stage === 4) {\r\n      history.push(\"/system_config/duty_cycle\");\r\n    }\r\n  };\r\n\r\n  const nextModule = (settings) => {\r\n    if (settings.PhaseManager) {\r\n      props.history.push(\"/phase_manager\");\r\n    } else if (settings.HEP) {\r\n      props.history.push(\"/HEP\");\r\n    } else if (settings.DataManager) {\r\n      props.history.push(\"/data_manager\");\r\n    } else if (settings.ReliabilityDashboard) {\r\n      props.history.push(\"/rDashboard\");\r\n    }\r\n  };\r\n\r\n  const [locationKeys, setLocationKeys] = useState([]);\r\n  useEffect(() => {\r\n    if (location.pathname === \"/system_config\") {\r\n      setStage(0);\r\n    }\r\n    return history.listen((location) => {\r\n      if (history.action === \"PUSH\") {\r\n        setLocationKeys([location.key]);\r\n      }\r\n\r\n      if (history.action === \"POP\") {\r\n        if (locationKeys[1] === location.key) {\r\n          setLocationKeys(([_, ...keys]) => keys);\r\n          NextStage();\r\n        } else {\r\n          setLocationKeys((keys) => [location.key, ...keys]);\r\n          PreviousStage();\r\n        }\r\n      }\r\n    });\r\n  }, [locationKeys, history]);\r\n  let [marks, setMarks] = useState([\r\n    {\r\n      value: 15,\r\n      label: \"Equipment Structuring\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"Redundancy & Parallel Information\",\r\n    },\r\n    {\r\n      value: 45,\r\n      label: \"Maintenance Information\",\r\n    },\r\n    {\r\n      value: 60,\r\n      label: \"Failure Mode\",\r\n    },\r\n    {\r\n      value: 75,\r\n      label: \"Duty Cycle\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"Additional Equipment Info\",\r\n    },\r\n  ]);\r\n\r\n  if (width < 768) {\r\n    marks = marks.map((item, index) => {\r\n      return item[\"value\"];\r\n    });\r\n  }\r\n  //on Save button click to save tree and system config data to dB.\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  const onSaveButtonClickHandler = () => {\r\n    const currentLocation = location.pathname;\r\n    if (currentLocation === \"/system_config\") {\r\n      if (systemConfigurationTreeData.length > 0) {\r\n        fetch(\"/save_system\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            flatData: systemConfigurationTreeData,\r\n            nestedData: systemConfigurationData,\r\n            dtype: \"insertSystem\",\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => {\r\n            return res.json();\r\n          })\r\n          .then((data) => {\r\n            setSnackBarMessage({\r\n              severity: \"success\",\r\n              message: data.message,\r\n              showSnackBar: true,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSnackBarMessage({\r\n              severity: \"error\",\r\n              message: \"Some Error Occured. \" + error,\r\n              showSnackBar: true,\r\n            });\r\n          });\r\n      } else {\r\n        setSnackBarMessage((prevState) => {\r\n          const data = {\r\n            ...prevState,\r\n            message: \"This is error\",\r\n            showSnackBar: true,\r\n          };\r\n          return data;\r\n        });\r\n      }\r\n    } else {\r\n      let dType = null;\r\n      if (currentLocation === \"/system_config/redundancy_info\") {\r\n        dType = \"insertRedundancy\";\r\n      } else if (currentLocation === \"/system_config/maintenance_info\") {\r\n        dType = \"insertMaintenanceInfo\";\r\n      } else if (currentLocation === \"/system_config/additional_info\") {\r\n        dType = \"additionalInfo\";\r\n      } else if (currentLocation === \"/system_config/duty_cycle\") {\r\n        dType = \"insertDutyCycle\";\r\n      } else if (currentLocation === \"/system_config/failure_mode\") {\r\n        dType = \"failure_mode\";\r\n        // let data_ = [];\r\n        debugger;\r\n        // const failureData = finalTableData.map((row) => {\r\n        //   let component_id = row.eqId;\r\n        //   let rComponent_id = row.rEquipmentId;\r\n        //   let fixFailureMode = row.fixFailureMode;\r\n        //   let failureMode = row.FailureMode.split(\",\");\r\n        //   if (fixFailureMode) {\r\n        //     if (fixFailureMode.length > 0) {\r\n        //       fixFailureMode.map((x) => {\r\n        //         if (x.trim() !== \"\") {\r\n        //           data_.push({\r\n        //             component_id,\r\n        //             rComponent_id,\r\n        //             failure_mode: x.trim(),\r\n        //             id: uuid(),\r\n        //           });\r\n        //         }\r\n        //         return null;\r\n        //       });\r\n        //     }\r\n        //   }\r\n        //   if (failureMode.length > 0) {\r\n        //     failureMode.map((x) => {\r\n        //       if (x.trim() !== \"\") {\r\n        //         data_.push({\r\n        //           component_id,\r\n        //           rComponent_id,\r\n        //           failure_mode: x.trim(),\r\n        //           id: uuid(),\r\n        //         });\r\n        //       }\r\n        //       return null;\r\n        //     });\r\n        //   }\r\n        //   return data_;\r\n        // });\r\n        // finalTableData = data_;\r\n      }\r\n      if (dType) {\r\n        if (finalTableData.length > 0) {\r\n          fetch(\"/save_system\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              flatData: finalTableData,\r\n              dtype: dType,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          })\r\n            .then((res) => {\r\n              return res.json();\r\n            })\r\n            .then((data) => {\r\n              setSnackBarMessage({\r\n                severity: \"success\",\r\n                message: data.message,\r\n                showSnackBar: true,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              setSnackBarMessage({\r\n                severity: \"error\",\r\n                message: \"Some Error Occured. \" + error,\r\n                showSnackBar: true,\r\n              });\r\n            });\r\n        } else {\r\n          setSnackBarMessage((prevState) => {\r\n            const data = {\r\n              ...prevState,\r\n              message: \"This is error\",\r\n              showSnackBar: true,\r\n            };\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n    }\r\n    //End\r\n  };\r\n\r\n  const onLoadTreeStructure = () => {\r\n    fetch(\"/fetch_system\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        system: currentSelection[\"equipmentName\"],\r\n        ship_name: currentSelection[\"shipName\"],\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        let treeD = d[\"treeD\"];\r\n        let failureModes = d[\"failureMode\"];\r\n        dispatch(\r\n          treeDataActions.setTreeData({\r\n            treeData: treeD,\r\n            failureModes: failureModes,\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navigation />\r\n      <NewModule />\r\n      <StageSlider marks={marks} default={marks[Stage][\"value\"]} />\r\n      <div className={styles.flex}>\r\n        <div className={styles.user}>\r\n          <UserSelection />\r\n        </div>\r\n        <div className={styles.buttons}>\r\n          <Route path=\"/system_config\">\r\n            <Route path={[\"/system_config/\"]}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={onLoadTreeStructure}\r\n              >\r\n                Load System\r\n              </Button>\r\n            </Route>\r\n            <Route\r\n              exact\r\n              path={[\r\n                \"/system_config/redundancy_info\",\r\n                \"/system_config/maintenance_info\",\r\n                \"/system_config/failure_mode\",\r\n                \"/system_config/duty_cycle\",\r\n                \"/system_config/additional_info\",\r\n              ]}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={() => PreviousStage()}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Route>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={SystemClasses.buttons}\r\n            >\r\n              Replicate\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={SystemClasses.buttons}\r\n              onClick={onSaveButtonClickHandler}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Route\r\n              exact\r\n              path={[\r\n                \"/system_config\",\r\n                \"/system_config/redundancy_info\",\r\n                \"/system_config/maintenance_info\",\r\n                \"/system_config/failure_mode\",\r\n                \"/system_config/duty_cycle\",\r\n              ]}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={() => NextStage()}\r\n              >\r\n                Next Stage\r\n              </Button>\r\n            </Route>\r\n            <Route exact path=\"/system_config/additional_info\">\r\n              <Button\r\n                onClick={() => nextModule(props.settings)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n              >\r\n                Next Module\r\n              </Button>\r\n            </Route>\r\n            <Route exact path=\"/system_config/additional_info\">\r\n              <Button\r\n                component={Link}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={() => {\r\n                  if (window.confirm(\"Are you sure you want to skip?\")) {\r\n                    history.push(\"/phase_manager\");\r\n                  } else {\r\n                    console.log(\"Hii\");\r\n                  }\r\n                }}\r\n              >\r\n                Skip Stage\r\n              </Button>\r\n            </Route>\r\n          </Route>\r\n        </div>\r\n      </div>\r\n      <Switch>\r\n        <Route path=\"/system_config\" exact={true}>\r\n          <EqptStructuring />\r\n        </Route>\r\n        <Route path=\"/system_config/redundancy_info\" exact={true}>\r\n          <RedundancyInfo tableUpdate={setFinalTableData}></RedundancyInfo>\r\n        </Route>\r\n        <Route path=\"/system_config/maintenance_info\" exact={true}>\r\n          <MaintenanceInfo tableUpdate={setFinalTableData}></MaintenanceInfo>\r\n        </Route>\r\n        <Route path=\"/system_config/failure_mode\" exact={true}>\r\n          <FailureMode tableUpdate={setFinalTableData}></FailureMode>\r\n        </Route>\r\n        <Route path=\"/system_config/duty_cycle\" exact={true}>\r\n          <DutyCycle tableUpdate={setFinalTableData}></DutyCycle>\r\n        </Route>\r\n        <Route path=\"/system_config/additional_info\" exact={true}>\r\n          <AdditionalInfo tableUpdate={setFinalTableData}></AdditionalInfo>\r\n        </Route>\r\n      </Switch>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SystemConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}