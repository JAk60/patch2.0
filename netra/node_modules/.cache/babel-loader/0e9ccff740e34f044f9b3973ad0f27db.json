{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  taskData: [],\n  currentShip: \"\",\n  currentTaskName: \"\"\n};\nconst taskData = createSlice({\n  name: \"taskData\",\n  initialState: initialState,\n  reducers: {\n    onLoad(state, action) {\n      debugger;\n      const data = action.payload.taskData; // const ship = action.payload.ship;\n\n      state.taskData = { ...state.taskData,\n        ...data\n      };\n    },\n\n    updateCurrentShip(state, action) {\n      debugger;\n      const ship = action.payload.ship;\n      state.currentShip = ship; // , \"ship\": setselectedShipName, \"task\": setselectedTaskName\n    },\n\n    updateCurrentTask(state, action) {\n      debugger;\n      const task = action.payload.task;\n      state.currentTaskName = task; // , \"ship\": setselectedShipName, \"task\": setselectedTaskName\n    } // end of reducers\n\n\n  }\n});\nexport default taskData;\nexport const taskActions = taskData.actions;","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/src/store/taskStore.js"],"names":["createSlice","initialState","taskData","currentShip","currentTaskName","name","reducers","onLoad","state","action","data","payload","updateCurrentShip","ship","updateCurrentTask","task","taskActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,eAAe,EAAE;AAHE,CAArB;AAMA,MAAMF,QAAQ,GAAGF,WAAW,CAAC;AAC3BK,EAAAA,IAAI,EAAE,UADqB;AAE3BJ,EAAAA,YAAY,EAAEA,YAFa;AAG3BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpB;AACA,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeT,QAA5B,CAFoB,CAGpB;;AACAM,MAAAA,KAAK,CAACN,QAAN,GAAiB,EACf,GAAGM,KAAK,CAACN,QADM;AAEf,WAAGQ;AAFY,OAAjB;AAID,KATO;;AAURE,IAAAA,iBAAiB,CAACJ,KAAD,EAAQC,MAAR,EAAe;AAC9B;AACA,YAAMI,IAAI,GAAGJ,MAAM,CAACE,OAAP,CAAeE,IAA5B;AACAL,MAAAA,KAAK,CAACL,WAAN,GAAoBU,IAApB,CAH8B,CAI9B;AACD,KAfO;;AAgBRC,IAAAA,iBAAiB,CAACN,KAAD,EAAQC,MAAR,EAAe;AAC9B;AACA,YAAMM,IAAI,GAAGN,MAAM,CAACE,OAAP,CAAeI,IAA5B;AACAP,MAAAA,KAAK,CAACJ,eAAN,GAAwBW,IAAxB,CAH8B,CAI9B;AACD,KArBO,CAsBR;;;AAtBQ;AAHiB,CAAD,CAA5B;AA6BA,eAAeb,QAAf;AACA,OAAO,MAAMc,WAAW,GAAGd,QAAQ,CAACe,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  taskData: [],\r\n  currentShip: \"\",\r\n  currentTaskName: \"\"\r\n};\r\n\r\nconst taskData = createSlice({\r\n  name: \"taskData\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    onLoad(state, action) {\r\n      debugger;\r\n      const data = action.payload.taskData;\r\n      // const ship = action.payload.ship;\r\n      state.taskData = {\r\n        ...state.taskData,\r\n        ...data,\r\n      };\r\n    },\r\n    updateCurrentShip(state, action){\r\n      debugger\r\n      const ship = action.payload.ship;\r\n      state.currentShip = ship\r\n      // , \"ship\": setselectedShipName, \"task\": setselectedTaskName\r\n    },\r\n    updateCurrentTask(state, action){\r\n      debugger\r\n      const task = action.payload.task;\r\n      state.currentTaskName = task;\r\n      // , \"ship\": setselectedShipName, \"task\": setselectedTaskName\r\n    }\r\n    // end of reducers\r\n  },\r\n});\r\n\r\nexport default taskData;\r\nexport const taskActions = taskData.actions;\r\n"]},"metadata":{},"sourceType":"module"}