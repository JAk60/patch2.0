{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\CreateMaintenance\\\\CreateMaintenance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from '../../../components/navigation/Navigation';\nimport styles from \"./CreateMaintenance.module.css\";\nimport UserSelection from '../../../ui/userSelection/userSelection';\nimport { Button, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from '../../../ui/Form/AutoSelect';\nimport { Route } from 'react-router';\nimport AssignType from './AssignType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateMaintenance = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  let fData = useSelector(state => state.treeData.treeData); //console.log(fData);\n\n  const onLoadTreeStructure = () => {\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD,\n        failureModes: failureModes\n      }));\n    });\n  };\n\n  const [selectedComponent, setComponent] = useState(null);\n\n  const selectOnChange = (e, value) => {\n    debugger;\n    setComponent(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/maintenance_allocation/create\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.btn,\n          onClick: onLoadTreeStructure,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/maintenance_allocation/create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tree,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.treeChild,\n            children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n              height: \"600px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rightSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.selectComponent,\n            children: [\"Select Component\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n              fields: fData,\n              onChange: selectOnChange,\n              value: selectedComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.nextbtn,\n            onClick: () => {\n              if (selectedComponent != null) {\n                props.history.push(`/maintenance_allocation/create/assignMaintenance`);\n              } else {\n                alert('Select a component');\n              }\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/maintenance_allocation/create/assignMaintenance\",\n      children: /*#__PURE__*/_jsxDEV(AssignType, {\n        selectedComponent: selectedComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateMaintenance, \"DBu+x08pf3fzrQlpEq3mwcoga0A=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CreateMaintenance;\nexport default CreateMaintenance;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMaintenance\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Maintenance Allocation/CreateMaintenance/CreateMaintenance.js"],"names":["React","useState","Navigation","styles","UserSelection","Button","RadioGroup","FormControlLabel","Radio","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","Route","AssignType","CreateMaintenance","props","dispatch","currentSelection","state","userSelection","fData","treeData","onLoadTreeStructure","fetch","method","body","JSON","stringify","system","ship_name","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","selectedComponent","setComponent","selectOnChange","e","value","btn","content","tree","treeChild","rightSection","selectComponent","nextbtn","history","push","alert"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navigation from '../../../components/navigation/Navigation';\r\nimport styles from \"./CreateMaintenance.module.css\";\r\nimport UserSelection from '../../../ui/userSelection/userSelection'\r\nimport { Button,RadioGroup,FormControlLabel,Radio } from '@material-ui/core';\r\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from '../../../ui/Form/AutoSelect';\r\nimport { Route } from 'react-router';\r\nimport AssignType from './AssignType';\r\n\r\n\r\n\r\nconst CreateMaintenance=(props)=> {\r\n    const dispatch = useDispatch();\r\n    const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      );\r\n    let fData = useSelector((state) => state.treeData.treeData);\r\n    //console.log(fData);\r\n    const onLoadTreeStructure = () => {\r\n        fetch(\"/fetch_system\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            system: currentSelection[\"equipmentName\"],\r\n            ship_name: currentSelection[\"shipName\"],\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            let treeD = d[\"treeD\"];\r\n            let failureModes = d[\"failureMode\"];\r\n            dispatch(\r\n              treeDataActions.setTreeData({\r\n                treeData: treeD,\r\n                failureModes: failureModes,\r\n              })\r\n            );\r\n          });\r\n      };\r\n\r\n      const[selectedComponent,setComponent]=useState(null)\r\n      const selectOnChange=(e,value)=>{\r\n        debugger\r\n        setComponent(value)\r\n      }\r\n    return (\r\n      <>\r\n      <Navigation/>\r\n      <div className={styles.userSelection}>\r\n          <UserSelection/>\r\n          <Route exact path='/maintenance_allocation/create'>\r\n          <Button className={styles.btn} onClick={onLoadTreeStructure} variant='contained' color='primary'>Submit</Button>\r\n          </Route>\r\n      </div>\r\n      <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          <div className={styles.content}>\r\n            <div className={styles.tree}>\r\n              <div className={styles.treeChild}>\r\n                {/* <FullscreenIcon style={{ float: \"right\", marginRight: \"25px\" }} /> */}\r\n                <TreeComponent height='600px'></TreeComponent>\r\n                {/* <div></div> */}\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightSection}>\r\n              <div className={styles.selectComponent}>\r\n                Select Component\r\n                <AutoSelect\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              \r\n              <Button className={styles.nextbtn} onClick={()=>{\r\n                if(selectedComponent!=null){\r\n                  props.history.push(`/maintenance_allocation/create/assignMaintenance`)\r\n                  }else{\r\n                    alert('Select a component')\r\n                  }}} variant='contained' color='primary'>Next</Button>\r\n            </div>\r\n          </div>\r\n      </Route>\r\n      <Route exact path='/maintenance_allocation/create/assignMaintenance'>\r\n          <AssignType selectedComponent={selectedComponent}/>\r\n      </Route>\r\n    </>\r\n    );\r\n  }\r\n  export default CreateMaintenance;"]},"metadata":{},"sourceType":"module"}