{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\userSelectionConfig\\\\UserSelectionConfiguration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewModule from \"../../components/module/NewModule\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport styles from \"./UserSelectionConfiguration.module.css\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\"; //From Add new equipment form\n\nimport classes from \"./EqptStructuring.module.css\";\nimport LabelToolTip from \"./LabelToolTip/LabelToolTip\"; // import Tree from \"./Tree\";\n// import TreeComponent from \"../../sortableTree/SortableTree\";\n\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SystemStyles = makeStyles({\n  formControl: {\n    margin: \"2rem\",\n    minWidth: 200\n  },\n  Submit: {\n    margin: \"2rem\"\n  },\n  buttons: {\n    minWidth: 150,\n    marginLeft: 10,\n    marginTop: 15,\n    float: \"right\"\n  }\n});\n\nconst UserSelectionConfiguration = props => {\n  _s();\n\n  const SystemClasses = SystemStyles();\n  const [gridApi, setGridApi] = useState(null);\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Close\",\n      showSnackBar: false\n    });\n  };\n\n  const [missionData, setMissionData] = useState([]); // let finalTableData = [];\n\n  const setFinalTableData = d => {\n    setMissionData(d);\n  };\n\n  useEffect(() => {\n    fetch(\"/mission_data\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      const mData = data; // const rowD = data.map((x) => () => {\n      //   return {\n      //     id: x[\"id\"],\n      //     missionName: x[\"missionName\"],\n      //     Harbour: x[\"Harbour\"],\n      //     elh: x[\"elh\"],\n      //     cruise: x[\"cruise\"],\n      //     ds: x[\"ds\"],\n      //     as: x[\"ask\"],\n      //   };\n      // });\n\n      setRows(mData);\n      setMissionData(mData);\n    });\n  }, []);\n  const [rowState, setRows] = useState([]);\n  const MProfileColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"missionName\",\n    headerName: \"Mission Name\",\n    headerTooltip: \"Mission Name\",\n    width: 250,\n    checkboxSelection: true,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"Harbour\",\n    headerName: \"Harbour\",\n    headerTooltip: \"Harbour\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"elh\",\n    headerName: \"Entry Leaving Harbour\",\n    headerTooltip: \"Entry Leaving Harbour\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"cruise\",\n    headerName: \"Cruise\",\n    headerTooltip: \"Cruise\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ds\",\n    headerName: \"Defense Station\",\n    headerTooltip: \"Defense Station\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"as\",\n    headerName: \"Action Station\",\n    headerTooltip: \"Action Station\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"tar_rel\",\n    headerName: \"Target Reliability\",\n    headerTooltip: \"Target Reliability\",\n    width: 250,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this)];\n\n  const AddRow = () => {\n    const defaultRow = [{\n      id: uuidv4(),\n      missionName: \"Please Enter Mission Name\",\n      Harbour: 0,\n      elh: 0,\n      cruise: 0,\n      ds: 0,\n      as: 0,\n      tar_rel: 0\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    }); // console.log(selectedRows);\n  }; //Save Button Handler\n\n\n  const onSaveButtonClickHandler = () => {\n    debugger;\n\n    if (missionData.length > 0) {\n      fetch(\"/mission_data\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          mission_data: missionData,\n          dtype: \"insertMission\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        setSnackBarMessage({\n          severity: \"success\",\n          message: data.message,\n          showSnackBar: true\n        });\n      }).catch(error => {\n        setSnackBarMessage({\n          severity: \"error\",\n          message: \"Some Error Occured. \" + error,\n          showSnackBar: true\n        });\n      });\n    } else {\n      setSnackBarMessage(prevState => {\n        const data = { ...prevState,\n          message: \"This is error\",\n          showSnackBar: true\n        };\n        return data;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.user,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: SystemClasses.buttons,\n          onClick: onSaveButtonClickHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: \"Add New Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              width: \"100%\"\n            },\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"System Name\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"system\",\n                  name: \"system\",\n                  value: formik.values.system,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"System Type\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"systemType\",\n                  name: \"systemType\",\n                  value: formik.values.systemType,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.parent,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"400px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Parent Component\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AutoSelect, {\n                  fields: fData,\n                  onChange: parentOnChange,\n                  value: parentFiledValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"20px\",\n                  marginRight: '2%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: classesButton.root,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"reset\",\n                  onClick: clearForm,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 15\n                }, this), !disableButton && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formrow2,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: updateChildTree,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.child,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    item: true,\n                    spacing: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 5,\n                      children: /*#__PURE__*/_jsxDEV(LabelToolTip, {\n                        label: \"Child Component Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 5,\n                      children: /*#__PURE__*/_jsxDEV(LabelToolTip, {\n                        label: \"Part Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 17\n                  }, this), childInputFields.map((child, item) => {\n                    return /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      item: true,\n                      spacing: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 5,\n                        style: {\n                          marginTop: \"10px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                          className: classes.fullWidth,\n                          name: \"childName\" // id=\"childName\"\n                          ,\n                          value: child.childName,\n                          onChange: e => handleChildChange(item, e)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 5,\n                        style: {\n                          marginTop: \"10px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                          className: classes.fullWidth,\n                          name: \"childPartId\" // id=\"partId\"\n                          ,\n                          value: child.childPartId,\n                          onChange: e => handleChildChange(item, e)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 2,\n                        style: {\n                          marginTop: \"35px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          fontSize: \"medium\",\n                          onClick: () => {\n                            onDeleteChildField(item);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 23\n                      }, this)]\n                    }, item, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 21\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  float: \"right\",\n                  marginTop: \"30px\",\n                  marginBottom: \"30px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\" //onClick={updateChildTree}\n                  ,\n                  type: \"submit\",\n                  disabled: !(childInputFields.length > 0),\n                  children: \"Update All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    marginLeft: \"20px\"\n                  },\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: onAddNewChildField,\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSelectionConfiguration, \"otZfZoyqjgf5hpUyPt703oWEEVs=\");\n\n_c = UserSelectionConfiguration;\nexport default UserSelectionConfiguration;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelectionConfiguration\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/userSelectionConfig/UserSelectionConfiguration.js"],"names":["React","useEffect","useState","NewModule","Navigation","UserSelection","styles","AgGridColumn","Table","Button","makeStyles","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","classes","LabelToolTip","CustomTextInput","CustomSelect","AutoSelect","useFormik","uuid","SystemStyles","formControl","margin","minWidth","Submit","buttons","marginLeft","marginTop","float","UserSelectionConfiguration","props","SystemClasses","gridApi","setGridApi","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","missionData","setMissionData","setFinalTableData","d","fetch","method","headers","Accept","then","res","json","data","mData","setRows","rowState","MProfileColumns","AddRow","defaultRow","id","missionName","Harbour","elh","cruise","ds","as","tar_rel","applyTransaction","add","deleteRows","selectedRows","getSelectedRows","remove","onSaveButtonClickHandler","length","body","JSON","stringify","mission_data","dtype","catch","error","prevState","user","table","form","header","width","formik","handleSubmit","formrow1","field1","fullWidth","values","system","handleChange","disableButton","systemType","parent","fData","parentOnChange","parentFiledValue","marginRight","classesButton","root","clearForm","formrow2","updateChildTree","child","childInputFields","map","item","childName","e","handleChildChange","childPartId","onDeleteChildField","marginBottom","onAddNewChildField"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,mBAAP,MAAgC,yBAAhC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CACA;AACA;;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAAST,EAAE,IAAIU,IAAf,QAA2B,MAA3B;;;AAEA,MAAMC,YAAY,GAAGb,UAAU,CAAC;AAC9Bc,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADiB;AAK9BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE;AADF,GALsB;AAQ9BG,EAAAA,OAAO,EAAE;AACPF,IAAAA,QAAQ,EAAE,GADH;AAEPG,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,SAAS,EAAE,EAHJ;AAIPC,IAAAA,KAAK,EAAE;AAJA;AARqB,CAAD,CAA/B;;AAeA,MAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,aAAa,GAAGX,YAAY,EAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC;AACrDqC,IAAAA,QAAQ,EAAE,OAD2C;AAErDC,IAAAA,OAAO,EAAE,iBAF4C;AAGrDC,IAAAA,YAAY,EAAE;AAHuC,GAAD,CAAtD;;AAKA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BJ,IAAAA,kBAAkB,CAAC;AACjBC,MAAAA,QAAQ,EAAE,OADO;AAEjBC,MAAAA,OAAO,EAAE,OAFQ;AAGjBC,MAAAA,YAAY,EAAE;AAHG,KAAD,CAAlB;AAKD,GAND;;AAOA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgC1C,QAAQ,CAAC,EAAD,CAA9C,CAf4C,CAgB5C;;AACA,QAAM2C,iBAAiB,GAAIC,CAAD,IAAO;AAC/BF,IAAAA,cAAc,CAACE,CAAD,CAAd;AACD,GAFD;;AAGA7C,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFY,KAAlB,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KATH,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACd,YAAMC,KAAK,GAAGD,IAAd,CADc,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAE,MAAAA,OAAO,CAACD,KAAD,CAAP;AACAX,MAAAA,cAAc,CAACW,KAAD,CAAd;AACD,KAzBH;AA0BD,GA3BQ,EA2BN,EA3BM,CAAT;AA4BA,QAAM,CAACE,QAAD,EAAWD,OAAX,IAAsBtD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMwD,eAAe,GAAG,cACtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,UAAU,EAAC,cAFb;AAGE,IAAA,aAAa,EAAC,cAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,iBAAiB,EAAE,IALrB;AAME,IAAA,QAAQ,EAAE;AANZ;AAAA;AAAA;AAAA;AAAA,UADsB,eAStB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,UAAU,EAAC,SAFb;AAGE,IAAA,aAAa,EAAC,SAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UATsB,eAgBtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,UAAU,EAAC,uBAFb;AAGE,IAAA,aAAa,EAAC,uBAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UAhBsB,eAuBtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,aAAa,EAAC,QAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UAvBsB,eA8BtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,UAAU,EAAC,iBAFb;AAGE,IAAA,aAAa,EAAC,iBAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UA9BsB,eAqCtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,UAAU,EAAC,gBAFb;AAGE,IAAA,aAAa,EAAC,gBAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UArCsB,eA4CtB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,UAAU,EAAC,oBAFb;AAGE,IAAA,aAAa,EAAC,oBAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UA5CsB,CAAxB;;AAqDA,QAAMC,MAAM,GAAG,MAAM;AACnB,UAAMC,UAAU,GAAG,CACjB;AACEC,MAAAA,EAAE,EAAEhD,MAAM,EADZ;AAEEiD,MAAAA,WAAW,EAAE,2BAFf;AAGEC,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,GAAG,EAAE,CAJP;AAKEC,MAAAA,MAAM,EAAE,CALV;AAMEC,MAAAA,EAAE,EAAE,CANN;AAOEC,MAAAA,EAAE,EAAE,CAPN;AAQEC,MAAAA,OAAO,EAAE;AARX,KADiB,CAAnB;AAYAjC,IAAAA,OAAO,CAACkC,gBAAR,CAAyB;AACvBC,MAAAA,GAAG,EAAEV;AADkB,KAAzB;AAGD,GAhBD;;AAiBA,QAAMW,UAAU,GAAG,MAAM;AACvB,UAAMC,YAAY,GAAGrC,OAAO,CAACsC,eAAR,EAArB;AACAtC,IAAAA,OAAO,CAACkC,gBAAR,CAAyB;AAAEK,MAAAA,MAAM,EAAEF;AAAV,KAAzB,EAFuB,CAGvB;AACD,GAJD,CAvH4C,CA6H5C;;;AACA,QAAMG,wBAAwB,GAAG,MAAM;AACrC;;AACA,QAAIhC,WAAW,CAACiC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B7B,MAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErB6B,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,YAAY,EAAErC,WADK;AAEnBsC,UAAAA,KAAK,EAAE;AAFY,SAAf,CAFe;AAMrBhC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD;AANY,OAAlB,CAAL,CAWGC,IAXH,CAWSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAbH,EAcGF,IAdH,CAcSG,IAAD,IAAU;AACdhB,QAAAA,kBAAkB,CAAC;AACjBC,UAAAA,QAAQ,EAAE,SADO;AAEjBC,UAAAA,OAAO,EAAEc,IAAI,CAACd,OAFG;AAGjBC,UAAAA,YAAY,EAAE;AAHG,SAAD,CAAlB;AAKD,OApBH,EAqBGyC,KArBH,CAqBUC,KAAD,IAAW;AAChB7C,QAAAA,kBAAkB,CAAC;AACjBC,UAAAA,QAAQ,EAAE,OADO;AAEjBC,UAAAA,OAAO,EAAE,yBAAyB2C,KAFjB;AAGjB1C,UAAAA,YAAY,EAAE;AAHG,SAAD,CAAlB;AAKD,OA3BH;AA4BD,KA7BD,MA6BO;AACLH,MAAAA,kBAAkB,CAAE8C,SAAD,IAAe;AAChC,cAAM9B,IAAI,GAAG,EACX,GAAG8B,SADQ;AAEX5C,UAAAA,OAAO,EAAE,eAFE;AAGXC,UAAAA,YAAY,EAAE;AAHH,SAAb;AAKA,eAAOa,IAAP;AACD,OAPiB,CAAlB;AAQD;AACF,GAzCD;;AA2CA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEhD,MAAM,CAACuE,IAAvB;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAEvE,MAAM,CAAC+E,IAAvB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEnD,aAAa,CAACN,OAH3B;AAIE,UAAA,OAAO,EAAE+C,wBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAK,QAAA,SAAS,EAAErE,MAAM,CAACgF,KAAvB;AAAA,+BAQC;AAAK,UAAA,SAAS,EAAEtE,OAAO,CAACuE,IAAxB;AAAA,kCACH;AAAK,YAAA,SAAS,EAAEvE,OAAO,CAACwE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,eAED;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAgC,YAAA,QAAQ,EAAEC,MAAM,CAACC,YAAjD;AAAA,oCACE;AAAK,cAAA,SAAS,EAAE3E,OAAO,CAAC4E,QAAxB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAE5E,OAAO,CAAC6E,MAAxB;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC,aAApB;AAAkC,kBAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,eAAD;AACE,kBAAA,SAAS,EAAE7E,OAAO,CAAC8E,SADrB;AAEE,kBAAA,EAAE,EAAC,QAFL;AAGE,kBAAA,IAAI,EAAC,QAHP;AAIE,kBAAA,KAAK,EAAEJ,MAAM,CAACK,MAAP,CAAcC,MAJvB;AAKE,kBAAA,QAAQ,EAAEN,MAAM,CAACO,YALnB;AAME,kBAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAK,gBAAA,SAAS,EAAElF,OAAO,CAAC6E,MAAxB;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC,aAApB;AAAkC,kBAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,eAAD;AACE,kBAAA,SAAS,EAAE7E,OAAO,CAAC8E,SADrB;AAEE,kBAAA,EAAE,EAAC,YAFL;AAGE,kBAAA,IAAI,EAAC,YAHP;AAIE,kBAAA,KAAK,EAAEJ,MAAM,CAACK,MAAP,CAAcI,UAJvB;AAKE,kBAAA,QAAQ,EAAET,MAAM,CAACO,YALnB;AAME,kBAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyBE;AAAK,cAAA,SAAS,EAAElF,OAAO,CAACoF,MAAxB;AAAA,sCACE;AAAK,gBAAA,KAAK,EAAE;AAAEX,kBAAAA,KAAK,EAAE;AAAT,iBAAZ;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AACE,kBAAA,MAAM,EAAEY,KADV;AAEE,kBAAA,QAAQ,EAAEC,cAFZ;AAGE,kBAAA,KAAK,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAK,gBAAA,KAAK,EAAE;AAAEzE,kBAAAA,SAAS,EAAE,MAAb;AAAoB0E,kBAAAA,WAAW,EAAC;AAAhC,iBAAZ;AAAA,wCACE,QAAC,MAAD;AACE,kBAAA,SAAS,EAAEC,aAAa,CAACC,IAD3B;AAEE,kBAAA,OAAO,EAAC,WAFV;AAGE,kBAAA,KAAK,EAAC,SAHR;AAIE,kBAAA,IAAI,EAAC,OAJP;AAKE,kBAAA,OAAO,EAAEC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAUG,CAACT,aAAD,iBACC,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAA4C,kBAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,eAsDD;AAAK,YAAA,SAAS,EAAElF,OAAO,CAAC4F,QAAxB;AAAA,mCAIE;AAAM,cAAA,QAAQ,EAAEC,eAAhB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAE7F,OAAO,CAAC8F,KAAxB;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,SAAS,MAAf;AAAgB,oBAAA,IAAI,MAApB;AAAqB,oBAAA,OAAO,EAAE,CAA9B;AAAA,4CACE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,CAAf;AAAA,6CACE,QAAC,YAAD;AAAc,wBAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,CAAf;AAAA,6CACE,QAAC,YAAD;AAAc,wBAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAJF,eAOE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,4BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAUGC,gBAAgB,CAACC,GAAjB,CAAqB,CAACF,KAAD,EAAQG,IAAR,KAAiB;AACrC,wCACE,QAAC,IAAD;AAAM,sBAAA,SAAS,MAAf;AAAgB,sBAAA,IAAI,MAApB;AAAgC,sBAAA,OAAO,EAAE,CAAzC;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,IAAI,MAAV;AAAW,wBAAA,EAAE,EAAE,CAAf;AAAkB,wBAAA,KAAK,EAAE;AAAEnF,0BAAAA,SAAS,EAAE;AAAb,yBAAzB;AAAA,+CACE,QAAC,eAAD;AACE,0BAAA,SAAS,EAAEd,OAAO,CAAC8E,SADrB;AAEE,0BAAA,IAAI,EAAC,WAFP,CAGE;AAHF;AAIE,0BAAA,KAAK,EAAEgB,KAAK,CAACI,SAJf;AAKE,0BAAA,QAAQ,EAAGC,CAAD,IAAOC,iBAAiB,CAACH,IAAD,EAAOE,CAAP;AALpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BADF,eAUE,QAAC,IAAD;AAAM,wBAAA,IAAI,MAAV;AAAW,wBAAA,EAAE,EAAE,CAAf;AAAkB,wBAAA,KAAK,EAAE;AAAErF,0BAAAA,SAAS,EAAE;AAAb,yBAAzB;AAAA,+CACE,QAAC,eAAD;AACE,0BAAA,SAAS,EAAEd,OAAO,CAAC8E,SADrB;AAEE,0BAAA,IAAI,EAAC,aAFP,CAGE;AAHF;AAIE,0BAAA,KAAK,EAAEgB,KAAK,CAACO,WAJf;AAKE,0BAAA,QAAQ,EAAGF,CAAD,IAAOC,iBAAiB,CAACH,IAAD,EAAOE,CAAP;AALpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAVF,eAmBE,QAAC,IAAD;AAAM,wBAAA,IAAI,MAAV;AAAW,wBAAA,EAAE,EAAE,CAAf;AAAkB,wBAAA,KAAK,EAAE;AAAErF,0BAAAA,SAAS,EAAE;AAAb,yBAAzB;AAAA,+CACE,QAAC,UAAD;AACE,0BAAA,QAAQ,EAAC,QADX;AAEE,0BAAA,OAAO,EAAE,MAAM;AACbwF,4BAAAA,kBAAkB,CAACL,IAAD,CAAlB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAnBF;AAAA,uBAA0BA,IAA1B;AAAA;AAAA;AAAA;AAAA,4BADF;AA8BD,mBA/BA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eA8CE;AACE,gBAAA,KAAK,EAAE;AACLlF,kBAAAA,KAAK,EAAE,OADF;AAELD,kBAAAA,SAAS,EAAE,MAFN;AAGLyF,kBAAAA,YAAY,EAAE;AAHT,iBADT;AAAA,wCAOE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,kBAAA,IAAI,EAAC,QAJP;AAKE,kBAAA,QAAQ,EAAE,EAAER,gBAAgB,CAACnC,MAAjB,GAA0B,CAA5B,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAgBE,QAAC,MAAD;AACE,kBAAA,KAAK,EAAE;AAAE/C,oBAAAA,UAAU,EAAE;AAAd,mBADT;AAEE,kBAAA,OAAO,EAAC,WAFV;AAGE,kBAAA,KAAK,EAAC,SAHR;AAIE,kBAAA,OAAO,EAAE2F,kBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBAtDC;AAAA;AAAA;AAAA;AAAA;AAAA;AARD;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAkLGnF,eAAe,CAACI,YAAhB,iBACC,QAAC,mBAAD;AACE,MAAA,OAAO,EAAEJ,eADX;AAEE,MAAA,aAAa,EAAEK;AAFjB;AAAA;AAAA;AAAA;AAAA,YAnLJ;AAAA,kBADF;AA2LD,CApWD;;GAAMV,0B;;KAAAA,0B;AAsWN,eAAeA,0BAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport styles from \"./UserSelectionConfiguration.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n\r\n//From Add new equipment form\r\nimport classes from \"./EqptStructuring.module.css\";\r\nimport LabelToolTip from \"./LabelToolTip/LabelToolTip\";\r\n// import Tree from \"./Tree\";\r\n// import TreeComponent from \"../../sortableTree/SortableTree\";\r\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport AutoSelect from \"../../../ui/Form/AutoSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\"; \r\n\r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\nconst UserSelectionConfiguration = (props) => {\r\n  const SystemClasses = SystemStyles();\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Close\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const [missionData, setMissionData] = useState([]);\r\n  // let finalTableData = [];\r\n  const setFinalTableData = (d) => {\r\n    setMissionData(d);\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"/mission_data\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const mData = data;\r\n        // const rowD = data.map((x) => () => {\r\n        //   return {\r\n        //     id: x[\"id\"],\r\n        //     missionName: x[\"missionName\"],\r\n        //     Harbour: x[\"Harbour\"],\r\n        //     elh: x[\"elh\"],\r\n        //     cruise: x[\"cruise\"],\r\n        //     ds: x[\"ds\"],\r\n        //     as: x[\"ask\"],\r\n        //   };\r\n        // });\r\n        setRows(mData);\r\n        setMissionData(mData);\r\n      });\r\n  }, []);\r\n  const [rowState, setRows] = useState([]);\r\n  const MProfileColumns = [\r\n    <AgGridColumn\r\n      field=\"missionName\"\r\n      headerName=\"Mission Name\"\r\n      headerTooltip=\"Mission Name\"\r\n      width={250}\r\n      checkboxSelection={true}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Harbour\"\r\n      headerName=\"Harbour\"\r\n      headerTooltip=\"Harbour\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"elh\"\r\n      headerName=\"Entry Leaving Harbour\"\r\n      headerTooltip=\"Entry Leaving Harbour\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"cruise\"\r\n      headerName=\"Cruise\"\r\n      headerTooltip=\"Cruise\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ds\"\r\n      headerName=\"Defense Station\"\r\n      headerTooltip=\"Defense Station\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"as\"\r\n      headerName=\"Action Station\"\r\n      headerTooltip=\"Action Station\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"tar_rel\"\r\n      headerName=\"Target Reliability\"\r\n      headerTooltip=\"Target Reliability\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: uuidv4(),\r\n        missionName: \"Please Enter Mission Name\",\r\n        Harbour: 0,\r\n        elh: 0,\r\n        cruise: 0,\r\n        ds: 0,\r\n        as: 0,\r\n        tar_rel: 0,\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    // console.log(selectedRows);\r\n  };\r\n\r\n  //Save Button Handler\r\n  const onSaveButtonClickHandler = () => {\r\n    debugger;\r\n    if (missionData.length > 0) {\r\n      fetch(\"/mission_data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          mission_data: missionData,\r\n          dtype: \"insertMission\",\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setSnackBarMessage({\r\n            severity: \"success\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: \"Some Error Occured. \" + error,\r\n            showSnackBar: true,\r\n          });\r\n        });\r\n    } else {\r\n      setSnackBarMessage((prevState) => {\r\n        const data = {\r\n          ...prevState,\r\n          message: \"This is error\",\r\n          showSnackBar: true,\r\n        };\r\n        return data;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        {/* <div className={styles.module}>\r\n          <NewModule />\r\n        </div> */}\r\n        <div className={styles.user}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={SystemClasses.buttons}\r\n            onClick={onSaveButtonClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        {/* <div className={styles.user}><UserSelection /></div> */}\r\n        <div className={styles.table}>\r\n          {/* <Table\r\n            rowData={rowState}\r\n            columnDefs={MProfileColumns}\r\n            tableUpdate={setFinalTableData}\r\n            setGrid={setGridApi}\r\n            gridApi={gridApi}\r\n          /> */}\r\n         <div className={classes.form}>\r\n      <div className={classes.header}>Add New Equipment</div>\r\n        <form style={{ width: \"100%\" }} onSubmit={formik.handleSubmit}>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Name\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"system\"\r\n                name=\"system\"\r\n                value={formik.values.system}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Type\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"systemType\"\r\n                name=\"systemType\"\r\n                value={formik.values.systemType}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n          </div>\r\n          <div className={classes.parent}>\r\n            <div style={{ width: \"400px\" }}>\r\n              <LabelToolTip label=\"Parent Component\" />\r\n              <AutoSelect\r\n                fields={fData}\r\n                onChange={parentOnChange}\r\n                value={parentFiledValue}\r\n              ></AutoSelect>\r\n            </div>\r\n            <div style={{ marginTop: \"20px\",marginRight:'2%' }}>\r\n              <Button\r\n                className={classesButton.root}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"reset\"\r\n                onClick={clearForm}\r\n              >\r\n                Clear\r\n              </Button>\r\n              {!disableButton && (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className={classes.formrow2}>\r\n          {/* //onSubmit={updateChildTree} ref={childForm} */}\r\n\r\n          {/* This is the end */}\r\n          <form onSubmit={updateChildTree}>\r\n            <div className={classes.child}>\r\n              <Grid container>\r\n                <Grid container item spacing={4}>\r\n                  <Grid item xs={5}>\r\n                    <LabelToolTip label=\"Child Component Name\" />\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    <LabelToolTip label=\"Part Code\" />\r\n                  </Grid>\r\n                  <Grid item xs={2}></Grid>\r\n                </Grid>\r\n                {childInputFields.map((child, item) => {\r\n                  return (\r\n                    <Grid container item key={item} spacing={4}>\r\n                      <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                        <CustomTextInput\r\n                          className={classes.fullWidth}\r\n                          name=\"childName\"\r\n                          // id=\"childName\"\r\n                          value={child.childName}\r\n                          onChange={(e) => handleChildChange(item, e)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                        <CustomTextInput\r\n                          className={classes.fullWidth}\r\n                          name=\"childPartId\"\r\n                          // id=\"partId\"\r\n                          value={child.childPartId}\r\n                          onChange={(e) => handleChildChange(item, e)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={2} style={{ marginTop: \"35px\" }}>\r\n                        <DeleteIcon\r\n                          fontSize=\"medium\"\r\n                          onClick={() => {\r\n                            onDeleteChildField(item);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              style={{\r\n                float: \"right\",\r\n                marginTop: \"30px\",\r\n                marginBottom: \"30px\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //onClick={updateChildTree}\r\n                type=\"submit\"\r\n                disabled={!(childInputFields.length > 0)}\r\n              >\r\n                Update All\r\n              </Button>\r\n              <Button\r\n                style={{ marginLeft: \"20px\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onAddNewChildField}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n          {/* <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSelectionConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}