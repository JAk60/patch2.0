{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\PM OPTIM\\\\OptTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from './pm.module.css';\nimport OptTable from \"./OptTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  dialogTitle: {\n    paddingBottom: theme.spacing(1)\n  },\n  dialogContent: {\n    paddingTop: 0,\n    paddingBottom: theme.spacing(2)\n  }\n}));\n\nconst OptiQ = ({\n  questions,\n  name,\n  currQ\n}) => {\n  _s();\n\n  var _currQ$columns;\n\n  const [answers, setAnswers] = useState({});\n  const [tval, setTval] = useState(0);\n  const [tval90, setTval90] = useState(0);\n  const [tval110, setTval110] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const classes = useStyles();\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Include the method value in the answers object\n\n    const answersWithMethod = { ...answers,\n      method: name\n    }; // Send the answers to the Flask backend\n\n    fetch(\"/optimize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(answersWithMethod)\n    }).then(response => response.json()).then(data => {\n      // Handle the response from the backend\n      console.log(data);\n      setTval(data.t);\n      setTval90(data.t - 0.1 * data.t);\n      setTval110(data.t + 0.1 * data.t); // Save the answers to the table data\n\n      const newRowData = [...tableData, {\n        tval: data.t,\n        tval90: data.t - 0.1 * data.t,\n        tval110: data.t + 0.1 * data.t\n      }];\n      setTableData(newRowData);\n      setOpen(true); // Open the dialog\n    }).catch(error => {\n      // Handle any errors\n      console.error(error);\n    });\n  };\n\n  const handleAnswerChange = (event, questionId) => {\n    const {\n      value\n    } = event.target;\n    setAnswers(prevAnswers => ({ ...prevAnswers,\n      [questionId]: parseFloat(value)\n    }));\n    setAnswers(prevAnswers => ({ ...prevAnswers,\n      method: name\n    }));\n  };\n\n  const handleClose = () => {\n    setOpen(false); // Close the dialog\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainOp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userSele,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \" Questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [questions === null || questions === void 0 ? void 0 : questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: question.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), question.type === \"text\" && /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: answers[question.id] || \"\",\n              onChange: event => handleAnswerChange(event, question.id),\n              required: question.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          maxWidth: \"xs\",\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dialogContainer,\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              className: classes.dialogTitle,\n              children: \"Optimization Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              className: classes.dialogContent,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"t value: \", tval]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"t value (90%): \", tval90]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"t value (110%): \", tval110]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClose,\n                color: \"primary\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.OptTable,\n        children: /*#__PURE__*/_jsxDEV(OptTable, {\n          columnDefs: (_currQ$columns = currQ.columns) === null || _currQ$columns === void 0 ? void 0 : _currQ$columns.map(column => ({\n            headerName: column,\n            field: column\n          })),\n          rowData: tableData,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(OptiQ, \"xwXu/FrvkFBfNB4uw76BDM/jtwk=\", false, function () {\n  return [useStyles];\n});\n\n_c = OptiQ;\nexport default OptiQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptiQ\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/PM OPTIM/OptTable.js"],"names":["React","useState","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","makeStyles","styles","OptTable","useStyles","theme","dialogContainer","borderRadius","spacing","padding","dialogTitle","paddingBottom","dialogContent","paddingTop","OptiQ","questions","name","currQ","answers","setAnswers","tval","setTval","tval90","setTval90","tval110","setTval110","open","setOpen","tableData","setTableData","classes","handleSubmit","event","preventDefault","answersWithMethod","method","fetch","headers","body","JSON","stringify","then","response","json","data","console","log","t","newRowData","catch","error","handleAnswerChange","questionId","value","target","prevAnswers","parseFloat","handleClose","mainOp","userSele","map","question","text","type","id","required","columns","column","headerName","field"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,WAApC,EAAiDC,aAAjD,EAAgEC,aAAhE,QAAqF,mBAArF;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAEfC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFM,GADsB;AAKvCE,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,GAL0B;AAQvCI,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE,CADC;AAEbF,IAAAA,aAAa,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAFF;AARwB,CAAZ,CAAD,CAA5B;;AAcA,MAAMM,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AAAA;;AAAA;;AAC5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgC,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMoC,OAAO,GAAG1B,SAAS,EAAzB;;AAEA,QAAM2B,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;;AACA,UAAMC,iBAAiB,GAAG,EAAE,GAAGhB,OAAL;AAAciB,MAAAA,MAAM,EAAEnB;AAAtB,KAA1B,CAJ8B,CAM9B;;AACAoB,IAAAA,KAAK,CAAC,WAAD,EAAc;AACjBD,MAAAA,MAAM,EAAE,MADS;AAEjBE,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,iBAAf;AALW,KAAd,CAAL,CAOGO,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAvB,MAAAA,OAAO,CAACuB,IAAI,CAACG,CAAN,CAAP;AACAxB,MAAAA,SAAS,CAACqB,IAAI,CAACG,CAAL,GAAS,MAAMH,IAAI,CAACG,CAArB,CAAT;AACAtB,MAAAA,UAAU,CAACmB,IAAI,CAACG,CAAL,GAAS,MAAMH,IAAI,CAACG,CAArB,CAAV,CALc,CAOd;;AACA,YAAMC,UAAU,GAAG,CACjB,GAAGpB,SADc,EAEjB;AAAER,QAAAA,IAAI,EAAEwB,IAAI,CAACG,CAAb;AAAgBzB,QAAAA,MAAM,EAAEsB,IAAI,CAACG,CAAL,GAAS,MAAMH,IAAI,CAACG,CAA5C;AAA+CvB,QAAAA,OAAO,EAAEoB,IAAI,CAACG,CAAL,GAAS,MAAMH,IAAI,CAACG;AAA5E,OAFiB,CAAnB;AAIAlB,MAAAA,YAAY,CAACmB,UAAD,CAAZ;AACArB,MAAAA,OAAO,CAAC,IAAD,CAAP,CAbc,CAaC;AAChB,KAtBH,EAuBGsB,KAvBH,CAuBUC,KAAD,IAAW;AAChB;AACAL,MAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD,KA1BH;AA2BD,GAlCD;;AAoCA,QAAMC,kBAAkB,GAAG,CAACnB,KAAD,EAAQoB,UAAR,KAAuB;AAChD,UAAM;AAAEC,MAAAA;AAAF,QAAYrB,KAAK,CAACsB,MAAxB;AACAnC,IAAAA,UAAU,CAAEoC,WAAD,KAAkB,EAC3B,GAAGA,WADwB;AAE3B,OAACH,UAAD,GAAcI,UAAU,CAACH,KAAD;AAFG,KAAlB,CAAD,CAAV;AAIAlC,IAAAA,UAAU,CAAEoC,WAAD,KAAkB,EAAE,GAAGA,WAAL;AAAkBpB,MAAAA,MAAM,EAAEnB;AAA1B,KAAlB,CAAD,CAAV;AACD,GAPD;;AASA,QAAMyC,WAAW,GAAG,MAAM;AACxB9B,IAAAA,OAAO,CAAC,KAAD,CAAP,CADwB,CACR;AACjB,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAACwD,MAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAExD,MAAM,CAACyD,QAAvB;AAAA,gCACE;AAAA,qBAAK3C,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEe,YAAhB;AAAA,qBACGhB,SADH,aACGA,SADH,uBACGA,SAAS,CAAE6C,GAAX,CAAgBC,QAAD,iBACd;AAAA,oCACE;AAAA,wBAAQA,QAAQ,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGD,QAAQ,CAACE,IAAT,KAAkB,MAAlB,iBACC,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAE7C,OAAO,CAAC2C,QAAQ,CAACG,EAAV,CAAP,IAAwB,EAFjC;AAGE,cAAA,QAAQ,EAAGhC,KAAD,IAAWmB,kBAAkB,CAACnB,KAAD,EAAQ6B,QAAQ,CAACG,EAAjB,CAHzC;AAIE,cAAA,QAAQ,EAAEH,QAAQ,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAUJ,QAAQ,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,eAeE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,WAA9B;AAA0C,YAAA,KAAK,EAAC,SAAhD;AAA0D,YAAA,OAAO,EAAEjC,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEL,IAAd;AAAoB,UAAA,OAAO,EAAE+B,WAA7B;AAA0C,UAAA,QAAQ,EAAC,IAAnD;AAAwD,UAAA,SAAS,MAAjE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAE3B,OAAO,CAACxB,eAAxB;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAEwB,OAAO,CAACpB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,aAAD;AAAe,cAAA,SAAS,EAAEoB,OAAO,CAAClB,aAAlC;AAAA,sCACE;AAAA,wCAAaQ,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,8CAAmBE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,+CAAoBE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,aAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEiC,WAAjB;AAA8B,gBAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsCE;AAAK,QAAA,SAAS,EAAEvD,MAAM,CAACC,QAAvB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,UAAU,oBAAEc,KAAK,CAACiD,OAAR,mDAAE,eAAeN,GAAf,CAAoBO,MAAD,KAAa;AAAEC,YAAAA,UAAU,EAAED,MAAd;AAAsBE,YAAAA,KAAK,EAAEF;AAA7B,WAAb,CAAnB,CADd;AAEE,UAAA,OAAO,EAAEvC,SAFX;AAGE,UAAA,MAAM,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkDD,CA5GD;;GAAMd,K;UAOYV,S;;;KAPZU,K;AA8GN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from './pm.module.css';\r\nimport OptTable from \"./OptTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n  dialogTitle: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  dialogContent: {\r\n    paddingTop: 0,\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst OptiQ = ({ questions, name, currQ }) => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [tval, setTval] = useState(0);\r\n  const [tval90, setTval90] = useState(0);\r\n  const [tval110, setTval110] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Include the method value in the answers object\r\n    const answersWithMethod = { ...answers, method: name };\r\n\r\n    // Send the answers to the Flask backend\r\n    fetch(\"/optimize\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(answersWithMethod),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle the response from the backend\r\n        console.log(data);\r\n        setTval(data.t);\r\n        setTval90(data.t - 0.1 * data.t);\r\n        setTval110(data.t + 0.1 * data.t);\r\n\r\n        // Save the answers to the table data\r\n        const newRowData = [\r\n          ...tableData,\r\n          { tval: data.t, tval90: data.t - 0.1 * data.t, tval110: data.t + 0.1 * data.t },\r\n        ];\r\n        setTableData(newRowData);\r\n        setOpen(true); // Open the dialog\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleAnswerChange = (event, questionId) => {\r\n    const { value } = event.target;\r\n    setAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionId]: parseFloat(value),\r\n    }));\r\n    setAnswers((prevAnswers) => ({ ...prevAnswers, method: name }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false); // Close the dialog\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.mainOp}>\r\n        <div className={styles.userSele}>\r\n          <h3>{name} Questions</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            {questions?.map((question) => (\r\n              <div key={question.id}>\r\n                <label>{question.text}</label>\r\n                {question.type === \"text\" && (\r\n                  <TextField\r\n                    type=\"number\"\r\n                    value={answers[question.id] || \"\"}\r\n                    onChange={(event) => handleAnswerChange(event, question.id)}\r\n                    required={question.required}\r\n                  />\r\n                )}\r\n                {/* Add other input types (e.g., select, radio, checkbox) based on the question type */}\r\n              </div>\r\n            ))}\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </form>\r\n          <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n            <div className={classes.dialogContainer}>\r\n              <DialogTitle className={classes.dialogTitle}>Optimization Result</DialogTitle>\r\n              <DialogContent className={classes.dialogContent}>\r\n                <p>t value: {tval}</p>\r\n                <p>t value (90%): {tval90}</p>\r\n                <p>t value (110%): {tval110}</p>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </div>\r\n          </Dialog>\r\n        </div>\r\n        <div className={styles.OptTable}>\r\n          <OptTable\r\n            columnDefs={currQ.columns?.map((column) => ({ headerName: column, field: column }))}\r\n            rowData={tableData}\r\n            height={200}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptiQ;\r\n"]},"metadata":{},"sourceType":"module"}