{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Home\\\\AccessControl.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccessControl = ({\n  allowedLevels,\n  children\n}) => {\n  _s();\n\n  const userAccessLevel = useSelector(state => state.LevelsData);\n  const trueLevels = Object.entries(userAccessLevel).filter(([key, value]) => value === true).map(([key]) => key);\n  console.log(trueLevels);\n  const isAllowed = allowedLevels.some(level => trueLevels.includes(level));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Access Level: \", typeof trueLevels]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isAllowed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sorry, you don't have access to this content.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccessControl, \"1cDEMEej8BjBLKq+qbUxuAR05dU=\", false, function () {\n  return [useSelector];\n});\n\n_c = AccessControl;\nexport default AccessControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessControl\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Home/AccessControl.js"],"names":["React","useSelector","AccessControl","allowedLevels","children","userAccessLevel","state","LevelsData","trueLevels","Object","entries","filter","key","value","map","console","log","isAllowed","some","level","includes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AAAA;;AACrD,QAAMC,eAAe,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAAnC;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeL,eAAf,EAChBM,MADgB,CACT,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkBA,KAAK,KAAK,IADnB,EAEhBC,GAFgB,CAEZ,CAAC,CAACF,GAAD,CAAD,KAAWA,GAFC,CAAnB;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAEA,QAAMS,SAAS,GAAGd,aAAa,CAACe,IAAd,CAAoBC,KAAD,IAAWX,UAAU,CAACY,QAAX,CAAoBD,KAApB,CAA9B,CAAlB;AAEA,sBACE;AAAA,4BACE;AAAA,wCAAuB,OAAOX,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,SAAS,gBAAG;AAAA,gBAAGb;AAAH,qBAAH,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;GAAMF,a;UACoBD,W;;;KADpBC,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AccessControl = ({ allowedLevels, children }) => {\r\n  const userAccessLevel = useSelector((state) => state.LevelsData);\r\n  const trueLevels = Object.entries(userAccessLevel)\r\n    .filter(([key, value]) => value === true)\r\n    .map(([key]) => key);\r\n  console.log(trueLevels);\r\n  \r\n  const isAllowed = allowedLevels.some((level) => trueLevels.includes(level));\r\n\r\n  return (\r\n    <div>\r\n      <p>User Access Level: {typeof trueLevels}</p>\r\n      {isAllowed ? <>{children}</> : <p>Sorry, you don't have access to this content.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccessControl;\r\n"]},"metadata":{},"sourceType":"module"}