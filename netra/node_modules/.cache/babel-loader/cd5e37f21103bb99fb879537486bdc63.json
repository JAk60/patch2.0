{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\systen_configuration\\\\failureMode\\\\failureMode.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport Table from \"../../../ui/Table/Table\";\nimport styles from \"../SystemConfiguration.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useEffect, useState } from \"react\";\nimport RenderParallelComponent from \"../redundancy/RenderParallelComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FailureMode = props => {\n  _s();\n\n  const systemData = useSelector(state => state.treeData.treeData);\n  const failureModesData = useSelector(state => state.treeData.failureModes);\n  const [gridApi, setGridApi] = useState(null);\n  const equipments = systemData.map(eqpt => eqpt.name + \"-\" + eqpt.parentName);\n  let ParallelIds = [];\n\n  const setParallelIds = d => {\n    ParallelIds = d;\n  };\n\n  const rowData = systemData.map((element, index) => {\n    return {\n      EquipmentName: element.name,\n      id: uuid(),\n      eqId: element.id,\n      fixFailureMode: \"\"\n    };\n  });\n  const FMcolumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"EquipmentName\",\n    headerName: \"Equipment Name\",\n    headerTooltip: \"Equipment Name\",\n    width: 300,\n    editable: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"fixFailureMode\",\n    headerName: \"Failure Mode\",\n    headerTooltip: \"Failure Mode\",\n    width: 300,\n    editable: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: failureModesData\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)];\n\n  const AddRow = () => {\n    const defaultRow = [{\n      EquipmentName: \"\",\n      id: uuid(),\n      eqId: \"\",\n      fixFailureMode: \"\"\n    }];\n    gridApi.applyTransaction({\n      add: defaultRow\n    });\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    }); // console.log(selectedRows);\n  };\n\n  const updateFinalRowData = (allRows, rowId) => {\n    debugger;\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.systemTable,\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: FMcolumnDefs,\n      rowData: rowData,\n      tableUpdate: updateFinalRowData,\n      setGrid: setGridApi,\n      gridApi: gridApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableFooter,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this),\n        color: \"secondary\",\n        onClick: () => AddRow(),\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: 10\n        },\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 26\n        }, this),\n        color: \"secondary\",\n        onClick: () => deleteRows(),\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FailureMode, \"dzlK/hlUfr9NEL9YmxUfAqKdgTU=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = FailureMode;\nexport default FailureMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"FailureMode\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/systen_configuration/failureMode/failureMode.js"],"names":["Button","AgGridColumn","CustomSelect","Table","styles","useDispatch","useSelector","v4","uuid","AddIcon","DeleteIcon","useEffect","useState","RenderParallelComponent","FailureMode","props","systemData","state","treeData","failureModesData","failureModes","gridApi","setGridApi","equipments","map","eqpt","name","parentName","ParallelIds","setParallelIds","d","rowData","element","index","EquipmentName","id","eqId","fixFailureMode","FMcolumnDefs","values","AddRow","defaultRow","applyTransaction","add","deleteRows","selectedRows","getSelectedRows","remove","updateFinalRowData","allRows","rowId","tableUpdate","systemTable","tableFooter","marginLeft"],"mappings":"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","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RenderParallelComponent from \"../redundancy/RenderParallelComponent\";\r\nconst FailureMode = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const failureModesData = useSelector((state) => state.treeData.failureModes);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const equipments = systemData.map(\r\n    (eqpt) => eqpt.name + \"-\" + eqpt.parentName\r\n  );\r\n  let ParallelIds = [];\r\n\r\n  const setParallelIds = (d) => {\r\n    ParallelIds = d;\r\n  };\r\n  const rowData = systemData.map((element, index) => {\r\n    return {\r\n      EquipmentName: element.name,\r\n      id: uuid(),\r\n      eqId: element.id,\r\n      fixFailureMode: \"\",\r\n    };\r\n  });\r\n  const FMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment Name\"\r\n      headerTooltip=\"Equipment Name\"\r\n      width={300}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"fixFailureMode\"\r\n      headerName=\"Failure Mode\"\r\n      headerTooltip=\"Failure Mode\"\r\n      width={300}\r\n      editable={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: failureModesData,\r\n      }}\r\n    />\r\n  ];\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        EquipmentName: \"\",\r\n      id: uuid(),\r\n      eqId: \"\",\r\n      fixFailureMode: \"\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    // console.log(selectedRows);\r\n  };\r\n  const updateFinalRowData = (allRows, rowId) => {\r\n    debugger;\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={FMcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n      />\r\n      <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FailureMode;\r\n"]},"metadata":{},"sourceType":"module"}