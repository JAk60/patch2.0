{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netraaaa\\\\Netra\\\\netra\\\\src\\\\pages\\\\PM OPTIM\\\\OptTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from './pm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptTable = ({\n  columnDefs,\n  rowData,\n  height,\n  name,\n  setRowData\n}) => {\n  _s();\n\n  const defaultColumnDefs = [{\n    headerName: \"Beta\",\n    field: \"beta\",\n    editable: true\n  }, {\n    headerName: \"Eeta\",\n    field: \"eeta\",\n    editable: true\n  }];\n  const tableColumnDefs = columnDefs || defaultColumnDefs;\n  const useStyles = makeStyles(theme => ({\n    dialogContainer: {\n      borderRadius: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    dialogTitle: {\n      paddingBottom: theme.spacing(1)\n    },\n    dialogContent: {\n      paddingTop: 0,\n      paddingBottom: theme.spacing(2)\n    }\n  }));\n  const [open, setOpen] = useState(false);\n  const [tval, setTval] = useState(0);\n  const [tvals, setTvals] = useState([]);\n  const [tval90, setTval90] = useState(0);\n  const [tval110, setTval110] = useState(0);\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false); // Close the dialog\n\n    setRowData([]);\n    window.location.reload();\n  };\n\n  const handleT = event => {\n    event.preventDefault(); // Include the method value in the answers object\n\n    const dataToSend = { ...rowData,\n      method: name\n    };\n    console.log(dataToSend); // Send the answers to the Flask backend\n\n    fetch(\"/optimize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dataToSend[0])\n    }).then(response => response.json()).then(data => {\n      // Handle the response from the backend\n      if (name !== \"risk_target\") {\n        console.log(data);\n        setTval(data.t);\n        setTval90(data.t - 0.1 * data.t);\n        setTval110(data.t + 0.1 * data.t);\n      } else {\n        setTvals(data.t);\n        console.log(tvals);\n      } // Set the tableData state with the row data when the form is submitted\n\n    }).catch(error => {\n      // Handle any errors\n      console.error(error);\n    });\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: height,\n      width: '100%',\n      position: 'relative'\n    },\n    children: [console.log(rowData), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: tableColumnDefs,\n      rowData: rowData,\n      defaultColDef: {\n        flex: 1,\n        resizable: true,\n        filter: true,\n        sortable: true,\n        editable: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.btn,\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleT,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"xs\",\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dialogContainer,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          className: classes.dialogTitle,\n          children: \"Optimization Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: classes.dialogContent,\n          children: name === \"risk_target\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Optimized Time For Maintenance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: styles.optimizationTable,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Probability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"90%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"110%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tvals.map((t, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [.8, .85, .9, .95][index]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t.toFixed(4)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (t * 0.9).toFixed(4)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: (t * 1.1).toFixed(4)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Optimized Time For Maintenance: \", tval]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Lower Bound: \", tval90]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Upper Bound: \", tval110]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OptTable, \"KPpsZ1gwvAbfSKi0qJ8uPTmjdBw=\", true);\n\n_c = OptTable;\nexport default OptTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptTable\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/PM OPTIM/OptTable.js"],"names":["React","useEffect","useState","AgGridReact","Button","Dialog","DialogTitle","DialogContent","DialogActions","makeStyles","styles","OptTable","columnDefs","rowData","height","name","setRowData","defaultColumnDefs","headerName","field","editable","tableColumnDefs","useStyles","theme","dialogContainer","borderRadius","spacing","padding","dialogTitle","paddingBottom","dialogContent","paddingTop","open","setOpen","tval","setTval","tvals","setTvals","tval90","setTval90","tval110","setTval110","classes","handleClose","window","location","reload","handleT","event","preventDefault","dataToSend","method","console","log","fetch","headers","body","JSON","stringify","then","response","json","data","t","catch","error","width","position","flex","resizable","filter","sortable","btn","optimizationTable","map","index","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from './pm.module.css';\r\n\r\nconst OptTable = ({ columnDefs, rowData, height, name, setRowData }) => {\r\n  const defaultColumnDefs = [\r\n    { headerName: \"Beta\", field: \"beta\", editable: true },\r\n    { headerName: \"Eeta\", field: \"eeta\", editable: true },\r\n  ];\r\n  const tableColumnDefs = columnDefs || defaultColumnDefs;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    dialogContainer: {\r\n      borderRadius: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n    },\r\n    dialogTitle: {\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    dialogContent: {\r\n      paddingTop: 0,\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  }));\r\n  const [open, setOpen] = useState(false);\r\n  const [tval, setTval] = useState(0);\r\n  const [tvals, setTvals] = useState([]);\r\n  const [tval90, setTval90] = useState(0);\r\n  const [tval110, setTval110] = useState(0);\r\n\r\n\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    setOpen(false); // Close the dialog\r\n    setRowData([])\r\n    window.location.reload();\r\n\r\n  };\r\n\r\n  const handleT = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Include the method value in the answers object\r\n    const dataToSend = { ...rowData, method: name };\r\n    console.log(dataToSend);\r\n\r\n    // Send the answers to the Flask backend\r\n    fetch(\"/optimize\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(dataToSend[0]),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle the response from the backend\r\n        if (name !== \"risk_target\") {\r\n          console.log(data);\r\n          setTval(data.t);\r\n          setTval90(data.t - 0.1 * data.t);\r\n          setTval110(data.t + 0.1 * data.t);\r\n        }\r\n        else {\r\n          setTvals(data.t)\r\n          console.log(tvals)\r\n        }\r\n        // Set the tableData state with the row data when the form is submitted\r\n\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors\r\n        console.error(error);\r\n      });\r\n    setOpen(true);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"ag-theme-alpine\" style={{ height: height, width: '100%', position: 'relative' }}>\r\n      {console.log(rowData)}\r\n      <AgGridReact\r\n        columnDefs={tableColumnDefs}\r\n        rowData={rowData}\r\n        defaultColDef={{\r\n          flex: 1,\r\n          resizable: true,\r\n          filter: true,\r\n          sortable: true,\r\n          editable: true,\r\n        }}\r\n      ></AgGridReact>\r\n      <Button className={styles.btn} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleT}>Submit</Button>\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth>\r\n        <div className={classes.dialogContainer}>\r\n          <DialogTitle className={classes.dialogTitle}>Optimization Result</DialogTitle>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {name === \"risk_target\" ? (\r\n              <div>\r\n                <p>Optimized Time For Maintenance:</p>\r\n                <table className={styles.optimizationTable}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Probability</th> {/* Add the extra column header */}\r\n                      <th>t</th>\r\n                      <th>90%</th>\r\n                      <th>110%</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tvals.map((t, index) => (\r\n                      <tr key={index}>\r\n                        <td>{[.8, .85, .9, .95][index]}</td> {/* Add the extra column values */}\r\n                        <td>{t.toFixed(4)}</td> {/* Round off to 4 decimal places */}\r\n                        <td>{(t * 0.9).toFixed(4)}</td> {/* Round off to 4 decimal places */}\r\n                        <td>{(t * 1.1).toFixed(4)}</td> {/* Round off to 4 decimal places */}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <p>Optimized Time For Maintenance: {tval}</p>\r\n                <p>Lower Bound: {tval90}</p>\r\n                <p>Upper Bound: {tval110}</p>\r\n              </div>\r\n            )}\r\n\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </div>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptTable;\r\n"]},"metadata":{},"sourceType":"module"}