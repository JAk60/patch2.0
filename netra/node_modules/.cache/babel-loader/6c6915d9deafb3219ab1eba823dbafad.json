{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Settings\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './SignIn.module.css';\nimport { Paper, makeStyles, InputBase, Button, FormControlLabel, Checkbox, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport CustomizedSnackbars from '../../ui/CustomSnackBar';\nimport { useDispatch } from 'react-redux';\nimport { setLevel } from '../../store/Levels';\nimport { useLocation } from 'react-router-dom';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputStyles = makeStyles({\n  root: {\n    margin: '15px 0px 5px 0px',\n    paddingRight: 10,\n    paddingLeft: 10,\n    background: \"#ebebeb\",\n    borderRadius: \"5px\",\n    height: 40,\n    width: '70%',\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n  },\n  label: {\n    fontWeight: 600\n  }\n});\n\nconst SignIn = props => {\n  _s();\n\n  var _location$state;\n\n  if (props.loggedIn) {\n    props.history.push('/');\n  }\n\n  const location = useLocation();\n  const message = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.message;\n  const [open, setOpen] = React.useState(!!message);\n  const [keepLogin, setKeepLogin] = useState(false);\n  const InputClasses = InputStyles();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleMClose = () => {\n    setOpen(false);\n  };\n\n  const [showSnackBar, setShowSnackBar] = useState(false);\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"\",\n      showSnackBar: false\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const Login = () => {\n    if (userName && password) {\n      const data = {\n        username: userName,\n        // Replace with the username to check\n        password: password // Replace with the password to check\n\n      };\n      fetch(\"/get_credentials\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        return response.json();\n      }).then(data => {\n        console.log('Success:', data);\n        localStorage.setItem('login', true);\n        const isLoggedIn = localStorage.getItem('login');\n\n        if (isLoggedIn === 'true') {\n          props.setLoggedIn(true);\n        }\n\n        console.log({\n          level: data.level,\n          value: true\n        });\n        dispatch(setLevel({\n          level: data.level,\n          value: true\n        }));\n        localStorage.setItem('userData', JSON.stringify({\n          level: data.level,\n          value: true\n        })); // props.history.push('/')\n      }).catch(error => {\n        setSnackBarMessage({\n          severity: \"error\",\n          message: \"Enter Correct Login details\",\n          showSnackBar: true\n        });\n      });\n    } else {\n      setSnackBarMessage({\n        severity: \"error\",\n        message: \"Enter Correct Login details\",\n        showSnackBar: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleMClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleMClose,\n        severity: \"success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.SignInPaper,\n      elevation: 5,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/netra-logo-removebg.png\",\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.netra,\n          children: \"NETRA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        classes: InputClasses,\n        name: \"username\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        id: \"username\",\n        placeholder: \"User Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        classes: InputClasses,\n        name: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: '#1c4199',\n          color: 'white'\n        },\n        onClick: () => Login(),\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '80%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.links,\n        to: \"/sign_up\",\n        children: \"Create an Account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"QUHokERi2ICdpgfEPp6yx/ycRAs=\", false, function () {\n  return [useLocation, useDispatch];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Settings/SignIn.js"],"names":["React","useEffect","useState","styles","Paper","makeStyles","InputBase","Button","FormControlLabel","Checkbox","Typography","Link","CustomizedSnackbars","useDispatch","setLevel","useLocation","Snackbar","MuiAlert","InputStyles","root","margin","paddingRight","paddingLeft","background","borderRadius","height","width","boxShadow","label","fontWeight","SignIn","props","loggedIn","history","push","location","message","state","open","setOpen","keepLogin","setKeepLogin","InputClasses","userName","setUserName","password","setPassword","handleMClose","showSnackBar","setShowSnackBar","SnackBarMessage","setSnackBarMessage","severity","onHandleSnackClose","dispatch","Login","data","username","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","console","log","localStorage","setItem","isLoggedIn","getItem","setLoggedIn","level","value","catch","error","container","SignInPaper","netra","textAlign","e","target","backgroundColor","color","display","justifyContent","alignItems","links"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from './SignIn.module.css'\r\nimport { Paper, makeStyles, InputBase, Button, FormControlLabel, Checkbox, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport CustomizedSnackbars from '../../ui/CustomSnackBar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLevel } from '../../store/Levels';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst InputStyles = makeStyles({\r\n  root: {\r\n    margin: '15px 0px 5px 0px',\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    background: \"#ebebeb\",\r\n    borderRadius: \"5px\",\r\n    height: 40,\r\n    width: '70%',\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n  label: {\r\n    fontWeight: 600\r\n  }\r\n});\r\n\r\n\r\nconst SignIn = (props) => {\r\n    if (props.loggedIn) {\r\n      props.history.push('/')\r\n    }\r\n    \r\n\r\n  const location = useLocation();\r\n  const message = location.state?.message;\r\n  const [open, setOpen] = React.useState(!!message);\r\n\r\n  const [keepLogin, setKeepLogin] = useState(false);\r\n  const InputClasses = InputStyles();\r\n  const [userName, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleMClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n\r\n  const [showSnackBar, setShowSnackBar] = useState(false);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Login = () => {\r\n\r\n    if (userName && password) {\r\n      const data = {\r\n        username: userName, // Replace with the username to check\r\n        password: password  // Replace with the password to check\r\n      };\r\n\r\n      fetch(\"/get_credentials\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n          localStorage.setItem('login', true);\r\n          const isLoggedIn = localStorage.getItem('login');\r\n          if(isLoggedIn === 'true'){\r\n            props.setLoggedIn(true)\r\n          }\r\n          console.log({ level: data.level, value: true })\r\n          dispatch(setLevel({ level: data.level, value: true }))\r\n          localStorage.setItem('userData', JSON.stringify({ level: data.level, value: true }));\r\n          // props.history.push('/')\r\n        })\r\n        .catch(error => {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: \"Enter Correct Login details\",\r\n            showSnackBar: true,\r\n          })\r\n        });\r\n    }\r\n    else {\r\n      setSnackBarMessage({\r\n        severity: \"error\",\r\n        message: \"Enter Correct Login details\",\r\n        showSnackBar: true,\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleMClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleMClose} severity=\"success\">\r\n          {message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <Paper className={styles.SignInPaper} elevation={5}>\r\n        <div>\r\n          <img src='/netra-logo-removebg.png'  height={300} />\r\n          <div className={styles.netra}>NETRA</div>\r\n        </div>\r\n        <div style={{ textAlign: 'center' }}>\r\n          {/* <h5 style={{ margin: 0 }}>Welcome</h5> */}\r\n          <Typography variant='h5'>Welcome</Typography>\r\n          <Typography variant='h6'>Sign in to your account</Typography>\r\n        </div>\r\n        <InputBase classes={InputClasses} name='username' value={userName} onChange={(e) => setUserName(e.target.value)} id='username' placeholder='User Name' required />\r\n        <InputBase classes={InputClasses} name='password' id='password' value={password} onChange={(e) => setPassword(e.target.value)} placeholder='Password' type='text' required />\r\n        <Button variant='contained' style={{ backgroundColor: '#1c4199', color: 'white' }} onClick={() => Login()}>Sign In</Button>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '80%' }}>\r\n          {/* <FormControlLabel\r\n            classes={{\r\n              label: InputClasses.label\r\n            }}\r\n            style={{ color: '#1c4199' }}\r\n            control={<Checkbox style={{ color: '#1c4199' }} checked={keepLogin} onChange={() => { setKeepLogin(!keepLogin) }} name=\"checkedA\" />}\r\n            label=\"Keep me logged in\"\r\n          />\r\n         */}\r\n        </div>\r\n        <Link className={styles.links} to=\"/sign_up\">\r\n          Create an Account? Sign Up\r\n        </Link>\r\n      </Paper>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn"]},"metadata":{},"sourceType":"module"}