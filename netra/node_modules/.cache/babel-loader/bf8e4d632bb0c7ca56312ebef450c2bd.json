{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\CDashboard\\\\CDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { InputLabel, TextField, makeStyles, Button } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from \"recharts\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../../store/ApplicationVariable\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    paddingLeft: 10,\n    background: \"#fff\",\n    border: \"1px solid #0263a1\",\n    borderRadius: \"5px\",\n    width: \"320px\",\n    minHeight: \"40px\",\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\"\n  },\n  inputRoot: {\n    width: \"100%\"\n  }\n});\n\nconst CDashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [userSelectionData, setUserSelectionData] = useState([]);\n  const [uniqueEqIds, setUniqueEqIds] = useState([]);\n  const [minMax, setMinMax] = useState([]);\n  const [selectedEqName, setEquipmentName] = useState([]);\n  const [paramOptions, setParamOptions] = useState([]);\n  const [selectedShipName, setShipName] = useState([]);\n  const [selectedParameterName, setParameterName] = useState([]);\n  const [eqDataOption, setEqDataOption] = useState([]);\n  const [paramData, setParamData] = useState([]);\n  const [currMinMax, setCurrMinMax] = useState([]);\n  const [showGraph, setShowGraph] = useState(false);\n  const customSelectData = useSelector(state => state.userSelection.userSelection);\n  useEffect(() => {\n    fetch(\"/cm_dashboard\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      const params = data.parameters;\n      setMinMax([...params]);\n      const userSelection = data.user_selection.data;\n      const eqData = data.user_selection.eqData;\n      const eqIds = data.user_selection.uniq_eq_data;\n      setUniqueEqIds(eqIds);\n      const shipName = userSelection.map(x => x.shipName);\n      setUserSelectionData(eqData);\n      dispatch(userActions.onChangeLoad({\n        filteredData: {\n          shipName: shipName\n        }\n      }));\n    });\n  }, []);\n  useEffect(() => {\n    const filteredArray = minMax.filter(item => selectedEqName.some(selected => item.equipment_id === selected.id));\n    const filteredNames = filteredArray.map(item => item.name);\n    setParamOptions(filteredNames);\n\n    const CMinMax = ele => {\n      const FminMax = filteredArray.filter(i => i.name === ele);\n      setCurrMinMax(prevMinMax => [...prevMinMax, ...FminMax]);\n    };\n\n    selectedParameterName.forEach(e => CMinMax(e));\n  }, [selectedEqName]);\n\n  const onSubmitHandler = () => {\n    fetch(\"/fetch_cmdata\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        EquipmentIds: selectedEqName.map(x => x.id),\n        ParameterNames: selectedParameterName.map(x => x)\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      setParamData(data);\n      setShowGraph(true);\n    }).catch(error => {\n      setSnackBarMessage({\n        severity: \"error\",\n        message: \"Some Error Occurred. \" + error,\n        showSnackBar: true\n      });\n    });\n  };\n\n  const changeShip = e => {\n    const filteredEqData = userSelectionData.filter(x => x.shipName === e.target.value).map(x => {\n      const id = uniqueEqIds.find(y => y.name === x.equipmentName);\n      return id;\n    });\n    setEqDataOption(filteredEqData);\n    setShipName(e.target.value);\n  };\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systems\",\n      showSnackBar: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mprofile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: styles.inputLabel,\n            children: \"Ship Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            fields: customSelectData[\"shipName\"],\n            onChange: changeShip,\n            value: selectedShipName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: styles.inputLabel,\n            children: \"Equipment Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: eqDataOption,\n            getOptionLabel: option => option.name,\n            value: selectedEqName,\n            onChange: (e, value) => setEquipmentName(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: styles.inputLabel,\n            children: \"Select Parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            classes: classes,\n            multiple: true,\n            id: \"tags-standard\",\n            options: paramOptions,\n            value: selectedParameterName,\n            onChange: (e, value) => setParameterName(value),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              InputProps: { ...params.InputProps,\n                disableUnderline: true\n              },\n              variant: \"standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onSubmitHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), showGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.midSection,\n        children: paramData.map(param => {\n          var _param$data$value, _param$data, _param$data$value2, _param$data2;\n\n          if (param.data.length === 0) {\n            return null;\n          }\n\n          const crossingThreshold = ((_param$data$value = (_param$data = param.data[param.data.length - 1]) === null || _param$data === void 0 ? void 0 : _param$data.value) !== null && _param$data$value !== void 0 ? _param$data$value : 0) < param.minThreshold || ((_param$data$value2 = (_param$data2 = param.data[param.data.length - 1]) === null || _param$data2 === void 0 ? void 0 : _param$data2.value) !== null && _param$data$value2 !== void 0 ? _param$data$value2 : 0) > param.maxThreshold;\n          const matchingMinMax = currMinMax === null || currMinMax === void 0 ? void 0 : currMinMax.find(item => item.name === param.parameterName);\n          const minThreshold = parseInt(matchingMinMax === null || matchingMinMax === void 0 ? void 0 : matchingMinMax.min_value);\n          const maxThreshold = parseInt(matchingMinMax === null || matchingMinMax === void 0 ? void 0 : matchingMinMax.max_value);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rchart,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [crossingThreshold, param.equipmentName, \" \", param.componentName, param.parameterName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n                width: 550,\n                height: 300,\n                data: param.data,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"date\",\n                  tick: false,\n                  label: {\n                    value: \"Date\",\n                    position: \"insideBottom\",\n                    dy: 10\n                  },\n                  height: 45\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [0, 100],\n                  label: {\n                    value: `${param.parameterName} Data`,\n                    angle: -90,\n                    position: \"center\",\n                    paddingRight: \"20px\",\n                    dy: -10\n                  },\n                  width: 80\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  horizontal: false,\n                  vertical: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"value\",\n                  stroke: crossingThreshold ? \"red\" : \"green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                  y: minThreshold,\n                  stroke: \"gray\",\n                  strokeDasharray: \"6 6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                  y: maxThreshold,\n                  stroke: \"gray\",\n                  strokeDasharray: \"6 6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CDashboard, \"QC3u6YGmr5c8oOunW0Y68xedjBA=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = CDashboard;\nexport default CDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CDashboard\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/CDashboard/CDashboard.js"],"names":["React","useEffect","useState","InputLabel","TextField","makeStyles","Button","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","Navigation","CustomSelect","Autocomplete","useDispatch","useSelector","userActions","CustomizedSnackbars","useStyles","root","paddingLeft","background","border","borderRadius","width","minHeight","boxShadow","inputRoot","CDashboard","dispatch","classes","userSelectionData","setUserSelectionData","uniqueEqIds","setUniqueEqIds","minMax","setMinMax","selectedEqName","setEquipmentName","paramOptions","setParamOptions","selectedShipName","setShipName","selectedParameterName","setParameterName","eqDataOption","setEqDataOption","paramData","setParamData","currMinMax","setCurrMinMax","showGraph","setShowGraph","customSelectData","state","userSelection","fetch","method","headers","Accept","then","res","json","data","params","parameters","user_selection","eqData","eqIds","uniq_eq_data","shipName","map","x","onChangeLoad","filteredData","filteredArray","filter","item","some","selected","equipment_id","id","filteredNames","name","CMinMax","ele","FminMax","i","prevMinMax","forEach","e","onSubmitHandler","body","JSON","stringify","EquipmentIds","ParameterNames","catch","error","setSnackBarMessage","severity","message","showSnackBar","changeShip","filteredEqData","target","value","find","y","equipmentName","SnackBarMessage","onHandleSnackClose","styles","mprofile","inputLabel","option","InputProps","disableUnderline","midSection","param","length","crossingThreshold","minThreshold","maxThreshold","matchingMinMax","parameterName","parseInt","min_value","max_value","rchart","content","componentName","position","dy","angle","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n} from \"recharts\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingLeft: 10,\r\n    background: \"#fff\",\r\n    border: \"1px solid #0263a1\",\r\n    borderRadius: \"5px\",\r\n    width: \"320px\",\r\n    minHeight: \"40px\",\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n  inputRoot: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst CDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [userSelectionData, setUserSelectionData] = useState([]);\r\n  const [uniqueEqIds, setUniqueEqIds] = useState([]);\r\n  const [minMax, setMinMax] = useState([]);\r\n  const [selectedEqName, setEquipmentName] = useState([]);\r\n  const [paramOptions, setParamOptions] = useState([]);\r\n  const [selectedShipName, setShipName] = useState([]);\r\n  const [selectedParameterName, setParameterName] = useState([]);\r\n  const [eqDataOption, setEqDataOption] = useState([]);\r\n  const [paramData, setParamData] = useState([]);\r\n  const [currMinMax, setCurrMinMax] = useState([]);\r\n  const [showGraph, setShowGraph] = useState(false);\r\n\r\n  const customSelectData = useSelector(\r\n    (state) => state.userSelection.userSelection\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(\"/cm_dashboard\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const params = data.parameters;\r\n        setMinMax([...params]);\r\n        const userSelection = data.user_selection.data;\r\n        const eqData = data.user_selection.eqData;\r\n        const eqIds = data.user_selection.uniq_eq_data;\r\n        setUniqueEqIds(eqIds);\r\n        const shipName = userSelection.map((x) => x.shipName);\r\n        setUserSelectionData(eqData);\r\n        dispatch(\r\n          userActions.onChangeLoad({ filteredData: { shipName: shipName } })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filteredArray = minMax.filter((item) =>\r\n      selectedEqName.some((selected) => item.equipment_id === selected.id)\r\n    );\r\n\r\n    const filteredNames = filteredArray.map((item) => item.name);\r\n    setParamOptions(filteredNames);\r\n\r\n    const CMinMax = (ele) => {\r\n      const FminMax = filteredArray.filter((i) => i.name === ele);\r\n      setCurrMinMax((prevMinMax) => [...prevMinMax, ...FminMax]);\r\n    };\r\n\r\n    selectedParameterName.forEach((e) => CMinMax(e));\r\n  }, [selectedEqName]);\r\n\r\n  const onSubmitHandler = () => {\r\n    fetch(\"/fetch_cmdata\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        EquipmentIds: selectedEqName.map((x) => x.id),\r\n        ParameterNames: selectedParameterName.map((x) => x),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setParamData(data);\r\n        setShowGraph(true);\r\n      })\r\n      .catch((error) => {\r\n        setSnackBarMessage({\r\n          severity: \"error\",\r\n          message: \"Some Error Occurred. \" + error,\r\n          showSnackBar: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeShip = (e) => {\r\n    const filteredEqData = userSelectionData.filter(\r\n      (x) => x.shipName === e.target.value\r\n    ).map((x) => {\r\n      const id = uniqueEqIds.find((y) => y.name === x.equipmentName);\r\n      return id;\r\n    });\r\n\r\n    setEqDataOption(filteredEqData);\r\n    setShipName(e.target.value);\r\n  };\r\n\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systems\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.mprofile}>\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel className={styles.inputLabel}>Ship Name</InputLabel>\r\n            <CustomSelect\r\n              fields={customSelectData[\"shipName\"]}\r\n              onChange={changeShip}\r\n              value={selectedShipName}\r\n            />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel className={styles.inputLabel}>\r\n              Equipment Name\r\n            </InputLabel>\r\n            <Autocomplete\r\n              classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={eqDataOption}\r\n              getOptionLabel={(option) => option.name}\r\n              value={selectedEqName}\r\n              onChange={(e, value) => setEquipmentName(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{ ...params.InputProps, disableUnderline: true }}\r\n                  variant=\"standard\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div style={{ width: \"300px\" }}>\r\n            <InputLabel className={styles.inputLabel}>\r\n              Select Parameter\r\n            </InputLabel>\r\n            <Autocomplete\r\n              classes={classes}\r\n              multiple\r\n              id=\"tags-standard\"\r\n              options={paramOptions}\r\n              value={selectedParameterName}\r\n              onChange={(e, value) => setParameterName(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  InputProps={{ ...params.InputProps, disableUnderline: true }}\r\n                  variant=\"standard\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={onSubmitHandler}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n\r\n        {showGraph && (\r\n          <div className={styles.midSection}>\r\n            {paramData.map((param) => {\r\n              if (param.data.length === 0) {\r\n                return null;\r\n              }\r\n\r\n              const crossingThreshold =\r\n                (param.data[param.data.length - 1]?.value ?? 0) <\r\n                  param.minThreshold ||\r\n                (param.data[param.data.length - 1]?.value ?? 0) >\r\n                  param.maxThreshold;\r\n\r\n              const matchingMinMax = currMinMax?.find(\r\n                (item) => item.name === param.parameterName\r\n              );\r\n\r\n              const minThreshold = parseInt(matchingMinMax?.min_value);\r\n              const maxThreshold = parseInt(matchingMinMax?.max_value);\r\n\r\n              return (\r\n                <div className={styles.rchart}>\r\n                  <div className={styles.content}>\r\n                    <div>\r\n                      {crossingThreshold}\r\n                      {param.equipmentName} {param.componentName}\r\n                      {param.parameterName}\r\n                    </div>\r\n                    <LineChart width={550} height={300} data={param.data}>\r\n                      <XAxis\r\n                        dataKey=\"date\"\r\n                        tick={false}\r\n                        label={{\r\n                          value: \"Date\",\r\n                          position: \"insideBottom\",\r\n                          dy: 10,\r\n                        }}\r\n                        height={45}\r\n                      />\r\n                      <YAxis\r\n                        domain={[0, 100]}\r\n                        label={{\r\n                          value: `${param.parameterName} Data`,\r\n                          angle: -90,\r\n                          position: \"center\",\r\n                          paddingRight: \"20px\",\r\n                          dy: -10,\r\n                        }}\r\n                        width={80}\r\n                      />\r\n                      <CartesianGrid horizontal={false} vertical={false} />\r\n                      <Line\r\n                        type=\"monotone\"\r\n                        dataKey=\"value\"\r\n                        stroke={crossingThreshold ? \"red\" : \"green\"}\r\n                      />\r\n                      <ReferenceLine\r\n                        y={minThreshold}\r\n                        stroke=\"gray\"\r\n                        strokeDasharray=\"6 6\"\r\n                      />\r\n                      <ReferenceLine\r\n                        y={maxThreshold}\r\n                        stroke=\"gray\"\r\n                        strokeDasharray=\"6 6\"\r\n                      />\r\n                      <Tooltip />\r\n                    </LineChart>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CDashboard;\r\n"]},"metadata":{},"sourceType":"module"}