{"ast":null,"code":"var _jsxFileName = \"D:\\\\NETRA -P\\\\Netra\\\\netra\\\\src\\\\pages\\\\Data Manager\\\\importData\\\\importData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"../../../ui/Table/DataManagerTable\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport LensIcon from \"@material-ui/icons/Lens\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"../DataManager.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImportData = props => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const rows = props.childList.map(x => {\n    return {\n      id: x.id,\n      ComponentName: x.name,\n      ScaleParameter: \"\",\n      ShapeParameter: \"\"\n    };\n  });\n  const ImportColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ComponentName\",\n    headerName: \"Component Name\",\n    minWidth: 200,\n    checkboxSelection: true,\n    editable: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ScaleParameter\",\n    headerName: \"Scale Parameter\",\n    minWidth: 200,\n    type: \"number\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ShapeParameter\",\n    headerName: \"Shape Parameter\",\n    minWidth: 200,\n    type: \"number\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)];\n\n  const updateFinalRowData = allRows => {\n    debugger;\n    props.tableUpdate(allRows, \"import_replacable\");\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: ImportColumns,\n      setGrid: setGridApi,\n      gridApi: gridApi,\n      rowData: rows,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableFooter,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => deleteRows(),\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImportData, \"52KTSlqH3oFDsv6ulmcAI03wzbw=\");\n\n_c = ImportData;\nexport default ImportData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportData\");","map":{"version":3,"sources":["D:/NETRA -P/Netra/netra/src/pages/Data Manager/importData/importData.js"],"names":["React","useState","Table","AgGridColumn","LensIcon","Button","DeleteIcon","styles","ImportData","props","gridApi","setGridApi","rows","childList","map","x","id","ComponentName","name","ScaleParameter","ShapeParameter","ImportColumns","updateFinalRowData","allRows","tableUpdate","deleteRows","selectedRows","getSelectedRows","applyTransaction","remove","allRowData","forEachNode","node","push","data","tableFooter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst ImportData = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const rows = props.childList.map((x) => {\r\n    return {\r\n      id: x.id,\r\n      ComponentName: x.name,\r\n      ScaleParameter: \"\",\r\n      ShapeParameter: \"\",\r\n    };\r\n  });\r\n  const ImportColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      minWidth={200}\r\n      checkboxSelection={true}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ScaleParameter\"\r\n      headerName=\"Scale Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ShapeParameter\"\r\n      headerName=\"Shape Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger;\r\n    props.tableUpdate(allRows, \"import_replacable\");\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rows}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportData;\r\n"]},"metadata":{},"sourceType":"module"}