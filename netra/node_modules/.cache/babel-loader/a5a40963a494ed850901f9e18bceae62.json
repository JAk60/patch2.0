{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\RCM\\\\CreateRCM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from '../../../components/navigation/Navigation';\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\nimport UserSelection from '../../../ui/userSelection/userSelection';\nimport { Button, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from '../../../ui/Form/AutoSelect';\nimport { Route } from 'react-router'; // import AssignType from './AssignType';\n\nimport AssignType from '../CreateMaintenance/AssignType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateRCM = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  let fData = useSelector(state => state.treeData.treeData); //console.log(fData);\n\n  const onLoadTreeStructure = () => {\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      debugger;\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD,\n        failureModes: failureModes\n      }));\n    });\n  };\n\n  const [selectedComponent, setComponent] = useState(null);\n\n  const selectOnChange = (e, value) => {\n    setComponent(value);\n  };\n\n  const SaveAssemplyHandler = () => {\n    alert(\"Hello\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.btn,\n        onClick: onLoadTreeStructure,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tree,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.treeChild,\n          children: /*#__PURE__*/_jsxDEV(TreeComponent, {\n            height: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectComponent,\n          children: [\"Select Assemblies to be included for RCM Analysis :\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n            multiple: multiple,\n            fields: fData,\n            onChange: selectOnChange,\n            value: selectedComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.nextbtn,\n          onClick: SaveAssemplyHandler,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateRCM, \"DBu+x08pf3fzrQlpEq3mwcoga0A=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CreateRCM;\nexport default CreateRCM;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRCM\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Maintenance Allocation/RCM/CreateRCM.js"],"names":["React","useState","Navigation","styles","UserSelection","Button","RadioGroup","FormControlLabel","Radio","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","Route","AssignType","CreateRCM","props","dispatch","currentSelection","state","userSelection","fData","treeData","onLoadTreeStructure","fetch","method","body","JSON","stringify","system","ship_name","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","selectedComponent","setComponent","selectOnChange","e","value","SaveAssemplyHandler","alert","btn","content","tree","treeChild","rightSection","selectComponent","multiple","nextbtn"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navigation from '../../../components/navigation/Navigation';\r\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\r\nimport UserSelection from '../../../ui/userSelection/userSelection'\r\nimport { Button,RadioGroup,FormControlLabel,Radio } from '@material-ui/core';\r\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from '../../../ui/Form/AutoSelect';\r\nimport { Route } from 'react-router';\r\n// import AssignType from './AssignType';\r\nimport AssignType from '../CreateMaintenance/AssignType';\r\n\r\n\r\n\r\nconst CreateRCM=(props)=> {\r\n    const dispatch = useDispatch();\r\n    const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      );\r\n    let fData = useSelector((state) => state.treeData.treeData);\r\n    //console.log(fData);\r\n    const onLoadTreeStructure = () => {\r\n        fetch(\"/fetch_system\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            system: currentSelection[\"equipmentName\"],\r\n            ship_name: currentSelection[\"shipName\"],\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            let treeD = d[\"treeD\"];\r\n            let failureModes = d[\"failureMode\"];\r\n            debugger;\r\n            dispatch(\r\n              treeDataActions.setTreeData({\r\n                treeData: treeD,\r\n                failureModes: failureModes,\r\n              })\r\n            );\r\n          });\r\n      };\r\n\r\n      const[selectedComponent,setComponent]=useState(null)\r\n      const selectOnChange=(e,value)=>{\r\n        setComponent(value)\r\n      }\r\n\r\n    const SaveAssemplyHandler = () => {\r\n        alert(\"Hello\")\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Navigation/>\r\n      <div className={styles.userSelection}>\r\n          <UserSelection/>\r\n          <Button className={styles.btn} onClick={onLoadTreeStructure} variant='contained' color='primary'>Submit</Button>\r\n          {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          </Route> */}\r\n      </div>\r\n      {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          \r\n      </Route> */}\r\n      <div className={styles.content}>\r\n            <div className={styles.tree}>\r\n              <div className={styles.treeChild}>\r\n                {/* <FullscreenIcon style={{ float: \"right\", marginRight: \"25px\" }} /> */}\r\n                <TreeComponent height='600px'></TreeComponent>\r\n                {/* <div></div> */}\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightSection}>\r\n              <div className={styles.selectComponent}>\r\n                Select Assemblies to be included for RCM Analysis :\r\n                <AutoSelect\r\n                    multiple={multiple}\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              \r\n              <Button className={styles.nextbtn} onClick={SaveAssemplyHandler} variant='contained' color='primary'>Save</Button>\r\n            </div>\r\n          </div>\r\n      {/* <Route exact path='/maintenance_allocation/create/assignMaintenance'>\r\n          <AssignType selectedComponent={selectedComponent}/>\r\n      </Route> */}\r\n    </>\r\n    );\r\n  }\r\n  export default CreateRCM;"]},"metadata":{},"sourceType":"module"}