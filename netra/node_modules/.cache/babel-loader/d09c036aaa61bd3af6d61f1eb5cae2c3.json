{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Data Manager\\\\historicalData\\\\oemExpert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Table from \"../../../ui/Table/DataManagerTable\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"../DataManager.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: \"10px\"\n  },\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(40),\n      height: theme.spacing(5),\n      background: \"#048ee7\",\n      color: \"white\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  },\n  row: {\n    display: \"flex\",\n    width: \"98%\",\n    marginLeft: \"1%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  value: {\n    marginLeft: \"50%\"\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: \"20px\"\n  }\n}));\n\nfunction OEMExpert(props) {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const rows = props.childList.map(x => {\n    return {\n      name: x.name,\n      id: x.id\n    };\n  });\n  const [lifeEstimateValue, setLifeEstimateValue] = useState(\"L\");\n  const [columnDefs, setColdefs] = useState([/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"ComponentName\",\n    headerName: \"Component Name\",\n    editable: true,\n    width: 200,\n    checkboxSelection: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: rows.map(x => x.name)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MostLikely\",\n    headerName: \"Most Likely Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MaxLife\",\n    headerName: \"Maximum Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"MinLife\",\n    headerName: \"Minimum Life\",\n    width: 150,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this),\n  /*#__PURE__*/\n  // <AgGridColumn\n  //   field=\"Replacements\"\n  //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\n  //   editable={true}\n  // />,\n  _jsxDEV(AgGridColumn, {\n    field: \"componentFailure\",\n    headerName: \"Number of Component seen withour Failure\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"time_wo_failure\",\n    headerName: \"Total time without Failure\",\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this)]);\n  const classes = useStyles();\n  const [rowState, setRows] = useState([]);\n\n  const updateFinalRowData = allRows => {\n    props.tableUpdate(allRows, \"oemE\");\n  };\n\n  const AddRow = () => {\n    if (columnDefs.length >= 6) {\n      const lifeEstimateName = columnDefs[1].props.field;\n      const defaultRow = [{\n        id: rows[0].id,\n        ComponentName: rows[0].name,\n        MostLikely: \"\",\n        MaxLife: \"\",\n        MinLife: \"\",\n        componentFailure: \"\",\n        time_wo_failure: \"\" // Replacements: \"1\",\n\n      }];\n      defaultRow[0][lifeEstimateName] = \"\";\n      gridApi.applyTransaction({\n        add: defaultRow\n      });\n      const allRowData = [];\n      gridApi.forEachNode(node => allRowData.push(node.data));\n      updateFinalRowData(allRowData);\n    } else {\n      alert(\"Please Add Life Estimate!!\");\n    }\n  };\n\n  const deleteRows = () => {\n    const selectedRows = gridApi.getSelectedRows();\n    gridApi.applyTransaction({\n      remove: selectedRows\n    });\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    updateFinalRowData(allRowData);\n  };\n\n  const submitLifeEstimates = () => {\n    debugger;\n    const coldefs = [...columnDefs];\n\n    if (columnDefs[1].props.field[0] === \"L\") {\n      if (!coldefs.some(e => e.props.headerName === lifeEstimateValue)) {\n        const item = /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: lifeEstimateValue,\n          headerName: lifeEstimateValue,\n          editable: true,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this);\n\n        console.log(coldefs);\n        coldefs.splice(1, 1, item);\n        setColdefs(coldefs);\n      }\n    } else {\n      if (!coldefs.some(e => e.props.headerName === lifeEstimateValue)) {\n        const item = /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: lifeEstimateValue,\n          headerName: lifeEstimateValue,\n          editable: true,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this);\n\n        console.log(coldefs);\n        coldefs.splice(1, 0, item);\n        setColdefs(coldefs);\n      }\n    }\n  };\n\n  const onChangeLifeEsti = e => {\n    setLifeEstimateValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          variant: \"outlined\",\n          children: \"OEM + Expert Judgement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"caption\",\n          children: \"Specify the Available Life Estimates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.input,\n          children: /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            value: lifeEstimateValue,\n            onChange: onChangeLifeEsti\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: submitLifeEstimates,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: columnDefs,\n      setGrid: setGridApi,\n      gridApi: gridApi,\n      rowData: rowState,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableFooter,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => AddRow(),\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 22\n        }, this),\n        color: \"secondary\",\n        onClick: () => deleteRows(),\n        children: \"Delete Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OEMExpert, \"1S347vZZIZke2Qcohhb5JEPhYKg=\", false, function () {\n  return [useStyles];\n});\n\n_c = OEMExpert;\nexport default OEMExpert;\n\nvar _c;\n\n$RefreshReg$(_c, \"OEMExpert\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Data Manager/historicalData/oemExpert.js"],"names":["React","useRef","useState","Table","AgGridColumn","Paper","makeStyles","Button","Typography","CustomTextInput","AddIcon","IconButton","DeleteIcon","styles","useStyles","theme","root","marginTop","paper","display","flexWrap","margin","spacing","width","height","background","color","alignItems","justifyContent","row","marginLeft","flexDirection","value","input","marginBottom","OEMExpert","props","gridApi","setGridApi","rows","childList","map","x","name","id","lifeEstimateValue","setLifeEstimateValue","columnDefs","setColdefs","values","classes","rowState","setRows","updateFinalRowData","allRows","tableUpdate","AddRow","length","lifeEstimateName","field","defaultRow","ComponentName","MostLikely","MaxLife","MinLife","componentFailure","time_wo_failure","applyTransaction","add","allRowData","forEachNode","node","push","data","alert","deleteRows","selectedRows","getSelectedRows","remove","submitLifeEstimates","coldefs","some","e","headerName","item","console","log","splice","onChangeLifeEsti","target","tableFooter"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"10px\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(40),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    width: \"98%\",\r\n    marginLeft: \"1%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  value: {\r\n    marginLeft: \"50%\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction OEMExpert(props) {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [lifeEstimateValue, setLifeEstimateValue] = useState(\"L\");\r\n  const [columnDefs, setColdefs] = useState([\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      width={200}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MostLikely\"\r\n      headerName=\"Most Likely Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaxLife\"\r\n      headerName=\"Maximum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MinLife\"\r\n      headerName=\"Minimum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Replacements\"\r\n    //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"componentFailure\"\r\n      headerName=\"Number of Component seen withour Failure\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"time_wo_failure\"\r\n      headerName=\"Total time without Failure\"\r\n      editable={true}\r\n    />,\r\n  ]);\r\n  const classes = useStyles();\r\n  const [rowState, setRows] = useState([]);\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"oemE\");\r\n  };\r\n  const AddRow = () => {\r\n    if (columnDefs.length >= 6) {\r\n      const lifeEstimateName = columnDefs[1].props.field;\r\n      const defaultRow = [\r\n        {\r\n          id: rows[0].id,\r\n          ComponentName: rows[0].name,\r\n          MostLikely: \"\",\r\n          MaxLife: \"\",\r\n          MinLife: \"\",\r\n          componentFailure: \"\",\r\n          time_wo_failure: \"\",\r\n          // Replacements: \"1\",\r\n        },\r\n      ];\r\n      defaultRow[0][lifeEstimateName] = \"\";\r\n      gridApi.applyTransaction({\r\n        add: defaultRow,\r\n      });\r\n      const allRowData = [];\r\n      gridApi.forEachNode((node) => allRowData.push(node.data));\r\n      updateFinalRowData(allRowData);\r\n    } else {\r\n      alert(\"Please Add Life Estimate!!\");\r\n    }\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const submitLifeEstimates = () => {\r\n    debugger;\r\n    const coldefs = [...columnDefs];\r\n    if (columnDefs[1].props.field[0] === \"L\") {\r\n      if (!coldefs.some((e) => e.props.headerName === lifeEstimateValue)) {\r\n        const item = (\r\n          <AgGridColumn\r\n            field={lifeEstimateValue}\r\n            headerName={lifeEstimateValue}\r\n            editable={true}\r\n            width={50}\r\n          />\r\n        );\r\n        console.log(coldefs);\r\n        coldefs.splice(1, 1, item);\r\n        setColdefs(coldefs);\r\n      }\r\n    } else {\r\n      if (!coldefs.some((e) => e.props.headerName === lifeEstimateValue)) {\r\n        const item = (\r\n          <AgGridColumn\r\n            field={lifeEstimateValue}\r\n            headerName={lifeEstimateValue}\r\n            editable={true}\r\n            width={50}\r\n          />\r\n        );\r\n        console.log(coldefs);\r\n        coldefs.splice(1, 0, item);\r\n        setColdefs(coldefs);\r\n      }\r\n    }\r\n  };\r\n  const onChangeLifeEsti = (e) => {\r\n    setLifeEstimateValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.row}>\r\n        <div className={classes.paper}>\r\n          <Paper elevation={3} variant=\"outlined\">\r\n            OEM + Expert Judgement\r\n          </Paper>\r\n        </div>\r\n        <div className={classes.value}>\r\n          <Typography align=\"center\" variant=\"caption\">\r\n            Specify the Available Life Estimates\r\n          </Typography>\r\n          <div className={classes.input}>\r\n            <CustomTextInput\r\n              value={lifeEstimateValue}\r\n              onChange={onChangeLifeEsti}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={submitLifeEstimates}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        columnDefs={columnDefs}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OEMExpert;\r\n"]},"metadata":{},"sourceType":"module"}