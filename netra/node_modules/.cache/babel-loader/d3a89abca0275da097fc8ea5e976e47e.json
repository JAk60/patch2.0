{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netraaaa\\\\Netra\\\\netra\\\\src\\\\pages\\\\Reliability Dashboard\\\\BarGraph.js\";\nimport React from \"react\";\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Cell, Legend, Tooltip } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst clickEvent = id => {\n  alert(\"You have clicked \" + id);\n};\n\nconst BarGraph = ({\n  data\n}) => {\n  let xKey = \"name\";\n  let yKeys = [\"Reliability\"];\n\n  if (data[0]) {\n    xKey = \"name\";\n    yKeys = Object.keys(data[0]);\n    yKeys = yKeys.filter(item => item !== \"name\");\n  }\n\n  let colors = ['#86a0ff', '#364d9d', '#e4ebfe', '#374c93'];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data,\n      layout: \"vertical\",\n      margin: {\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\",\n        domain: [0, 100],\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        yAxisId: 0,\n        dataKey: xKey,\n        type: \"category\",\n        tickLine: false,\n        tick: {\n          fontSize: 10\n        },\n        interval: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), yKeys && yKeys.map((yKey, idx) => /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: yKey,\n        minPointSize: 2,\n        barSize: 30,\n        radius: [0, 3, 3, 0],\n        fill: colors[idx],\n        children: data.map((d, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n          onClick: () => clickEvent(idx)\n        }, d[xKey], false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, yKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BarGraph;\nexport default BarGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/Reliability Dashboard/BarGraph.js"],"names":["React","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Cell","Legend","Tooltip","clickEvent","id","alert","BarGraph","data","xKey","yKeys","Object","keys","filter","item","colors","left","fontSize","map","yKey","idx","d"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,OARF,QASO,UATP;;;AAWA,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBC,EAAAA,KAAK,CAAC,sBAAsBD,EAAvB,CAAL;AACD,CAFD;;AAIA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,MAAIC,IAAI,GAAG,MAAX;AACA,MAAIC,KAAK,GAAG,CAAC,aAAD,CAAZ;;AACA,MAAIF,IAAI,CAAC,CAAD,CAAR,EAAa;AACXC,IAAAA,IAAI,GAAG,MAAP;AACAC,IAAAA,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAAC,CAAD,CAAhB,CAAR;AACAE,IAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAK,MAA9B,CAAR;AACD;;AACD,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAb;AACA,sBACE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE,MAA5B;AAAoC,IAAA,MAAM,EAAE,MAA5C;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEP,IAAhB;AAAsB,MAAA,MAAM,EAAC,UAA7B;AAAwC,MAAA,MAAM,EAAE;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAhD;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAA7B;AAAuC,QAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,CADX;AAEE,QAAA,OAAO,EAAER,IAFX;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAE,KAJZ;AAKE,QAAA,IAAI,EAAE;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SALR;AAME,QAAA,QAAQ,EAAE;AANZ;AAAA;AAAA;AAAA;AAAA,cAHF,EAWGP,KAAK,IAAIA,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAClB,QAAC,GAAD;AAAgB,QAAA,OAAO,EAAED,IAAzB;AAA+B,QAAA,YAAY,EAAE,CAA7C;AAAgD,QAAA,OAAO,EAAE,EAAzD;AAA6D,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArE;AAAmF,QAAA,IAAI,EAAEJ,MAAM,CAACK,GAAD,CAA/F;AAAA,kBACGZ,IAAI,CAACU,GAAL,CAAS,CAACG,CAAD,EAAID,GAAJ,kBACR,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMhB,UAAU,CAACgB,GAAD;AAF3B,WACOC,CAAC,CAACZ,IAAD,CADR;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAAUU,IAAV;AAAA;AAAA;AAAA;AAAA,cADQ,CAXZ,eAqBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApCD;;KAAMZ,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Cell,\r\n  Legend,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nconst clickEvent = (id) => {\r\n  alert(\"You have clicked \" + id);\r\n};\r\n\r\nconst BarGraph = ({ data }) => {\r\n  let xKey = \"name\";\r\n  let yKeys = [\"Reliability\"];\r\n  if (data[0]) {\r\n    xKey = \"name\";\r\n    yKeys = Object.keys(data[0]);\r\n    yKeys = yKeys.filter(item => item !== \"name\");\r\n  }\r\n  let colors = ['#86a0ff', '#364d9d', '#e4ebfe', '#374c93'];\r\n  return (\r\n    <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\r\n      <BarChart data={data} layout=\"vertical\" margin={{ left: 20 }}>\r\n        <Tooltip />\r\n        <XAxis type=\"number\" domain={[0, 100]} tick={{ fontSize: 10 }} />\r\n        <YAxis\r\n          yAxisId={0}\r\n          dataKey={xKey}\r\n          type=\"category\"\r\n          tickLine={false}\r\n          tick={{ fontSize: 10 }}\r\n          interval={0}\r\n        />\r\n        {yKeys && yKeys.map((yKey, idx) => (\r\n          <Bar key={yKey} dataKey={yKey} minPointSize={2} barSize={30} radius={[0, 3, 3, 0]} fill={colors[idx]}>\r\n            {data.map((d, idx) => (\r\n              <Cell\r\n                key={d[xKey]}\r\n                onClick={() => clickEvent(idx)}\r\n              />\r\n            ))}\r\n          </Bar>\r\n        ))}\r\n        <Legend />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n"]},"metadata":{},"sourceType":"module"}