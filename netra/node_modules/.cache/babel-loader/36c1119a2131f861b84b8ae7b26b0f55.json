{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netraaaa\\\\Netra\\\\netra\\\\src\\\\pages\\\\dragNdrop\\\\Flow\\\\flow.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactFlow, { addEdge, removeElements, Background, ReactFlowProvider, Controls, isNode } from \"react-flow-renderer\";\nimport CustomNode from \"../CustomNode/CustomNode\";\nimport dagre from \"dagre\";\nimport { elementActions } from \"../../../store/elements\";\nimport customCSSClasses from \"./flow.module.css\";\nimport \"./flow.css\";\nimport CustomContextMenu from \"../ContextMenu/contextMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  systemNode: CustomNode\n};\nconst styles = {\n  background: \"#EEEEEE\",\n  width: \"100%\",\n  height: \"100%\"\n};\nconst dagreGraph = new dagre.graphlib.Graph();\ndagreGraph.setDefaultEdgeLabel(() => ({})); // In order to keep this example simple the node width and height are hardcoded.\n// In a real world app you would use the correct width and height values of\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\n\nconst nodeWidth = 172;\nconst nodeHeight = 36;\n\nconst getLayoutedElements = (elements, direction = \"TB\") => {\n  debugger;\n  const isHorizontal = direction === \"LR\";\n  dagreGraph.setGraph({\n    rankdir: direction\n  });\n  elements.forEach(el => {\n    if (isNode(el)) {\n      dagreGraph.setNode(el.id, {\n        width: nodeWidth,\n        height: nodeHeight\n      });\n    } else {\n      dagreGraph.setEdge(el.source, el.target);\n    }\n  });\n  dagre.layout(dagreGraph);\n  return elements.map(el => {\n    if (isNode(el)) {\n      const nodeWithPosition = dagreGraph.node(el.id);\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\"; // unfortunately we need this little hack to pass a slightly different position\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n\n      el.position = {\n        x: nodeWithPosition.x,\n        y: nodeWithPosition.y\n      };\n    }\n\n    return el;\n  });\n};\n\nconst Flow = ({\n  reactFlowInstance,\n  reactFlowWrapper,\n  setReactFlowInstance\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const ielements = useSelector(state => state.elements.elements);\n\n  const onElementsRemove = elementsToRemove => {\n    let ele = removeElements(elementsToRemove, ielements);\n    dispatch(elementActions.removeElement(ele));\n  };\n\n  const onConnect = params => {\n    params.type = \"smoothstep\";\n    params.id = uuid();\n    params.dtype = \"edge\";\n    let ele = addEdge(params, ielements);\n    dispatch(elementActions.onConnect(ele));\n  };\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onElementClick = (event, node) => {\n    dispatch(elementActions.setNodeDetail(node));\n  };\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onLayout = useCallback(direction => {\n    let elements = JSON.parse(JSON.stringify(ielements));\n    const layoutedElements = getLayoutedElements(elements, direction);\n    dispatch(elementActions.layoutChange({\n      elements: layoutedElements\n    }));\n  }, [ielements]);\n\n  const onContextMenu = e => {\n    e.preventDefault();\n    return /*#__PURE__*/_jsxDEV(ContextMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  };\n\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n\n    if (type === \"systemNode\") {\n      let isRootNodeExist = ielements.filter(x => x.type === \"systemNode\").length > 0;\n\n      if (isRootNodeExist) {\n        alert(\"System already exist!!\");\n        return false;\n      }\n    }\n\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    let style = {};\n\n    if (type === \"output\") {\n      style = {\n        border: \"2px solid black\",\n        borderRadius: \"5px\",\n        background: \"#DCFFC0\",\n        borderColor: \"black\"\n      };\n    } else {\n      style = {\n        border: \"2px solid black\",\n        borderRadius: \"5px\",\n        background: \"#FFFBDA\"\n      };\n    }\n\n    const newNode = {\n      id: uuid(),\n      type,\n      position,\n      data: {\n        label: `Please Define Name`\n      },\n      dtype: \"node\",\n      style: style\n    };\n    dispatch(elementActions.addElement({\n      ele: newNode\n    }));\n  };\n\n  const onHoverBegin = (event, node) => {\n    // console.log(node)\n    let pc = \"\";\n\n    if (\"parallel_comp\" in node.data) {\n      node.data.parallel_comp.map(component => {\n        return pc += \"<br/>\" + component.label;\n      });\n      document.getElementById('tooltip').innerHTML = `<h4>${node.data.label}</h4>` + \"<p>Parallel Components:\" + pc + \"</p>\";\n      document.getElementById('tooltip').style.opacity = 1;\n    }\n  };\n\n  const duringHover = (event, node) => {\n    //console.log(event);\n    debugger;\n    document.getElementById('tooltip').style.left = event.pageX - 20 + \"px\";\n    document.getElementById('tooltip').style.top = event.pageY - 110 + \"px\";\n  };\n\n  const onHoverEnd = (event, node) => {\n    document.getElementById('tooltip').style.opacity = 0;\n    document.getElementById('tooltip').innerHTML = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"same_unique_identifier\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: customCSSClasses.react_flow_pane_parent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"98vh\",\n              width: \"100%\"\n            },\n            ref: reactFlowWrapper,\n            children: [/*#__PURE__*/_jsxDEV(CustomContextMenu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n              style: styles,\n              elements: ielements,\n              onElementsRemove: onElementsRemove,\n              onConnect: onConnect,\n              onDrop: onDrop,\n              onLoad: onLoad,\n              onDragOver: onDragOver,\n              nodeTypes: nodeTypes,\n              onElementClick: onElementClick,\n              onNodeContextMenu: onContextMenu // onNodeDoubleClick={onDoubleClick}\n              ,\n              onNodeMouseEnter: onHoverBegin,\n              onNodeMouseMove: duringHover,\n              onNodeMouseLeave: onHoverEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"tooltip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `controls + ' ' + ${customCSSClasses.control_div}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: customCSSClasses.horizontal,\n              onClick: () => onLayout(\"LR\"),\n              children: \"Horizontal Layout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: customCSSClasses.vertical,\n              onClick: () => onLayout(\"TB\"),\n              children: \"Vertical Layout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Flow, \"c7qBmSFt9t6WnZHW7FJYxj8G/p4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Flow;\nexport default Flow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/dragNdrop/Flow/flow.js"],"names":["useSelector","useDispatch","React","useCallback","useRef","useState","ContextMenu","ContextMenuTrigger","v4","uuid","ReactFlow","addEdge","removeElements","Background","ReactFlowProvider","Controls","isNode","CustomNode","dagre","elementActions","customCSSClasses","CustomContextMenu","nodeTypes","systemNode","styles","background","width","height","dagreGraph","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","nodeHeight","getLayoutedElements","elements","direction","isHorizontal","setGraph","rankdir","forEach","el","setNode","id","setEdge","source","target","layout","map","nodeWithPosition","node","targetPosition","sourcePosition","position","x","y","Flow","reactFlowInstance","reactFlowWrapper","setReactFlowInstance","dispatch","ielements","state","onElementsRemove","elementsToRemove","ele","removeElement","onConnect","params","type","dtype","onDragOver","event","preventDefault","dataTransfer","dropEffect","onElementClick","setNodeDetail","onLoad","_reactFlowInstance","onLayout","JSON","parse","stringify","layoutedElements","layoutChange","onContextMenu","e","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","isRootNodeExist","filter","length","alert","project","clientX","left","clientY","top","style","border","borderRadius","borderColor","newNode","data","label","addElement","onHoverBegin","pc","parallel_comp","component","document","getElementById","innerHTML","opacity","duringHover","pageX","pageY","onHoverEnd","react_flow_pane_parent","control_div","horizontal","vertical"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useCallback, useRef, useState } from \"react\";\r\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  removeElements,\r\n  Background,\r\n  ReactFlowProvider,\r\n  Controls,\r\n  isNode,\r\n} from \"react-flow-renderer\";\r\nimport CustomNode from \"../CustomNode/CustomNode\";\r\nimport dagre from \"dagre\";\r\nimport { elementActions } from \"../../../store/elements\";\r\nimport customCSSClasses from \"./flow.module.css\";\r\nimport \"./flow.css\";\r\nimport CustomContextMenu from \"../ContextMenu/contextMenu\";\r\n\r\nconst nodeTypes = {\r\n  systemNode: CustomNode,\r\n};\r\n\r\nconst styles = {\r\n  background: \"#EEEEEE\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 172;\r\nconst nodeHeight = 36;\r\n\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n  debugger;\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x,\r\n        y: nodeWithPosition.y,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst Flow = ({reactFlowInstance,reactFlowWrapper,setReactFlowInstance}) => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const ielements = useSelector((state) => state.elements.elements);\r\n  const onElementsRemove = (elementsToRemove) => {\r\n    let ele = removeElements(elementsToRemove, ielements);\r\n    dispatch(elementActions.removeElement(ele));\r\n  };\r\n  const onConnect = (params) => {\r\n    params.type = \"smoothstep\";\r\n    params.id = uuid();\r\n    params.dtype = \"edge\";\r\n    let ele = addEdge(params, ielements);\r\n    dispatch(elementActions.onConnect(ele));\r\n  };\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n  const onElementClick = (event, node) => {\r\n    dispatch(elementActions.setNodeDetail(node));\r\n  };\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onLayout = useCallback(\r\n    (direction) => {\r\n      let elements = JSON.parse(JSON.stringify(ielements));\r\n      const layoutedElements = getLayoutedElements(elements, direction);\r\n      dispatch(elementActions.layoutChange({ elements: layoutedElements }));\r\n    },\r\n    [ielements]\r\n  );\r\n\r\n  const onContextMenu = (e) => {\r\n    e.preventDefault();\r\n    return <ContextMenu></ContextMenu>;\r\n  };\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    if (type === \"systemNode\") {\r\n      let isRootNodeExist =\r\n        ielements.filter((x) => x.type === \"systemNode\").length > 0;\r\n      if (isRootNodeExist) {\r\n        alert(\"System already exist!!\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    let style = {};\r\n    if (type === \"output\") {\r\n      style = {\r\n        border: \"2px solid black\",\r\n        borderRadius: \"5px\",\r\n        background: \"#DCFFC0\",\r\n        borderColor: \"black\",\r\n      };\r\n    } else {\r\n      style = {\r\n        border: \"2px solid black\",\r\n        borderRadius: \"5px\",\r\n        background: \"#FFFBDA\",\r\n      };\r\n    }\r\n    const newNode = {\r\n      id: uuid(),\r\n      type,\r\n      position,\r\n      data: { label: `Please Define Name` },\r\n      dtype: \"node\",\r\n      style: style,\r\n    };\r\n    dispatch(elementActions.addElement({ ele: newNode }));\r\n  };\r\n\r\n  const onHoverBegin=(event, node)=>{\r\n    // console.log(node)\r\n    let pc=\"\"\r\n    \r\n    if(\"parallel_comp\" in node.data){\r\n      node.data.parallel_comp.map(\r\n        component=>{\r\n          return(\r\n            pc+=\"<br/>\"+component.label\r\n          )\r\n          \r\n        })\r\n      document.getElementById('tooltip').innerHTML=\r\n      `<h4>${node.data.label}</h4>`+\"<p>Parallel Components:\"+pc+\"</p>\"\r\n      document.getElementById('tooltip').style.opacity = 1\r\n      }\r\n    \r\n  }\r\n  \r\n  const duringHover=(event,node)=>{\r\n    //console.log(event);\r\n    debugger;\r\n    document.getElementById('tooltip').style.left = event.pageX-20+\"px\"\r\n    document.getElementById('tooltip').style.top = event.pageY-110+\"px\"\r\n  }\r\n\r\n  const onHoverEnd=(event, node)=>{\r\n    document.getElementById('tooltip').style.opacity = 0\r\n    document.getElementById('tooltip').innerHTML=null\r\n  }\r\n\r\n  return (<>\r\n    <ContextMenuTrigger id=\"same_unique_identifier\">\r\n        \r\n      \r\n    <ReactFlowProvider>\r\n      <div className={customCSSClasses.react_flow_pane_parent}>\r\n        <div style={{ height: \"98vh\", width: \"100%\" }} ref={reactFlowWrapper}>\r\n          <CustomContextMenu/>\r\n          <ReactFlow\r\n            style={styles}\r\n            elements={ielements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            onDrop={onDrop}\r\n            onLoad={onLoad}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n            onElementClick={onElementClick}\r\n            onNodeContextMenu={onContextMenu}\r\n            // onNodeDoubleClick={onDoubleClick}\r\n\r\n            onNodeMouseEnter={onHoverBegin}\r\n            onNodeMouseMove={duringHover}\r\n            onNodeMouseLeave={onHoverEnd}\r\n          >\r\n            <div id=\"tooltip\">\r\n            </div>\r\n            <Controls></Controls>\r\n            <Background></Background>\r\n          </ReactFlow>\r\n        </div>\r\n        <div className={`controls + ' ' + ${customCSSClasses.control_div}`}>\r\n          <button className={customCSSClasses.horizontal} onClick={() => onLayout(\"LR\")}>Horizontal Layout</button>\r\n          <button className={customCSSClasses.vertical} onClick={() => onLayout(\"TB\")}>Vertical Layout</button>\r\n        </div>\r\n      </div>\r\n    </ReactFlowProvider>\r\n    </ContextMenuTrigger>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Flow;\r\n"]},"metadata":{},"sourceType":"module"}