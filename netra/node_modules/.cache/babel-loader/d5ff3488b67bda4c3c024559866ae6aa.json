{"ast":null,"code":"var _jsxFileName = \"D:\\\\Netraaaa\\\\Netra\\\\netra\\\\src\\\\pages\\\\Data Manager\\\\repairableOverhaul\\\\repairableSubTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"../../../ui/Table/DataManagerTable\";\nimport styles from \"./repairable.module.css\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RepairableSubTable = props => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [secondRows, setSecondRows] = useState([]);\n  const [numOverhaul, setNumOverhaul] = useState(\"1\");\n  const [gridColumnApi, setGridColumnApi] = useState(null); //   const location = useLocation();\n\n  let secondRowHeight = 120;\n\n  if (secondRows.length > 0 && secondRows.length > 2) {\n    secondRowHeight = 200;\n  }\n\n  const onGridReady = params => {\n    setGridApi(params.api); // props.setGrid(params.api);\n\n    setGridColumnApi(params.columnApi);\n    params.api.sizeColumnsToFit();\n  };\n\n  const numOverhaulColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"overhaulNum\",\n    headerName: \"Overhaul Number\",\n    headerTooltip: \"Overhaul Number\",\n    minWidth: 500 //   editable={true}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"runAge\",\n    headerName: \"Running Age After Previous Overhaul (hours)\",\n    headerTooltip: \"Running Age After Previous Overhaul(hours)\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"numMaint\",\n    headerName: \"Total Maintenance Events in this Overhaul\",\n    headerTooltip: \"Total Maintenance Events in this Overhaul\",\n    width: 500,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)];\n\n  const onSubmitNumOverhaul = () => {\n    let count = 1;\n    const sRows = [];\n\n    while (count <= +numOverhaul) {\n      sRows.push({\n        overhaulNum: count.toString(),\n        runAge: 6000 * count,\n        numMaint: 1,\n        id: uuid()\n      });\n      count = count + 1;\n    }\n\n    setSecondRows(sRows);\n    props.secondTableDataUpdate(sRows);\n  };\n\n  const saveModifiedRows = params => {\n    const allRowData = [];\n    gridApi.forEachNode(node => allRowData.push(node.data));\n    console.log(allRowData);\n    props.secondTableDataUpdate(allRowData, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.numOverhaulParent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.overhaulHaul,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Number of Overhauls performed on this Equipment :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"outlined-required\",\n          label: \"Number of Overhauls\",\n          defaultValue: \"1\",\n          values: numOverhaul,\n          onChange: e => {\n            setNumOverhaul(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: onSubmitNumOverhaul,\n          style: {\n            width: \"8rem\",\n            height: \"3rem\",\n            marginTop: \"1rem\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: secondRowHeight,\n        width: \"100%\",\n        marginBottom: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        defaultColDef: {\n          flex: 1,\n          resizable: true,\n          filter: true,\n          sortable: true\n        },\n        rowData: secondRows // columnDefs={props.columnDefs}\n        ,\n        onGridReady: onGridReady,\n        onCellValueChanged: saveModifiedRows,\n        children: numOverhaulColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RepairableSubTable, \"HcgySyGShu7OeQ5f4QezgFhKR6s=\");\n\n_c = RepairableSubTable;\nexport default RepairableSubTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepairableSubTable\");","map":{"version":3,"sources":["D:/Netraaaa/Netra/netra/src/pages/Data Manager/repairableOverhaul/repairableSubTable.js"],"names":["React","useState","Table","styles","AgGridColumn","AgGridReact","Button","TextField","v4","uuid","RepairableSubTable","props","gridApi","setGridApi","secondRows","setSecondRows","numOverhaul","setNumOverhaul","gridColumnApi","setGridColumnApi","secondRowHeight","length","onGridReady","params","api","columnApi","sizeColumnsToFit","numOverhaulColumns","onSubmitNumOverhaul","count","sRows","push","overhaulNum","toString","runAge","numMaint","id","secondTableDataUpdate","saveModifiedRows","allRowData","forEachNode","node","data","console","log","numOverhaulParent","overhaulHaul","e","target","value","width","height","marginTop","marginBottom","flex","resizable","filter","sortable"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport styles from \"./repairable.module.css\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst RepairableSubTable = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [secondRows, setSecondRows] = useState([]);\r\n  const [numOverhaul, setNumOverhaul] = useState(\"1\");\r\n  const [gridColumnApi, setGridColumnApi] = useState(null);\r\n  //   const location = useLocation();\r\n  let secondRowHeight = 120;\r\n  if (secondRows.length > 0 && secondRows.length > 2) {\r\n    secondRowHeight = 200;\r\n  }\r\n  const onGridReady = (params) => {\r\n    setGridApi(params.api);\r\n    // props.setGrid(params.api);\r\n    setGridColumnApi(params.columnApi);\r\n    params.api.sizeColumnsToFit();\r\n  };\r\n  const numOverhaulColumns = [\r\n    <AgGridColumn\r\n      field=\"overhaulNum\"\r\n      headerName=\"Overhaul Number\"\r\n      headerTooltip=\"Overhaul Number\"\r\n      minWidth={500}\r\n      //   editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"runAge\"\r\n      headerName=\"Running Age After Previous Overhaul (hours)\"\r\n      headerTooltip=\"Running Age After Previous Overhaul(hours)\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"numMaint\"\r\n      headerName=\"Total Maintenance Events in this Overhaul\"\r\n      headerTooltip=\"Total Maintenance Events in this Overhaul\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const onSubmitNumOverhaul = () => {\r\n    let count = 1;\r\n    const sRows = [];\r\n    while (count <= +numOverhaul) {\r\n      sRows.push({\r\n        overhaulNum: count.toString(),\r\n        runAge: 6000 * count,\r\n        numMaint: 1,\r\n        id: uuid(),\r\n      });\r\n      count = count + 1;\r\n    }\r\n    setSecondRows(sRows);\r\n    props.secondTableDataUpdate(sRows);\r\n  };\r\n\r\n  const saveModifiedRows = (params) => {\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    console.log(allRowData);\r\n    props.secondTableDataUpdate(allRowData, true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.numOverhaulParent}>\r\n        <div className={styles.overhaulHaul}>\r\n          <h2>Total Number of Overhauls performed on this Equipment :</h2>\r\n          <TextField\r\n            required\r\n            id=\"outlined-required\"\r\n            label=\"Number of Overhauls\"\r\n            defaultValue=\"1\"\r\n            values={numOverhaul}\r\n            onChange={(e) => {\r\n              setNumOverhaul(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={onSubmitNumOverhaul}\r\n            style={{ width: \"8rem\", height: \"3rem\", marginTop: \"1rem\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"ag-theme-alpine\"\r\n        style={{ height: secondRowHeight, width: \"100%\", marginBottom: \"2rem\" }}\r\n      >\r\n        <AgGridReact\r\n          defaultColDef={{\r\n            flex: 1,\r\n            resizable: true,\r\n            filter: true,\r\n            sortable: true,\r\n          }}\r\n          rowData={secondRows}\r\n          // columnDefs={props.columnDefs}\r\n          onGridReady={onGridReady}\r\n          onCellValueChanged={saveModifiedRows}\r\n        >\r\n          {numOverhaulColumns}\r\n        </AgGridReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepairableSubTable;\r\n"]},"metadata":{},"sourceType":"module"}