{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\RCM\\\\critical_RCM.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from '../../../components/navigation/Navigation';\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\nimport UserSelection from '../../../ui/userSelection/userSelection';\nimport { Button, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\nimport AutoSelect from '../../../ui/Form/AutoSelect';\nimport { Route, useHistory } from 'react-router'; // import { useHistory } from \"react-router-dom\";\n// import {useNavigate} from 'react-router-dom'\n// import AssignType from './AssignType';\n\nimport AssignType from '../CreateMaintenance/AssignType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Critical_RCM = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  const [fData, setfData] = useState([]);\n  let AllData = useSelector(state => state.treeData.treeData); // AllData = AllData.filter(x => x.parentName === currentSelection[\"equipmentName\"])\n  // fData = fData.filter(x => x.parentName === currentSelection[\"equipmentName\"])\n  //console.log(fData);\n\n  const onLoadTreeStructure = () => {\n    debugger;\n    fetch(\"/fetch_assembly_rcm\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      debugger;\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      setfData(d[\"asm\"]);\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD,\n        failureModes: failureModes\n      }));\n    });\n  };\n\n  const [selectedComponent, setComponent] = useState(null);\n  const [selectedCriticalComponent, setCriticalComponent] = useState([]);\n\n  const selectOnChange = (e, value) => {\n    setComponent(value);\n    debugger;\n    console.log(AllData);\n  };\n\n  const nextLevelBtn = () => {\n    history.push('/maintenance_allocation/conduct_rcm_analysis/critical_comp');\n  };\n\n  const SaveAssemplyHandler = () => {\n    // alert(\"Hello\");\n    console.log(selectedComponent);\n    fetch(\"/save_assembly_rcm\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"],\n        asm_data: selectedComponent\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      alert(d.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userSelection,\n      children: [/*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.btn,\n        onClick: onLoadTreeStructure,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            paddingBottom: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.selectComponent,\n            children: [\"Select Assemblies to be included for RCM Analysis :\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n              fields: fData,\n              onChange: selectOnChange,\n              value: selectedComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.selectComponent,\n            children: [\"Select Component for criticality :\", /*#__PURE__*/_jsxDEV(AutoSelect, {\n              multiple: \"multiple\",\n              fields: fData,\n              onChange: selectOnChange,\n              value: selectedCriticalComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.nextbtn,\n          onClick: nextLevelBtn,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add Information for Critical Components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.nextbtn,\n          onClick: SaveAssemplyHandler,\n          style: {\n            marginRight: \"2rem\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Critical_RCM, \"pZGVP7HJmGx9UZinNhS8iEIel+k=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = Critical_RCM;\nexport default Critical_RCM;\n\nvar _c;\n\n$RefreshReg$(_c, \"Critical_RCM\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Maintenance Allocation/RCM/critical_RCM.js"],"names":["React","useState","Navigation","styles","UserSelection","Button","RadioGroup","FormControlLabel","Radio","TreeComponent","useSelector","useDispatch","treeDataActions","AutoSelect","Route","useHistory","AssignType","Critical_RCM","props","dispatch","history","currentSelection","state","userSelection","fData","setfData","AllData","treeData","onLoadTreeStructure","fetch","method","body","JSON","stringify","system","ship_name","headers","Accept","then","res","json","d","treeD","failureModes","setTreeData","selectedComponent","setComponent","selectedCriticalComponent","setCriticalComponent","selectOnChange","e","value","console","log","nextLevelBtn","push","SaveAssemplyHandler","asm_data","alert","message","btn","content","rightSection","display","paddingBottom","selectComponent","nextbtn","marginRight"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navigation from '../../../components/navigation/Navigation';\r\nimport styles from \"../CreateMaintenance/CreateMaintenance.module.css\";\r\nimport UserSelection from '../../../ui/userSelection/userSelection'\r\nimport { Button,RadioGroup,FormControlLabel,Radio } from '@material-ui/core';\r\nimport TreeComponent from '../../../components/sortableTree/SortableTree';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { treeDataActions } from \"../../../store/TreeDataStore\";\r\nimport AutoSelect from '../../../ui/Form/AutoSelect';\r\nimport { Route, useHistory } from 'react-router';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {useNavigate} from 'react-router-dom'\r\n// import AssignType from './AssignType';\r\nimport AssignType from '../CreateMaintenance/AssignType';\r\n\r\n\r\n\r\nconst Critical_RCM=(props)=> {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const currentSelection = useSelector(\r\n        (state) => state.userSelection.currentSelection\r\n      );\r\n    const[fData,setfData]=useState([]);\r\n    let AllData = useSelector((state) => state.treeData.treeData);\r\n    // AllData = AllData.filter(x => x.parentName === currentSelection[\"equipmentName\"])\r\n    // fData = fData.filter(x => x.parentName === currentSelection[\"equipmentName\"])\r\n    //console.log(fData);\r\n    const onLoadTreeStructure = () => {\r\n        debugger;\r\n        fetch(\"/fetch_assembly_rcm\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            system: currentSelection[\"equipmentName\"],\r\n            ship_name: currentSelection[\"shipName\"],\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            debugger;\r\n            let treeD = d[\"treeD\"];\r\n            let failureModes = d[\"failureMode\"];\r\n            setfData(d[\"asm\"]) \r\n            dispatch(\r\n              treeDataActions.setTreeData({\r\n                treeData: treeD,\r\n                failureModes: failureModes,\r\n              })\r\n            );\r\n          });\r\n      };\r\n\r\n      const[selectedComponent,setComponent]=useState(null)\r\n      const[selectedCriticalComponent,setCriticalComponent]=useState([])\r\n      const selectOnChange=(e,value)=>{\r\n        setComponent(value)\r\n        debugger;\r\n        \r\n        console.log(AllData)\r\n      }\r\n\r\n    const nextLevelBtn = () => {\r\n        history.push('/maintenance_allocation/conduct_rcm_analysis/critical_comp')\r\n    }\r\n\r\n    const SaveAssemplyHandler = () => {\r\n        // alert(\"Hello\");\r\n        console.log(selectedComponent);\r\n        fetch(\"/save_assembly_rcm\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              system: currentSelection[\"equipmentName\"],\r\n              ship_name: currentSelection[\"shipName\"],\r\n              asm_data: selectedComponent\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          })\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            alert(d.message)\r\n          })\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Navigation/>\r\n      <div className={styles.userSelection}>\r\n          <UserSelection/>\r\n          <Button className={styles.btn} onClick={onLoadTreeStructure} variant='contained' color='primary'>Submit</Button>\r\n          {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          </Route> */}\r\n      </div>\r\n      {/* <Route exact path='/maintenance_allocation/create'>\r\n          \r\n          \r\n      </Route> */}\r\n      <div className={styles.content}>\r\n            {/* <div className={styles.tree}>\r\n              \r\n            </div> */}\r\n            <div className={styles.rightSection}>\r\n              <div style={{display: \"flex\", paddingBottom: \"1rem\"}}>\r\n              <div className={styles.selectComponent}>\r\n                Select Assemblies to be included for RCM Analysis :\r\n                <AutoSelect\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              <div className={styles.selectComponent}>\r\n                Select Component for criticality :\r\n                <AutoSelect\r\n                    multiple=\"multiple\"\r\n                    fields={fData}\r\n                    onChange={selectOnChange}\r\n                    value={selectedCriticalComponent}\r\n                  ></AutoSelect>\r\n              </div>\r\n              </div>\r\n              <Button className={styles.nextbtn} onClick={nextLevelBtn} variant='contained' color='primary'>Add Information for Critical Components</Button>\r\n              <Button className={styles.nextbtn} onClick={SaveAssemplyHandler} style={{marginRight: \"2rem\"}} variant='contained' color='primary'>Save</Button>\r\n              \r\n              <div>\r\n                <p>Hello</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      {/* <Route exact path='/maintenance_allocation/create/assignMaintenance'>\r\n          <AssignType selectedComponent={selectedComponent}/>\r\n      </Route> */}\r\n    </>\r\n    );\r\n  }\r\n  export default Critical_RCM;"]},"metadata":{},"sourceType":"module"}