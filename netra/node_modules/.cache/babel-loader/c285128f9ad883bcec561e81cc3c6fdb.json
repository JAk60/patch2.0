{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\userSelectionConfig\\\\UserSelectionConfiguration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewModule from \"../../components/module/NewModule\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport styles from \"./UserSelectionConfiguration.module.css\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\"; //From Add new equipment form\n\nimport { userActions } from \"../../store/ApplicationVariable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { treeDataActions } from \"../../store/TreeDataStore\";\nimport classes from \"./EqptStructuring.module.css\";\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\"; // import Tree from \"./Tree\";\n// import TreeComponent from \"../../sortableTree/SortableTree\";\n\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SystemStyles = makeStyles({\n  formControl: {\n    margin: \"2rem\",\n    minWidth: 200\n  },\n  Submit: {\n    margin: \"2rem\"\n  },\n  buttons: {\n    minWidth: 150,\n    marginLeft: 10,\n    marginTop: 15,\n    float: \"right\"\n  }\n});\n\nconst UserSelectionConfiguration = props => {\n  _s();\n\n  const SystemClasses = SystemStyles();\n  const dispatch = useDispatch();\n  const selectedInputs = useSelector(state => state.userSelection.currentSelection);\n  const [disableButton, setDisableButton] = useState(false); //   const [gridApi, setGridApi] = useState(null);\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Close\",\n      showSnackBar: false\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      platform: \"\",\n      platformType: \"\",\n      system: \"\",\n      systemType: \"\"\n    },\n    //validationSchema: validationSchema,\n    onSubmit: values => {\n      // alert(JSON.stringify(values, null, 2));\n      const {\n        platform,\n        platformType,\n        system,\n        systemType\n      } = values;\n      console.log(selectedInputs);\n      const platformId = uuid();\n      const systemId = uuid();\n      debugger;\n      const treeNodes = [{\n        name: system,\n        id: systemId,\n        eqType: systemType,\n        parentName: selectedInputs[\"shipName\"],\n        parentId: null,\n        parent: null,\n        children: [],\n        lmu: 1,\n        command: selectedInputs[\"command\"],\n        department: selectedInputs[\"department\"],\n        shipCategory: selectedInputs[\"shipCategory\"],\n        shipClass: selectedInputs[\"shipClass\"],\n        shipName: selectedInputs[\"shipName\"]\n      }];\n      const updateEqStore = {\n        equipmentName: system,\n        equipmentCode: systemType\n      };\n      const filteredData = {\n        equipmentName: [system],\n        equipmentCode: [systemType]\n      };\n      dispatch(treeDataActions.addElement({\n        data: treeNodes\n      }));\n      dispatch(userActions.onAddingEquipmentName({\n        selectedData: updateEqStore,\n        filteredData: filteredData\n      }));\n      setDisableButton(true);\n    }\n  }); //Save Button Handler\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.user,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: SystemClasses.buttons,\n          onClick: onSaveButtonClickHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: \"Add New Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              width: \"100%\"\n            },\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"System Name\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"system\",\n                  name: \"system\",\n                  value: formik.values.system,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"System Type\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"systemType\",\n                  name: \"systemType\",\n                  value: formik.values.systemType,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.parent,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"400px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Parent Component\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AutoSelect, {\n                  fields: fData,\n                  onChange: parentOnChange,\n                  value: parentFiledValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"20px\",\n                  marginRight: '2%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: classesButton.root,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"reset\",\n                  onClick: clearForm,\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 15\n                }, this), !disableButton && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formrow2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSelectionConfiguration, \"CQ4Rl8pXWogWc6BLdM055tTOsYc=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = UserSelectionConfiguration;\nexport default UserSelectionConfiguration;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelectionConfiguration\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/userSelectionConfig/UserSelectionConfiguration.js"],"names":["React","useEffect","useState","NewModule","Navigation","UserSelection","styles","AgGridColumn","Table","Button","makeStyles","Grid","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","userActions","useDispatch","useSelector","treeDataActions","classes","LabelToolTip","CustomTextInput","CustomSelect","AutoSelect","useFormik","uuid","SystemStyles","formControl","margin","minWidth","Submit","buttons","marginLeft","marginTop","float","UserSelectionConfiguration","props","SystemClasses","dispatch","selectedInputs","state","userSelection","currentSelection","disableButton","setDisableButton","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","formik","initialValues","platform","platformType","system","systemType","onSubmit","values","console","log","platformId","systemId","treeNodes","name","id","eqType","parentName","parentId","parent","children","lmu","command","department","shipCategory","shipClass","shipName","updateEqStore","equipmentName","equipmentCode","filteredData","addElement","data","onAddingEquipmentName","selectedData","body","user","onSaveButtonClickHandler","table","form","header","width","handleSubmit","formrow1","field1","fullWidth","handleChange","fData","parentOnChange","parentFiledValue","marginRight","classesButton","root","clearForm","formrow2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,mBAAP,MAAgC,yBAAhC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,iEAAzB,C,CACA;AACA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASb,EAAE,IAAIc,IAAf,QAA2B,MAA3B;;;AAEA,MAAMC,YAAY,GAAGlB,UAAU,CAAC;AAC9BmB,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADiB;AAK9BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE;AADF,GALsB;AAQ9BG,EAAAA,OAAO,EAAE;AACPF,IAAAA,QAAQ,EAAE,GADH;AAEPG,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,SAAS,EAAE,EAHJ;AAIPC,IAAAA,KAAK,EAAE;AAJA;AARqB,CAAD,CAA/B;;AAeA,MAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,aAAa,GAAGX,YAAY,EAAlC;AACA,QAAMY,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,cAAc,GAAGtB,WAAW,CAC/BuB,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,gBADC,CAAlC;AAGA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC5C,QAAQ,CAAC,KAAD,CAAlD,CAN4C,CAO9C;;AACE,QAAM,CAAC6C,eAAD,EAAkBC,kBAAlB,IAAwC9C,QAAQ,CAAC;AACrD+C,IAAAA,QAAQ,EAAE,OAD2C;AAErDC,IAAAA,OAAO,EAAE,iBAF4C;AAGrDC,IAAAA,YAAY,EAAE;AAHuC,GAAD,CAAtD;;AAKA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BJ,IAAAA,kBAAkB,CAAC;AACjBC,MAAAA,QAAQ,EAAE,OADO;AAEjBC,MAAAA,OAAO,EAAE,OAFQ;AAGjBC,MAAAA,YAAY,EAAE;AAHG,KAAD,CAAlB;AAKD,GAND;;AASA,QAAME,MAAM,GAAG3B,SAAS,CAAC;AACvB4B,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,YAAY,EAAE,EAFD;AAGbC,MAAAA,MAAM,EAAE,EAHK;AAIbC,MAAAA,UAAU,EAAE;AAJC,KADQ;AAOvB;AACAC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB;AACA,YAAM;AAAEL,QAAAA,QAAF;AAAYC,QAAAA,YAAZ;AAA0BC,QAAAA,MAA1B;AAAkCC,QAAAA;AAAlC,UAAiDE,MAAvD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYrB,cAAZ;AACA,YAAMsB,UAAU,GAAGpC,IAAI,EAAvB;AACA,YAAMqC,QAAQ,GAAGrC,IAAI,EAArB;AACA;AACA,YAAMsC,SAAS,GAAG,CAChB;AACEC,QAAAA,IAAI,EAAET,MADR;AAEEU,QAAAA,EAAE,EAAEH,QAFN;AAGEI,QAAAA,MAAM,EAAEV,UAHV;AAIEW,QAAAA,UAAU,EAAE5B,cAAc,CAAC,UAAD,CAJ5B;AAKE6B,QAAAA,QAAQ,EAAE,IALZ;AAMEC,QAAAA,MAAM,EAAE,IANV;AAOEC,QAAAA,QAAQ,EAAE,EAPZ;AAQEC,QAAAA,GAAG,EAAE,CARP;AASEC,QAAAA,OAAO,EAAEjC,cAAc,CAAC,SAAD,CATzB;AAUEkC,QAAAA,UAAU,EAAElC,cAAc,CAAC,YAAD,CAV5B;AAWEmC,QAAAA,YAAY,EAAEnC,cAAc,CAAC,cAAD,CAX9B;AAYEoC,QAAAA,SAAS,EAAEpC,cAAc,CAAC,WAAD,CAZ3B;AAaEqC,QAAAA,QAAQ,EAAErC,cAAc,CAAC,UAAD;AAb1B,OADgB,CAAlB;AAiBA,YAAMsC,aAAa,GAAG;AACpBC,QAAAA,aAAa,EAAEvB,MADK;AAEpBwB,QAAAA,aAAa,EAAEvB;AAFK,OAAtB;AAIA,YAAMwB,YAAY,GAAG;AACnBF,QAAAA,aAAa,EAAE,CAACvB,MAAD,CADI;AAEnBwB,QAAAA,aAAa,EAAE,CAACvB,UAAD;AAFI,OAArB;AAIAlB,MAAAA,QAAQ,CAACpB,eAAe,CAAC+D,UAAhB,CAA2B;AAAEC,QAAAA,IAAI,EAAEnB;AAAR,OAA3B,CAAD,CAAR;AACAzB,MAAAA,QAAQ,CACNvB,WAAW,CAACoE,qBAAZ,CAAkC;AAChCC,QAAAA,YAAY,EAAEP,aADkB;AAEhCG,QAAAA,YAAY,EAAEA;AAFkB,OAAlC,CADM,CAAR;AAMApC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AAhDsB,GAAD,CAAxB,CAtB4C,CA2E5C;;AAGA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACiF,IAAvB;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAEjF,MAAM,CAACkF,IAAvB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEjD,aAAa,CAACN,OAH3B;AAIE,UAAA,OAAO,EAAEwD,wBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAK,QAAA,SAAS,EAAEnF,MAAM,CAACoF,KAAvB;AAAA,+BAQC;AAAK,UAAA,SAAS,EAAErE,OAAO,CAACsE,IAAxB;AAAA,kCACH;AAAK,YAAA,SAAS,EAAEtE,OAAO,CAACuE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,eAED;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAgC,YAAA,QAAQ,EAAExC,MAAM,CAACyC,YAAjD;AAAA,oCACE;AAAK,cAAA,SAAS,EAAEzE,OAAO,CAAC0E,QAAxB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAE1E,OAAO,CAAC2E,MAAxB;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC,aAApB;AAAkC,kBAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,eAAD;AACE,kBAAA,SAAS,EAAE3E,OAAO,CAAC4E,SADrB;AAEE,kBAAA,EAAE,EAAC,QAFL;AAGE,kBAAA,IAAI,EAAC,QAHP;AAIE,kBAAA,KAAK,EAAE5C,MAAM,CAACO,MAAP,CAAcH,MAJvB;AAKE,kBAAA,QAAQ,EAAEJ,MAAM,CAAC6C,YALnB;AAME,kBAAA,QAAQ,EAAErD;AANZ;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAK,gBAAA,SAAS,EAAExB,OAAO,CAAC2E,MAAxB;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC,aAApB;AAAkC,kBAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,eAAD;AACE,kBAAA,SAAS,EAAE3E,OAAO,CAAC4E,SADrB;AAEE,kBAAA,EAAE,EAAC,YAFL;AAGE,kBAAA,IAAI,EAAC,YAHP;AAIE,kBAAA,KAAK,EAAE5C,MAAM,CAACO,MAAP,CAAcF,UAJvB;AAKE,kBAAA,QAAQ,EAAEL,MAAM,CAAC6C,YALnB;AAME,kBAAA,QAAQ,EAAErD;AANZ;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyBE;AAAK,cAAA,SAAS,EAAExB,OAAO,CAACkD,MAAxB;AAAA,sCACE;AAAK,gBAAA,KAAK,EAAE;AAAEsB,kBAAAA,KAAK,EAAE;AAAT,iBAAZ;AAAA,wCACE,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AACE,kBAAA,MAAM,EAAEM,KADV;AAEE,kBAAA,QAAQ,EAAEC,cAFZ;AAGE,kBAAA,KAAK,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAK,gBAAA,KAAK,EAAE;AAAElE,kBAAAA,SAAS,EAAE,MAAb;AAAoBmE,kBAAAA,WAAW,EAAC;AAAhC,iBAAZ;AAAA,wCACE,QAAC,MAAD;AACE,kBAAA,SAAS,EAAEC,aAAa,CAACC,IAD3B;AAEE,kBAAA,OAAO,EAAC,WAFV;AAGE,kBAAA,KAAK,EAAC,SAHR;AAIE,kBAAA,IAAI,EAAC,OAJP;AAKE,kBAAA,OAAO,EAAEC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAUG,CAAC5D,aAAD,iBACC,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAA4C,kBAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,eAsDD;AAAK,YAAA,SAAS,EAAExB,OAAO,CAACqF;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAtDC;AAAA;AAAA;AAAA;AAAA;AAAA;AARD;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EA0GG3D,eAAe,CAACI,YAAhB,iBACC,QAAC,mBAAD;AACE,MAAA,OAAO,EAAEJ,eADX;AAEE,MAAA,aAAa,EAAEK;AAFjB;AAAA;AAAA;AAAA;AAAA,YA3GJ;AAAA,kBADF;AAmHD,CAjMD;;GAAMf,0B;UAEanB,W,EACMC,W,EAmBRO,S;;;KAtBXW,0B;AAmMN,eAAeA,0BAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport styles from \"./UserSelectionConfiguration.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n\r\n//From Add new equipment form\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\nimport classes from \"./EqptStructuring.module.css\";\r\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\";\r\n// import Tree from \"./Tree\";\r\n// import TreeComponent from \"../../sortableTree/SortableTree\";\r\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\"; \r\n\r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\nconst UserSelectionConfiguration = (props) => {\r\n  const SystemClasses = SystemStyles();\r\n  const dispatch = useDispatch();\r\n  const selectedInputs = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const [disableButton, setDisableButton] = useState(false);\r\n//   const [gridApi, setGridApi] = useState(null);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Close\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      platform: \"\",\r\n      platformType: \"\",\r\n      system: \"\",\r\n      systemType: \"\",\r\n    },\r\n    //validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      const { platform, platformType, system, systemType } = values;\r\n      console.log(selectedInputs);\r\n      const platformId = uuid();\r\n      const systemId = uuid();\r\n      debugger;\r\n      const treeNodes = [\r\n        {\r\n          name: system,\r\n          id: systemId,\r\n          eqType: systemType,\r\n          parentName: selectedInputs[\"shipName\"],\r\n          parentId: null,\r\n          parent: null,\r\n          children: [],\r\n          lmu: 1,\r\n          command: selectedInputs[\"command\"],\r\n          department: selectedInputs[\"department\"],\r\n          shipCategory: selectedInputs[\"shipCategory\"],\r\n          shipClass: selectedInputs[\"shipClass\"],\r\n          shipName: selectedInputs[\"shipName\"],\r\n        },\r\n      ];\r\n      const updateEqStore = {\r\n        equipmentName: system,\r\n        equipmentCode: systemType,\r\n      };\r\n      const filteredData = {\r\n        equipmentName: [system],\r\n        equipmentCode: [systemType],\r\n      };\r\n      dispatch(treeDataActions.addElement({ data: treeNodes }));\r\n      dispatch(\r\n        userActions.onAddingEquipmentName({\r\n          selectedData: updateEqStore,\r\n          filteredData: filteredData,\r\n        })\r\n      );\r\n      setDisableButton(true);\r\n    },\r\n  });\r\n\r\n\r\n\r\n  //Save Button Handler\r\n \r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        {/* <div className={styles.module}>\r\n          <NewModule />\r\n        </div> */}\r\n        <div className={styles.user}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={SystemClasses.buttons}\r\n            onClick={onSaveButtonClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        {/* <div className={styles.user}><UserSelection /></div> */}\r\n        <div className={styles.table}>\r\n          {/* <Table\r\n            rowData={rowState}\r\n            columnDefs={MProfileColumns}\r\n            tableUpdate={setFinalTableData}\r\n            setGrid={setGridApi}\r\n            gridApi={gridApi}\r\n          /> */}\r\n         <div className={classes.form}>\r\n      <div className={classes.header}>Add New Equipment</div>\r\n        <form style={{ width: \"100%\" }} onSubmit={formik.handleSubmit}>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Name\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"system\"\r\n                name=\"system\"\r\n                value={formik.values.system}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"System Type\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"systemType\"\r\n                name=\"systemType\"\r\n                value={formik.values.systemType}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n          </div>\r\n          <div className={classes.parent}>\r\n            <div style={{ width: \"400px\" }}>\r\n              <LabelToolTip label=\"Parent Component\" />\r\n              <AutoSelect\r\n                fields={fData}\r\n                onChange={parentOnChange}\r\n                value={parentFiledValue}\r\n              ></AutoSelect>\r\n            </div>\r\n            <div style={{ marginTop: \"20px\",marginRight:'2%' }}>\r\n              <Button\r\n                className={classesButton.root}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"reset\"\r\n                onClick={clearForm}\r\n              >\r\n                Clear\r\n              </Button>\r\n              {!disableButton && (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className={classes.formrow2}>\r\n          {/* //onSubmit={updateChildTree} ref={childForm} */}\r\n\r\n          {/* This is the end */}\r\n        </div>\r\n      </div>\r\n          {/* <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSelectionConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}