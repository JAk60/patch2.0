{"ast":null,"code":"var _jsxFileName = \"E:\\\\NETRA PROJECT\\\\Netra\\\\netra\\\\src\\\\components\\\\module\\\\NewModule.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport clsx from 'clsx';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./Module_radio.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepperStyles = makeStyles(_c = theme => ({\n  root: {\n    width: \"100%\",\n    background: '#ebebed',\n    borderRadius: '5px',\n    height: \"50px\",\n    justifyContent: 'space-between',\n    padding: '15px',\n    fontSize: '30px'\n  },\n  active: {\n    color: '#000'\n  }\n}));\n_c2 = StepperStyles;\nconst CustomIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n    padding: '10px'\n  },\n  active: {\n    // position: 'relative',\n    // // backgroundColor: '#3ae711',\n    // left: '5px',\n    // top: '5px',\n    // width: '15px',\n    // height: '15px',\n    // borderRadius:'50%',\n    // zIndex: 1,\n    // boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\n    height: '25px',\n    width: '25px',\n    borderRadius: '50%',\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\n    backgroundColor: '#ffffff'\n  },\n  circle: {\n    height: '25px',\n    width: '25px',\n    borderRadius: '50%',\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\n    backgroundColor: '#ffffff'\n  },\n  completed: {\n    position: 'relative',\n    backgroundColor: '#00dffe',\n    left: '5px',\n    top: '5px',\n    width: '15px',\n    height: '15px',\n    borderRadius: '50%',\n    zIndex: 1,\n    fontSize: 18,\n    boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)'\n  }\n});\n\nfunction CustomIcon(props) {\n  const classes = CustomIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx({\n          [classes.active]: active\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 130\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 98\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = CustomIcon;\n\nfunction getSteps() {\n  return [\"System Configuration\", \"Phase Manager\", \"HEP\", \"Data Manager\", \"Mission Profile\"];\n}\n\nexport default function NewModule() {\n  _s();\n\n  const classes = StepperStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.module,\n    children: /*#__PURE__*/_jsxDEV(Stepper, {\n      classes: classes,\n      activeStep: activeStep,\n      connector: null,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          StepIconComponent: CustomIcon,\n          TypographyProps: {\n            classes: {\n              root: styles.boldLabel\n            } // Apply the class to the Typography component\n\n          },\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewModule, \"iIYKRAP+e/JAhvMHZK3k37STQJ8=\");\n\n_c4 = NewModule;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StepperStyles$makeStyles\");\n$RefreshReg$(_c2, \"StepperStyles\");\n$RefreshReg$(_c3, \"CustomIcon\");\n$RefreshReg$(_c4, \"NewModule\");","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/src/components/module/NewModule.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","clsx","Button","Typography","styles","StepperStyles","theme","root","width","background","borderRadius","height","justifyContent","padding","fontSize","active","color","CustomIconStyles","display","alignItems","boxShadow","backgroundColor","circle","completed","position","left","top","zIndex","CustomIcon","props","classes","getSteps","NewModule","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","module","map","label","boldLabel"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport clsx from 'clsx';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./Module_radio.module.css\";\r\n\r\nconst StepperStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: '#ebebed',\r\n    borderRadius: '5px',\r\n    height: \"50px\",\r\n    justifyContent: 'space-between',\r\n    padding: '15px',\r\n    fontSize: '30px',\r\n  },\r\n  active: {\r\n    color: '#000',\r\n  }\r\n}));\r\nconst CustomIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  active: {\r\n    // position: 'relative',\r\n    // // backgroundColor: '#3ae711',\r\n    // left: '5px',\r\n    // top: '5px',\r\n    // width: '15px',\r\n    // height: '15px',\r\n    // borderRadius:'50%',\r\n    // zIndex: 1,\r\n    // boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  circle: {\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n\r\n  completed: {\r\n    position: 'relative',\r\n    backgroundColor: '#00dffe',\r\n    left: '5px',\r\n    top: '5px',\r\n    width: '15px',\r\n    height: '15px',\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n    boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n  },\r\n});\r\n\r\nfunction CustomIcon(props) {\r\n  const classes = CustomIconStyles();\r\n  const { active, completed } = props;\r\n  debugger;\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n    >\r\n      {completed ? <div className={classes.circle}><div className={classes.completed} /></div> : <div className={classes.circle}><div className={clsx({\r\n        [classes.active]: active,\r\n      })} /></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"System Configuration\",\r\n    \"Phase Manager\",\r\n    \"HEP\",\r\n    \"Data Manager\",\r\n    \"Mission Profile\"\r\n  ];\r\n}\r\n\r\nexport default function NewModule() {\r\n  const classes = StepperStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  debugger;\r\n  return (\r\n    <div className={styles.module}>\r\n      <Stepper classes={classes} activeStep={activeStep} connector={null}>\r\n        {steps.map((label) => (\r\n          <Step key={label} >\r\n            <StepLabel\r\n              StepIconComponent={CustomIcon}\r\n              TypographyProps={{\r\n                classes: { root: styles.boldLabel }, // Apply the class to the Typography component\r\n              }}\r\n            >\r\n              {label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {/* <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}