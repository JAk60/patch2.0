{"ast":null,"code":"var _jsxFileName = \"E:\\\\NETRA PROJECT\\\\Netra\\\\netra\\\\src\\\\pages\\\\Maintenance Allocation\\\\CreateMaintenance\\\\AssignType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./CreateMaintenance.module.css\";\nimport { Button, RadioGroup, FormControlLabel, Radio, MenuItem, Select, Dialog } from \"@material-ui/core\";\nimport Table from \"../../../ui/Table/Table\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { saveSensor } from \"./SaveHandler\";\nimport CustomizedSnackbars from \"../../../ui/CustomSnackBar\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignType = props => {\n  _s();\n\n  var _systemData$filter$, _props$selectedCompon, _props$selectedCompon2, _props$selectedCompon3;\n\n  const [type, setType] = useState(\"\");\n  const [ageBasedUnit, setAgeBasedUnit] = useState(null);\n  const [calendarBasedUnit, setCalendarBasedUnit] = useState(null);\n  const [condition, setCondition] = useState(\"visual\");\n  const [failureMode, setFailureMode] = useState(null);\n  const [visualWearLevels, setVisualWearLevels] = useState(0);\n  const [visualCorrosionLevels, setVisualCorrosionLevels] = useState(0);\n  const [visualFrequency, setVisualFrequency] = useState(0);\n  const [degradationWearLevels, setDegradationWearLevels] = useState(0);\n  const [VisualWearRows, setVisualWearRows] = useState([]);\n  const [VisualCorrosionRows, setVisualCorrosionRows] = useState([]);\n  const [visualActionsRows, setVisualActionRows] = useState([]);\n  const hello = [\"This\", \"is\", \"beauty\"];\n\n  const changeVisualFrequency = e => {\n    setVisualFrequency(e.target.value);\n  };\n\n  const changeVisualWearLevel = e => {\n    setVisualWearLevels(e.target.value);\n    addVisualWearRows(e.target.value);\n  };\n\n  const changeVisualCorrosionLevel = e => {\n    setVisualCorrosionLevels(e.target.value);\n    addVisualCorrosionRows(e.target.value);\n  };\n\n  const changeDegradationWearLevel = e => {\n    setVisualWearLevels(e.target.value);\n  };\n\n  const handleMtypeChange = e => {\n    setType(e.target.value);\n  };\n\n  useEffect(() => {\n    addVisualActionRows();\n  }, [VisualWearRows, VisualCorrosionRows]);\n  const visualWearColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"wear\",\n    headerName: \"Wear\",\n    headerTooltip: \"Wear\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"image\",\n    headerName: \"Image\",\n    headerTooltip: \"Image\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)];\n  const visualActionsCols = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"wear\",\n    headerName: \"Wear\",\n    headerTooltip: \"Wear\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"corrosion\",\n    headerName: \"Corrosion\",\n    headerTooltip: \"Corrosion\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"alarm\",\n    headerName: \"Alarms\",\n    headerTooltip: \"Alarms\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: [\"Show on dashboard\", \"Alarm1\", \"Alarm2\", \"Alarm3\"]\n    } //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    headerName: \"Invalid\",\n    field: \"invalid\" //editable={true}\n    ,\n    cellRenderer: params => {\n      var input = document.createElement(\"input\");\n      input.type = \"checkbox\";\n      input.checked = params.value;\n      input.addEventListener(\"click\", function (event) {\n        params.value = !params.value;\n        params.node.data.invalid = params.value;\n      });\n      return input;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this)];\n\n  const addVisualWearRows = n => {\n    let newRows = [];\n    let i = 1;\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        level: `L${i}`,\n        wear: \"\",\n        image: \"\"\n      }];\n      n--;\n      i++;\n    }\n\n    console.log(newRows);\n    setVisualWearRows(newRows);\n  };\n\n  const visualCorrosionColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"corrosion\",\n    headerName: \"Corrosion\",\n    headerTooltip: \"Corrosion\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"image\",\n    headerName: \"Image\",\n    headerTooltip: \"Image\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this)];\n\n  const addVisualCorrosionRows = n => {\n    let newRows = [];\n    let i = 1;\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        level: `L${i}`,\n        corrosion: \"\",\n        image: \"\"\n      }];\n      n--;\n      i++;\n    }\n\n    console.log(newRows);\n    setVisualCorrosionRows(newRows);\n  };\n\n  const addVisualActionRows = () => {\n    let rows = [];\n    VisualWearRows.map(wearRow => {\n      VisualCorrosionRows.map(corrosionRow => {\n        rows = [...rows, {\n          wear: wearRow.level,\n          corrosion: corrosionRow.level,\n          alarm: \"Show on dashboard\",\n          invalid: false\n        }];\n      });\n    });\n    console.log(rows);\n    setVisualActionRows(rows);\n  }; // Snackbar\n\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Please Add Systemss\",\n      showSnackBar: false\n    });\n  }; //Condition modal\n\n\n  const [modal, setModal] = useState(false); //Sensor Based Monitoring\n\n  const [monitoringType, setMonitoringType] = useState(\"intermittent\");\n  const [numPara, setNumPara] = useState(0);\n  const [pRows, setpRows] = useState([]);\n  console.log(pRows);\n\n  const addPRows = n => {\n    let newRows = [];\n\n    while (n > 0) {\n      newRows = [...newRows, {\n        EquipmentId: eqptId,\n        ComponentId: props.selectedComponent.id,\n        id: uuid(),\n        name: \"\",\n        unit: \"\",\n        min: \"\",\n        max: \"\",\n        level: \"\",\n        frequency: \"\",\n        data: \"\"\n      }];\n      n--;\n    }\n\n    console.log(newRows);\n    setpRows(newRows);\n  };\n\n  const parameterColumnDefs = [\n  /*#__PURE__*/\n  // <AgGridColumn\n  //   field=\"channel_name\"\n  //   headerName=\"Channel Name\"\n  //   headerTooltip=\"Channel Name\"\n  //   // minWidth={100}\n  //   editable={true}\n  // />,\n  _jsxDEV(AgGridColumn, {\n    field: \"name\",\n    headerName: \"Channel/Parameter Name\",\n    headerTooltip: \"Channel/Parameter Name\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"unit\",\n    headerName: \"Unit\",\n    headerTooltip: \"Unit\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"min\",\n    headerName: \"Minimum Value\",\n    headerTooltip: \"Minimum Value\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"max\",\n    headerName: \"Maximum Value\",\n    headerTooltip: \"Maximum Value\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"P\",\n    headerName: \"P\",\n    headerTooltip: \"P\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"F\",\n    headerName: \"F\",\n    headerTooltip: \"F\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this), monitoringType === \"intermittent\" ? /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"frequency\",\n    headerName: \"Frequency\",\n    headerTooltip: \"Frequency\" // minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 7\n  }, this) : null, /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"data\",\n    headerName: \"Data\",\n    headerTooltip: \"Data\" // minWidth={100}\n    ,\n    editable: true,\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: [\"From Excel File\", \"From DB\"]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this)];\n  const lvlwiseColumnDefs = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"name\",\n    headerName: \"Name\",\n    headerTooltip: \"Name\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"level\",\n    headerName: \"Level\",\n    headerTooltip: \"Level\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"threshold\",\n    headerName: \"Threshold\",\n    headerTooltip: \"Threshold\" //minWidth={100}\n    ,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this)];\n\n  const updateParameterRowData = allRows => {\n    //get object of levels and lvlwise rows\n    let lvlwisearr = [];\n    let paramarr = [];\n    allRows.map(data => {\n      let lvlarr = [];\n\n      for (let i = 1; i <= data.level; i++) {\n        lvlarr.push(\"L\" + i);\n        lvlwisearr.push({\n          id: uuid(),\n          pid: data.id,\n          name: data.name,\n          level: \"L\" + i,\n          threshold: \"\"\n        });\n      }\n\n      paramarr.push(lvlarr);\n    });\n    setLvlwiseRows(lvlwisearr);\n    let result = paramarr.reduce((a, b) => a.reduce((r, v) => r.concat(b.map(w => [].concat(v, w))), [])); // console.log(result);\n\n    let rows = [];\n    let alarm_att = [];\n    result.map(row => {\n      let alarmId = uuid();\n      let newrow = {\n        id: alarmId,\n        alarm: \"Show on dashboard\",\n        invalid: false\n      };\n      let i = 0;\n      allRows.map(data => {\n        var _ref, _lvlwisearr$filter$;\n\n        // console.log(row)\n        alarm_att = [...alarm_att, {\n          id: uuid(),\n          AlarmId: alarmId,\n          paramId: (_ref = lvlwisearr.filter(element => {\n            return element.name === data.name && element.level === row[i];\n          })[0] || {}) === null || _ref === void 0 ? void 0 : _ref.pid,\n          lvlId: (_lvlwisearr$filter$ = lvlwisearr.filter(element => {\n            return element.name === data.name && element.level === row[i];\n          })[0]) === null || _lvlwisearr$filter$ === void 0 ? void 0 : _lvlwisearr$filter$.id\n        }];\n        newrow = { ...newrow,\n          [data.name]: row[i]\n        };\n        i++;\n      });\n      console.log(alarm_att);\n      rows = [...rows, newrow];\n    }); //console.log(rows)\n\n    setSbAlarmAtts(alarm_att);\n    setSbAlarmRows(rows); //get columns\n\n    let columns = allRows.map(data => {\n      if (data.name != \"\") {\n        return /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: data.name,\n          headerName: data.name,\n          headerTooltip: data.name //minWidth={100}\n          //editable={true}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    setSbAlarmCols([/*#__PURE__*/_jsxDEV(AgGridColumn, {\n      field: \"alarm\",\n      headerName: \"Alarms\",\n      headerTooltip: \"Alarms\",\n      cellEditor: \"agSelectCellEditor\",\n      cellEditorParams: {\n        values: [\"Show on dashboard\", \"Alarm1\", \"Alarm2\", \"Alarm3\"]\n      } //minWidth={100}\n      ,\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n      headerName: \"Invalid\",\n      field: \"invalid\" //editable={true}\n      ,\n      cellRenderer: params => {\n        var input = document.createElement(\"input\");\n        input.type = \"checkbox\";\n        input.checked = params.value;\n        input.addEventListener(\"click\", function (event) {\n          params.value = !params.value;\n          params.node.data.invalid = params.value;\n        });\n        return input;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), ...columns]);\n  }; //sensor-based Alarms Table\n\n\n  const [sbAlarmCols, setSbAlarmCols] = useState([]);\n  const [lvlwiseRows, setLvlwiseRows] = useState([]);\n  const [sbAlarmRows, setSbAlarmRows] = useState([]);\n  const [sbAlarmAtts, setSbAlarmAtts] = useState([]);\n\n  const handleSave = () => {\n    debugger;\n\n    if (type === \"conditionBased\") {\n      if (condition === \"sensorBased\") {\n        let newRows = pRows.map(row => {\n          return { ...row,\n            FailureModeId: failureMode\n          };\n        });\n        let validAlarms = sbAlarmRows.filter(data => {\n          return !data.invalid;\n        }).map(row => row.id);\n        saveSensor({\n          sData: newRows,\n          lData: lvlwiseRows,\n          aData: sbAlarmRows.filter(row => {\n            return !row.invalid;\n          }),\n          alarmAtts: sbAlarmAtts.filter(attrow => {\n            return validAlarms.includes(attrow.AlarmId);\n          })\n        }, setSnackBarMessage);\n        console.log(validAlarms);\n        console.log({\n          sData: newRows,\n          lData: lvlwiseRows,\n          aData: sbAlarmRows.filter(row => {\n            return !row.invalid;\n          }),\n          alarmAtts: sbAlarmAtts.filter(attrow => {\n            return validAlarms.includes(attrow.AlarmId);\n          })\n        });\n      }\n    }\n  };\n\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  const systemData = useSelector(state => state.treeData.treeData);\n  const failureModes = useSelector(state => state.treeData.failureModes);\n  console.log(\"fffff\", failureModes);\n  const eqptId = (_systemData$filter$ = systemData.filter(data => data.name === currentSelection.equipmentName)[0]) === null || _systemData$filter$ === void 0 ? void 0 : _systemData$filter$.id;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.assignDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.assignContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.flex,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Selected Component:\", (_props$selectedCompon = props.selectedComponent) === null || _props$selectedCompon === void 0 ? void 0 : _props$selectedCompon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"maintenance-type\",\n            value: type,\n            onChange: handleMtypeChange,\n            className: styles.mtypeRadio,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"runToFailure\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 28\n              }, this),\n              label: \"Run to Failure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), ((_props$selectedCompon2 = props.selectedComponent) === null || _props$selectedCompon2 === void 0 ? void 0 : _props$selectedCompon2.repairType) == \"Repairable\" || /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"ageBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 28\n              }, this),\n              label: \"Age Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), ((_props$selectedCompon3 = props.selectedComponent) === null || _props$selectedCompon3 === void 0 ? void 0 : _props$selectedCompon3.repairType) == \"Repairable\" || /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"calendarBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 28\n              }, this),\n              label: \"Calendar Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"conditionBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                onClick: () => setModal(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 28\n              }, this),\n              label: \"Condition Based Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btns,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: modal,\n        onClose: () => setModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modal,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"condition\",\n            value: condition,\n            onChange: e => setCondition(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"visual\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 26\n              }, this),\n              label: \"Visual Inspection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"degradation\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 26\n              }, this),\n              label: \"Degradation Measurement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"sensorBased\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 26\n              }, this),\n              label: \"Sensor Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), type === \"runToFailure\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: \"Run To Failure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), type === \"ageBased\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age-based-measurement-unit\",\n            children: [\" \", \"Unit of Measurement\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"age-based-measurement-unit-label\",\n            id: \"age-based-measurement-unit\",\n            value: ageBasedUnit,\n            onChange: e => setAgeBasedUnit(e.target.value),\n            className: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"hours\",\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"days\",\n              children: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"weeks\",\n              children: \"Weeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"months\",\n              children: \"Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"years\",\n              children: \"Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age-based-replacement-age\",\n            children: [\" \", \"Replacement Age\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            id: \"age-based-replacement-age\",\n            name: \"age-based-replacement-age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this), type === \"calendarBased\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calendar-based-measurement-unit\",\n            children: [\" \", \"Unit of Measurement\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"calendar-based-measurement-unit-label\",\n            id: \"calendar-based-measurement-unit\",\n            value: calendarBasedUnit,\n            onChange: e => setCalendarBasedUnit(e.target.value),\n            className: styles.input,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"hours\",\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"days\",\n              children: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"weeks\",\n              children: \"Weeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"months\",\n              children: \"Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"years\",\n              children: \"Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calendar-based-replacement-age\",\n            children: [\" \", \"Replacement Age\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            id: \"calendar-based-replacement-age\",\n            name: \"calendar-based-replacement-age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this), type === \"conditionBased\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MTypeContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formField,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"failure-mode\",\n            children: [\" \", \"Failure Mode to be inspected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            disableUnderline: true,\n            labelId: \"failure-mode-label\",\n            id: \"failure-mode\",\n            value: failureMode,\n            onChange: e => setFailureMode(e.target.value),\n            className: styles.input,\n            children: failureModes === null || failureModes === void 0 ? void 0 : failureModes.map(ele => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: ele.failure_mode,\n                children: ele.failure_mode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this), condition === \"visual\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inspection-frequency\",\n              children: [\" \", \"Inspection Frequency\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.input,\n              value: visualFrequency,\n              onChange: changeVisualFrequency,\n              type: \"number\",\n              id: \"inspection-frequency\",\n              name: \"inspection-frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levels,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Wear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"visual-wear-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: visualWearLevels,\n                  onChange: changeVisualWearLevel,\n                  type: \"number\",\n                  id: \"visual-wear-level\",\n                  name: \"visual-wear-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualWearColumnDefs,\n                rowData: VisualWearRows,\n                tableUpdate: rows => {\n                  console.log(rows);\n                },\n                height: 250\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Corrosion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"visual-corrosion-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: visualCorrosionLevels,\n                  onChange: changeVisualCorrosionLevel,\n                  type: \"number\",\n                  id: \"visual-corrosion-level\",\n                  name: \"visual-corrosion-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualCorrosionColumnDefs,\n                rowData: VisualCorrosionRows,\n                tableUpdate: rows => {\n                  console.log(rows);\n                },\n                height: 250\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levelwise,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.lwCol,\n              children: [\"Actions\", /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: visualActionsCols,\n                rowData: visualActionsRows,\n                tableUpdate: data => console.log(data),\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), condition === \"degradation\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.levels,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Wear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.sectionHead,\n                children: \"Corrosion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"degradation-wear-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  value: degradationWearLevels,\n                  onChange: changeDegradationWearLevel,\n                  type: \"number\",\n                  id: \"degradation-wear-level\",\n                  name: \"degradation-wear-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formField,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"degradation-corrosion-level\",\n                  children: \"No. of levels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: styles.input,\n                  type: \"text\",\n                  id: \"degradation-corrosion-level\",\n                  name: \"degradation-corrosion-level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.levelCol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), condition === \"sensorBased\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"monitoring-type\",\n            value: monitoringType,\n            onChange: e => setMonitoringType(e.target.value),\n            className: styles.sensorRadio,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                labelPlacement: \"start\",\n                value: \"intermittent\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 32\n                }, this),\n                label: \"Intermittent Monitoring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              value: \"continuous\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 30\n              }, this),\n              label: \"Continuous Monitoring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.parameters,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.formField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parameters\",\n                children: \" Number of parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles.input,\n                value: numPara,\n                onChange: e => setNumPara(e.target.value),\n                type: \"number\",\n                id: \"parameters\",\n                name: \"parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addPRows(numPara),\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  marginLeft: 10\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.formField,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parameters\",\n                children: \" Define parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                columnDefs: parameterColumnDefs,\n                rowData: pRows,\n                tableUpdate: updateParameterRowData,\n                height: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignType, \"qPjTcDWCLkO6nu/RBo3IJYwptuk=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = AssignType;\nexport default AssignType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignType\");","map":{"version":3,"sources":["E:/NETRA PROJECT/Netra/netra/src/pages/Maintenance Allocation/CreateMaintenance/AssignType.js"],"names":["React","useEffect","useState","styles","Button","RadioGroup","FormControlLabel","Radio","MenuItem","Select","Dialog","Table","AgGridColumn","v4","uuid","saveSensor","CustomizedSnackbars","useSelector","Link","AssignType","props","type","setType","ageBasedUnit","setAgeBasedUnit","calendarBasedUnit","setCalendarBasedUnit","condition","setCondition","failureMode","setFailureMode","visualWearLevels","setVisualWearLevels","visualCorrosionLevels","setVisualCorrosionLevels","visualFrequency","setVisualFrequency","degradationWearLevels","setDegradationWearLevels","VisualWearRows","setVisualWearRows","VisualCorrosionRows","setVisualCorrosionRows","visualActionsRows","setVisualActionRows","hello","changeVisualFrequency","e","target","value","changeVisualWearLevel","addVisualWearRows","changeVisualCorrosionLevel","addVisualCorrosionRows","changeDegradationWearLevel","handleMtypeChange","addVisualActionRows","visualWearColumnDefs","visualActionsCols","values","params","input","document","createElement","checked","addEventListener","event","node","data","invalid","n","newRows","i","level","wear","image","console","log","visualCorrosionColumnDefs","corrosion","rows","map","wearRow","corrosionRow","alarm","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","modal","setModal","monitoringType","setMonitoringType","numPara","setNumPara","pRows","setpRows","addPRows","EquipmentId","eqptId","ComponentId","selectedComponent","id","name","unit","min","max","frequency","parameterColumnDefs","lvlwiseColumnDefs","updateParameterRowData","allRows","lvlwisearr","paramarr","lvlarr","push","pid","threshold","setLvlwiseRows","result","reduce","a","b","r","v","concat","w","alarm_att","row","alarmId","newrow","AlarmId","paramId","filter","element","lvlId","setSbAlarmAtts","setSbAlarmRows","columns","setSbAlarmCols","sbAlarmCols","lvlwiseRows","sbAlarmRows","sbAlarmAtts","handleSave","FailureModeId","validAlarms","sData","lData","aData","alarmAtts","attrow","includes","currentSelection","state","userSelection","systemData","treeData","failureModes","equipmentName","assignDiv","assignContent","flex","mtypeRadio","repairType","btns","MTypeContent","formField","ele","failure_mode","levels","levelCol","sectionHead","levelwise","lwCol","sensorRadio","parameters","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./CreateMaintenance.module.css\";\r\nimport {\r\n  Button,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  MenuItem,\r\n  Select,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { saveSensor } from \"./SaveHandler\";\r\nimport CustomizedSnackbars from \"../../../ui/CustomSnackBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AssignType = (props) => {\r\n  const [type, setType] = useState(\"\");\r\n  const [ageBasedUnit, setAgeBasedUnit] = useState(null);\r\n  const [calendarBasedUnit, setCalendarBasedUnit] = useState(null);\r\n  const [condition, setCondition] = useState(\"visual\");\r\n  const [failureMode, setFailureMode] = useState(null);\r\n  const [visualWearLevels, setVisualWearLevels] = useState(0);\r\n  const [visualCorrosionLevels, setVisualCorrosionLevels] = useState(0);\r\n  const [visualFrequency, setVisualFrequency] = useState(0);\r\n  const [degradationWearLevels, setDegradationWearLevels] = useState(0);\r\n  const [VisualWearRows, setVisualWearRows] = useState([]);\r\n  const [VisualCorrosionRows, setVisualCorrosionRows] = useState([]);\r\n  const [visualActionsRows, setVisualActionRows] = useState([]);\r\n  const hello = [\"This\", \"is\", \"beauty\"];\r\n  const changeVisualFrequency = (e) => {\r\n    setVisualFrequency(e.target.value);\r\n  };\r\n  const changeVisualWearLevel = (e) => {\r\n    setVisualWearLevels(e.target.value);\r\n    addVisualWearRows(e.target.value);\r\n  };\r\n  const changeVisualCorrosionLevel = (e) => {\r\n    setVisualCorrosionLevels(e.target.value);\r\n    addVisualCorrosionRows(e.target.value);\r\n  };\r\n  const changeDegradationWearLevel = (e) => {\r\n    setVisualWearLevels(e.target.value);\r\n  };\r\n  const handleMtypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    addVisualActionRows();\r\n  }, [VisualWearRows, VisualCorrosionRows]);\r\n\r\n  const visualWearColumnDefs = [\r\n    <AgGridColumn\r\n      field=\"level\"\r\n      headerName=\"Level\"\r\n      headerTooltip=\"Level\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"wear\"\r\n      headerName=\"Wear\"\r\n      headerTooltip=\"Wear\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"image\"\r\n      headerName=\"Image\"\r\n      headerTooltip=\"Image\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const visualActionsCols = [\r\n    <AgGridColumn\r\n      field=\"wear\"\r\n      headerName=\"Wear\"\r\n      headerTooltip=\"Wear\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"corrosion\"\r\n      headerName=\"Corrosion\"\r\n      headerTooltip=\"Corrosion\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"alarm\"\r\n      headerName=\"Alarms\"\r\n      headerTooltip=\"Alarms\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Show on dashboard\", \"Alarm1\", \"Alarm2\", \"Alarm3\"],\r\n      }}\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      headerName=\"Invalid\"\r\n      field=\"invalid\"\r\n      //editable={true}\r\n      cellRenderer={(params) => {\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"checkbox\";\r\n        input.checked = params.value;\r\n        input.addEventListener(\"click\", function (event) {\r\n          params.value = !params.value;\r\n          params.node.data.invalid = params.value;\r\n        });\r\n        return input;\r\n      }}\r\n    />,\r\n  ];\r\n  const addVisualWearRows = (n) => {\r\n    let newRows = [];\r\n    let i = 1;\r\n    while (n > 0) {\r\n      newRows = [...newRows, { level: `L${i}`, wear: \"\", image: \"\" }];\r\n      n--;\r\n      i++;\r\n    }\r\n    console.log(newRows);\r\n    setVisualWearRows(newRows);\r\n  };\r\n  const visualCorrosionColumnDefs = [\r\n    <AgGridColumn\r\n      field=\"level\"\r\n      headerName=\"Level\"\r\n      headerTooltip=\"Level\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"corrosion\"\r\n      headerName=\"Corrosion\"\r\n      headerTooltip=\"Corrosion\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"image\"\r\n      headerName=\"Image\"\r\n      headerTooltip=\"Image\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const addVisualCorrosionRows = (n) => {\r\n    let newRows = [];\r\n    let i = 1;\r\n    while (n > 0) {\r\n      newRows = [...newRows, { level: `L${i}`, corrosion: \"\", image: \"\" }];\r\n      n--;\r\n      i++;\r\n    }\r\n    console.log(newRows);\r\n    setVisualCorrosionRows(newRows);\r\n  };\r\n\r\n  const addVisualActionRows = () => {\r\n    let rows = [];\r\n    VisualWearRows.map((wearRow) => {\r\n      VisualCorrosionRows.map((corrosionRow) => {\r\n        rows = [\r\n          ...rows,\r\n          {\r\n            wear: wearRow.level,\r\n            corrosion: corrosionRow.level,\r\n            alarm: \"Show on dashboard\",\r\n            invalid: false,\r\n          },\r\n        ];\r\n      });\r\n    });\r\n    console.log(rows);\r\n    setVisualActionRows(rows);\r\n  };\r\n  // Snackbar\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Please Add Systemss\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  //Condition modal\r\n  const [modal, setModal] = useState(false);\r\n  //Sensor Based Monitoring\r\n  const [monitoringType, setMonitoringType] = useState(\"intermittent\");\r\n  const [numPara, setNumPara] = useState(0);\r\n  const [pRows, setpRows] = useState([]);\r\n  console.log(pRows);\r\n  const addPRows = (n) => {\r\n    let newRows = [];\r\n    while (n > 0) {\r\n      newRows = [\r\n        ...newRows,\r\n        {\r\n          EquipmentId: eqptId,\r\n          ComponentId: props.selectedComponent.id,\r\n          id: uuid(),\r\n          name: \"\",\r\n          unit: \"\",\r\n          min: \"\",\r\n          max: \"\",\r\n          level: \"\",\r\n          frequency: \"\",\r\n          data: \"\",\r\n        },\r\n      ];\r\n      n--;\r\n    }\r\n    console.log(newRows);\r\n    setpRows(newRows);\r\n  };\r\n\r\n  const parameterColumnDefs = [\r\n    // <AgGridColumn\r\n    //   field=\"channel_name\"\r\n    //   headerName=\"Channel Name\"\r\n    //   headerTooltip=\"Channel Name\"\r\n    //   // minWidth={100}\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"name\"\r\n      headerName=\"Channel/Parameter Name\"\r\n      headerTooltip=\"Channel/Parameter Name\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"unit\"\r\n      headerName=\"Unit\"\r\n      headerTooltip=\"Unit\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"min\"\r\n      headerName=\"Minimum Value\"\r\n      headerTooltip=\"Minimum Value\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"max\"\r\n      headerName=\"Maximum Value\"\r\n      headerTooltip=\"Maximum Value\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"P\"\r\n      headerName=\"P\"\r\n      headerTooltip=\"P\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"F\"\r\n      headerName=\"F\"\r\n      headerTooltip=\"F\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"level\"\r\n      headerName=\"Level\"\r\n      headerTooltip=\"Level\"\r\n      // minWidth={100}\r\n      editable={true}\r\n    />,\r\n    monitoringType === \"intermittent\" ? (\r\n      <AgGridColumn\r\n        field=\"frequency\"\r\n        headerName=\"Frequency\"\r\n        headerTooltip=\"Frequency\"\r\n        // minWidth={100}\r\n        editable={true}\r\n      />\r\n    ) : null,\r\n    <AgGridColumn\r\n      field=\"data\"\r\n      headerName=\"Data\"\r\n      headerTooltip=\"Data\"\r\n      // minWidth={100}\r\n      editable={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"From Excel File\", \"From DB\"],\r\n      }}\r\n    />,\r\n  ];\r\n  const lvlwiseColumnDefs = [\r\n    <AgGridColumn\r\n      field=\"name\"\r\n      headerName=\"Name\"\r\n      headerTooltip=\"Name\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"level\"\r\n      headerName=\"Level\"\r\n      headerTooltip=\"Level\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"threshold\"\r\n      headerName=\"Threshold\"\r\n      headerTooltip=\"Threshold\"\r\n      //minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateParameterRowData = (allRows) => {\r\n    //get object of levels and lvlwise rows\r\n    let lvlwisearr = [];\r\n    let paramarr = [];\r\n    allRows.map((data) => {\r\n      let lvlarr = [];\r\n      for (let i = 1; i <= data.level; i++) {\r\n        lvlarr.push(\"L\" + i);\r\n        lvlwisearr.push({\r\n          id: uuid(),\r\n          pid: data.id,\r\n          name: data.name,\r\n          level: \"L\" + i,\r\n          threshold: \"\",\r\n        });\r\n      }\r\n      paramarr.push(lvlarr);\r\n    });\r\n    setLvlwiseRows(lvlwisearr);\r\n    let result = paramarr.reduce((a, b) =>\r\n      a.reduce((r, v) => r.concat(b.map((w) => [].concat(v, w))), [])\r\n    );\r\n    // console.log(result);\r\n    let rows = [];\r\n    let alarm_att = [];\r\n    result.map((row) => {\r\n      let alarmId = uuid();\r\n      let newrow = { id: alarmId, alarm: \"Show on dashboard\", invalid: false };\r\n      let i = 0;\r\n      allRows.map((data) => {\r\n        // console.log(row)\r\n        alarm_att = [\r\n          ...alarm_att,\r\n          {\r\n            id: uuid(),\r\n            AlarmId: alarmId,\r\n            paramId: (\r\n              lvlwisearr.filter((element) => {\r\n                return element.name === data.name && element.level === row[i];\r\n              })[0] || {}\r\n            )?.pid,\r\n            lvlId: lvlwisearr.filter((element) => {\r\n              return element.name === data.name && element.level === row[i];\r\n            })[0]?.id,\r\n          },\r\n        ];\r\n\r\n        newrow = { ...newrow, [data.name]: row[i] };\r\n        i++;\r\n      });\r\n      console.log(alarm_att);\r\n      rows = [...rows, newrow];\r\n    });\r\n\r\n    //console.log(rows)\r\n    setSbAlarmAtts(alarm_att);\r\n    setSbAlarmRows(rows);\r\n    //get columns\r\n    let columns = allRows.map((data) => {\r\n      if (data.name != \"\") {\r\n        return (\r\n          <AgGridColumn\r\n            field={data.name}\r\n            headerName={data.name}\r\n            headerTooltip={data.name}\r\n            //minWidth={100}\r\n            //editable={true}\r\n          />\r\n        );\r\n      }\r\n    });\r\n    setSbAlarmCols([\r\n      <AgGridColumn\r\n        field=\"alarm\"\r\n        headerName=\"Alarms\"\r\n        headerTooltip=\"Alarms\"\r\n        cellEditor=\"agSelectCellEditor\"\r\n        cellEditorParams={{\r\n          values: [\"Show on dashboard\", \"Alarm1\", \"Alarm2\", \"Alarm3\"],\r\n        }}\r\n        //minWidth={100}\r\n        editable={true}\r\n      />,\r\n      <AgGridColumn\r\n        headerName=\"Invalid\"\r\n        field=\"invalid\"\r\n        //editable={true}\r\n        cellRenderer={(params) => {\r\n          var input = document.createElement(\"input\");\r\n          input.type = \"checkbox\";\r\n          input.checked = params.value;\r\n          input.addEventListener(\"click\", function (event) {\r\n            params.value = !params.value;\r\n            params.node.data.invalid = params.value;\r\n          });\r\n          return input;\r\n        }}\r\n      />,\r\n      ...columns,\r\n    ]);\r\n  };\r\n  //sensor-based Alarms Table\r\n  const [sbAlarmCols, setSbAlarmCols] = useState([]);\r\n  const [lvlwiseRows, setLvlwiseRows] = useState([]);\r\n  const [sbAlarmRows, setSbAlarmRows] = useState([]);\r\n  const [sbAlarmAtts, setSbAlarmAtts] = useState([]);\r\n  const handleSave = () => {\r\n    debugger\r\n    if (type === \"conditionBased\") {\r\n      if (condition === \"sensorBased\") {\r\n        let newRows = pRows.map((row) => {\r\n          return { ...row, FailureModeId: failureMode };\r\n        });\r\n        let validAlarms = sbAlarmRows\r\n          .filter((data) => {\r\n            return !data.invalid;\r\n          })\r\n          .map((row) => row.id);\r\n        saveSensor(\r\n          {\r\n            sData: newRows,\r\n            lData: lvlwiseRows,\r\n            aData: sbAlarmRows.filter((row) => {\r\n              return !row.invalid;\r\n            }),\r\n            alarmAtts: sbAlarmAtts.filter((attrow) => {\r\n              return validAlarms.includes(attrow.AlarmId);\r\n            }),\r\n          },\r\n          setSnackBarMessage\r\n        );\r\n        console.log(validAlarms);\r\n        console.log({\r\n          sData: newRows,\r\n          lData: lvlwiseRows,\r\n          aData: sbAlarmRows.filter((row) => {\r\n            return !row.invalid;\r\n          }),\r\n          alarmAtts: sbAlarmAtts.filter((attrow) => {\r\n            return validAlarms.includes(attrow.AlarmId);\r\n          }),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const failureModes = useSelector((state) => state.treeData.failureModes);\r\n  console.log(\"fffff\",failureModes);\r\n  const eqptId = systemData.filter(\r\n    (data) => data.name === currentSelection.equipmentName\r\n  )[0]?.id;\r\n  return (\r\n    <>\r\n      <div className={styles.assignDiv}>\r\n        <div className={styles.assignContent}>\r\n          <div className={styles.flex}>\r\n            <h3>Selected Component:{props.selectedComponent?.name}</h3>\r\n            <RadioGroup\r\n              row\r\n              name=\"maintenance-type\"\r\n              value={type}\r\n              onChange={handleMtypeChange}\r\n              className={styles.mtypeRadio}\r\n            >\r\n              {/* props.selectedComponent?.repairType === \"Repairable\" ||  */}\r\n              {(\r\n                <FormControlLabel\r\n                  value=\"runToFailure\"\r\n                  control={<Radio />}\r\n                  label=\"Run to Failure\"\r\n                />\r\n              )}\r\n              {props.selectedComponent?.repairType == \"Repairable\" || (\r\n                <FormControlLabel\r\n                  value=\"ageBased\"\r\n                  control={<Radio />}\r\n                  label=\"Age Based Maintenance\"\r\n                />\r\n              )}\r\n              {props.selectedComponent?.repairType == \"Repairable\" || (\r\n                <FormControlLabel\r\n                  value=\"calendarBased\"\r\n                  control={<Radio />}\r\n                  label=\"Calendar Based Maintenance\"\r\n                />\r\n              )}\r\n              { (\r\n                <FormControlLabel\r\n                  value=\"conditionBased\"\r\n                  control={<Radio onClick={() => setModal(true)} />}\r\n                  label=\"Condition Based Maintenance\"\r\n                />\r\n              )}\r\n            </RadioGroup>\r\n          </div>\r\n          <div className={styles.btns}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n              Save\r\n            </Button>\r\n            {/* <Link to=\"/rul\">\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                RUL\r\n              </Button>\r\n            </Link> */}\r\n            {/* <Link to=\"/optimize\">\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Optimize\r\n              </Button>\r\n            </Link> */}\r\n          </div>\r\n        </div>\r\n        <Dialog open={modal} onClose={() => setModal(false)}>\r\n          <div className={styles.modal}>\r\n            <h4>Select Condition</h4>\r\n            <RadioGroup\r\n              name=\"condition\"\r\n              value={condition}\r\n              onChange={(e) => setCondition(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"visual\"\r\n                control={<Radio />}\r\n                label=\"Visual Inspection\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"degradation\"\r\n                control={<Radio />}\r\n                label=\"Degradation Measurement\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"sensorBased\"\r\n                control={<Radio />}\r\n                label=\"Sensor Based\"\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n        </Dialog>\r\n        {type === \"runToFailure\" && (\r\n          <div className={styles.MTypeContent}>Run To Failure</div>\r\n        )}\r\n        {type === \"ageBased\" && (\r\n          <div className={styles.MTypeContent}>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"age-based-measurement-unit\">\r\n                {\" \"}\r\n                Unit of Measurement\r\n              </label>\r\n              <Select\r\n                disableUnderline\r\n                labelId=\"age-based-measurement-unit-label\"\r\n                id=\"age-based-measurement-unit\"\r\n                value={ageBasedUnit}\r\n                onChange={(e) => setAgeBasedUnit(e.target.value)}\r\n                className={styles.input}\r\n              >\r\n                <MenuItem value=\"hours\">Hours</MenuItem>\r\n                <MenuItem value=\"days\">Days</MenuItem>\r\n                <MenuItem value=\"weeks\">Weeks</MenuItem>\r\n                <MenuItem value=\"months\">Months</MenuItem>\r\n                <MenuItem value=\"years\">Years</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"age-based-replacement-age\">\r\n                {\" \"}\r\n                Replacement Age\r\n              </label>\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                id=\"age-based-replacement-age\"\r\n                name=\"age-based-replacement-age\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {type === \"calendarBased\" && (\r\n          <div className={styles.MTypeContent}>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"calendar-based-measurement-unit\">\r\n                {\" \"}\r\n                Unit of Measurement\r\n              </label>\r\n              <Select\r\n                disableUnderline\r\n                labelId=\"calendar-based-measurement-unit-label\"\r\n                id=\"calendar-based-measurement-unit\"\r\n                value={calendarBasedUnit}\r\n                onChange={(e) => setCalendarBasedUnit(e.target.value)}\r\n                className={styles.input}\r\n              >\r\n                <MenuItem value=\"hours\">Hours</MenuItem>\r\n                <MenuItem value=\"days\">Days</MenuItem>\r\n                <MenuItem value=\"weeks\">Weeks</MenuItem>\r\n                <MenuItem value=\"months\">Months</MenuItem>\r\n                <MenuItem value=\"years\">Years</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"calendar-based-replacement-age\">\r\n                {\" \"}\r\n                Replacement Age\r\n              </label>\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                id=\"calendar-based-replacement-age\"\r\n                name=\"calendar-based-replacement-age\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {type === \"conditionBased\" && (\r\n          <div className={styles.MTypeContent}>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"failure-mode\">\r\n                {\" \"}\r\n                Failure Mode to be inspected\r\n              </label>\r\n              <Select\r\n                disableUnderline\r\n                labelId=\"failure-mode-label\"\r\n                id=\"failure-mode\"\r\n                value={failureMode}\r\n                onChange={(e) => setFailureMode(e.target.value)}\r\n                className={styles.input}\r\n              >\r\n                {failureModes?.map((ele) => {\r\n                  return <MenuItem value={ele.failure_mode}>{ele.failure_mode}</MenuItem>;\r\n                })}\r\n              </Select>\r\n            </div>\r\n            {condition === \"visual\" && (\r\n              <>\r\n                <div className={styles.formField}>\r\n                  <label htmlFor=\"inspection-frequency\">\r\n                    {\" \"}\r\n                    Inspection Frequency\r\n                  </label>\r\n                  <input\r\n                    className={styles.input}\r\n                    value={visualFrequency}\r\n                    onChange={changeVisualFrequency}\r\n                    type=\"number\"\r\n                    id=\"inspection-frequency\"\r\n                    name=\"inspection-frequency\"\r\n                  />\r\n                </div>\r\n                <div className={styles.levels}>\r\n                  <div className={styles.levelCol}>\r\n                    <div className={styles.sectionHead}>Wear</div>\r\n                    <div className={styles.formField}>\r\n                      <label htmlFor=\"visual-wear-level\">No. of levels</label>\r\n                      <input\r\n                        className={styles.input}\r\n                        value={visualWearLevels}\r\n                        onChange={changeVisualWearLevel}\r\n                        type=\"number\"\r\n                        id=\"visual-wear-level\"\r\n                        name=\"visual-wear-level\"\r\n                      />\r\n                    </div>\r\n                    <Table\r\n                      columnDefs={visualWearColumnDefs}\r\n                      rowData={VisualWearRows}\r\n                      tableUpdate={(rows) => {\r\n                        console.log(rows);\r\n                      }}\r\n                      height={250}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.levelCol}>\r\n                    <div className={styles.sectionHead}>Corrosion</div>\r\n                    <div className={styles.formField}>\r\n                      <label htmlFor=\"visual-corrosion-level\">\r\n                        No. of levels\r\n                      </label>\r\n                      <input\r\n                        className={styles.input}\r\n                        value={visualCorrosionLevels}\r\n                        onChange={changeVisualCorrosionLevel}\r\n                        type=\"number\"\r\n                        id=\"visual-corrosion-level\"\r\n                        name=\"visual-corrosion-level\"\r\n                      />\r\n                    </div>\r\n                    <Table\r\n                      columnDefs={visualCorrosionColumnDefs}\r\n                      rowData={VisualCorrosionRows}\r\n                      tableUpdate={(rows) => {\r\n                        console.log(rows);\r\n                      }}\r\n                      height={250}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={styles.levelwise}>\r\n                  <div className={styles.lwCol}>\r\n                    Actions\r\n                    <Table\r\n                      columnDefs={visualActionsCols}\r\n                      rowData={visualActionsRows}\r\n                      tableUpdate={(data) => console.log(data)}\r\n                      height={200}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n            {condition === \"degradation\" && (\r\n              <>\r\n                <div className={styles.levels}>\r\n                  <div className={styles.levelCol}>\r\n                    <div className={styles.sectionHead}>Wear</div>\r\n                    <div className={styles.sectionHead}>Corrosion</div>\r\n                  </div>\r\n                  <div className={styles.levelCol}>\r\n                    <div className={styles.formField}>\r\n                      <label htmlFor=\"degradation-wear-level\">\r\n                        No. of levels\r\n                      </label>\r\n                      <input\r\n                        className={styles.input}\r\n                        value={degradationWearLevels}\r\n                        onChange={changeDegradationWearLevel}\r\n                        type=\"number\"\r\n                        id=\"degradation-wear-level\"\r\n                        name=\"degradation-wear-level\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.formField}>\r\n                      <label htmlFor=\"degradation-corrosion-level\">\r\n                        No. of levels\r\n                      </label>\r\n                      <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        id=\"degradation-corrosion-level\"\r\n                        name=\"degradation-corrosion-level\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.levelCol}></div>\r\n                </div>\r\n              </>\r\n            )}\r\n            {condition === \"sensorBased\" && (\r\n              <>\r\n                <RadioGroup\r\n                  row\r\n                  name=\"monitoring-type\"\r\n                  value={monitoringType}\r\n                  onChange={(e) => setMonitoringType(e.target.value)}\r\n                  className={styles.sensorRadio}\r\n                >\r\n                  <div>\r\n                    <FormControlLabel\r\n                      labelPlacement=\"start\"\r\n                      value=\"intermittent\"\r\n                      control={<Radio />}\r\n                      label=\"Intermittent Monitoring\"\r\n                    />\r\n                  </div>\r\n                  <FormControlLabel\r\n                    labelPlacement=\"start\"\r\n                    value=\"continuous\"\r\n                    control={<Radio />}\r\n                    label=\"Continuous Monitoring\"\r\n                  />\r\n                </RadioGroup>\r\n                <div className={styles.parameters}>\r\n                  <div className={styles.formField}>\r\n                    <label htmlFor=\"parameters\"> Number of parameters</label>\r\n                    <input\r\n                      className={styles.input}\r\n                      value={numPara}\r\n                      onChange={(e) => setNumPara(e.target.value)}\r\n                      type=\"number\"\r\n                      id=\"parameters\"\r\n                      name=\"parameters\"\r\n                    />\r\n                    <Button\r\n                      onClick={() => addPRows(numPara)}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                  <div className={styles.formField}>\r\n                    <label htmlFor=\"parameters\"> Define parameters</label>\r\n                    <Table\r\n                      columnDefs={parameterColumnDefs}\r\n                      rowData={pRows}\r\n                      tableUpdate={updateParameterRowData}\r\n                      height={200}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* <div className={styles.levelwise}>\r\n            <div className={styles.lwCol}>\r\n                Level Wise Parameters\r\n                <Table\r\n                    columnDefs={lvlwiseColumnDefs}\r\n                    rowData={lvlwiseRows}\r\n                    tableUpdate={(data)=>console.log(data)}\r\n                    height={200}\r\n                    />\r\n            </div>\r\n            <div className={styles.lwCol}>\r\n                Alarms\r\n                <Table\r\n                    columnDefs={sbAlarmCols}\r\n                    rowData={sbAlarmRows}\r\n                    tableUpdate={(data)=>console.log(data)}\r\n                    height={200}\r\n                    />\r\n            </div>\r\n            </div> */}\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AssignType;"]},"metadata":{},"sourceType":"module"}