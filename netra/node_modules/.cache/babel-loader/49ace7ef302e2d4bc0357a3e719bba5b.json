{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\systen_configuration\\\\maintenanceInfo\\\\maintenanceInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\nimport Table from \"../../../ui/Table/Table\";\nimport styles from \"../SystemConfiguration.module.css\";\nimport { MIrowData } from \"../SystemConfigurationTable.js\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MaintenanceInfo = props => {\n  _s();\n\n  const systemData = useSelector(state => state.treeData.treeData);\n  const MaintColumns = [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"EquipmentName\",\n    headerName: \"Equipment name\",\n    headerTooltip: \"Equipment name\",\n    width: 150,\n    editable: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n    field: \"RepairType\",\n    headerName: \"Repair Type\",\n    headerTooltip: \"Repair Type\",\n    cellEditor: \"agSelectCellEditor\",\n    cellEditorParams: {\n      values: [\"Replaceable\", \"Repairable\"]\n    },\n    width: 160,\n    editable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) // <AgGridColumn\n  //   field=\"PreventiveMaintenaceApplicable\"\n  //   headerName=\"Preventive Maintenace Applicable\"\n  //   headerTooltip=\"Preventive Maintenace Applicable\"\n  //   cellEditor=\"agSelectCellEditor\"\n  //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\n  //   width={200}\n  //   editable={true}\n  // />,\n  // <AgGridColumn\n  //   field=\"PreventiveMaintenaceInterval\"\n  //   headerName=\"Preventive Maintenace Interval (hrs)\"\n  //   headerTooltip=\"Preventive Maintenace Interval (hrs)\"\n  //   type=\"number\"\n  //   width={200}\n  //   editable={true}\n  // />,\n  // <AgGridColumn\n  //   field=\"ComponentsReplaced\"\n  //   headerName=\"Can be Replaced Ship Staff\"\n  //   headerTooltip=\"Can be Replaced Ship Staff\"\n  //   cellEditor=\"agSelectCellEditor\"\n  //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\n  //   width={200}\n  //   editable={true}\n  // />,\n  // <AgGridColumn\n  //   field=\"ConditionMonitoring\"\n  //   headerName=\"Is System Parameter's Recorded\"\n  //   headerTooltip=\"Is System Parameter's Recorded\"\n  //   width={200}\n  //   cellEditor=\"agSelectCellEditor\"\n  //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\n  //   editable={true}\n  // />,\n  // <AgGridColumn\n  //   field=\"ComponentCriticality\"\n  //   headerName=\"Criticality\"\n  //   width={350}\n  //   cellEditor=\"agSelectCellEditor\"\n  //   cellEditorParams={{\n  //     values: [\n  //       \"\",\n  //       \"Failure leads to hazard or complete loss of functionality.\",\n  //       \"Failure does not lead to hazard but causes partial loss of functionality.\",\n  //       \"Failure does not lead hazard or loss of functionality but significant loss in efficiency.\",\n  //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but causes rapid deterioration of some other critical component.\",\n  //       \"Failure does not lead to hazard or loss of functionality but minor loss in efficiency.\",\n  //       \"Failure does not lead to hazard or loss of functionality but causes rapid deterioration of some other non-critical component.\",\n  //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to significant inconvenience.\",\n  //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to minor inconvenience.\",\n  //     ],\n  //   }}\n  //   editable={true}\n  // />,\n  ];\n  const rowData = systemData // .filter((x) => x.lmu === 1)\n  .map(element => {\n    return {\n      id: uuid(),\n      component_id: element.id,\n      EquipmentName: element.name,\n      RepairType: ele,\n      PreventiveMaintenaceApplicable: \"No\",\n      PreventiveMaintenaceInterval: 0,\n      ComponentsReplaced: \"No\",\n      ConditionMonitoring: \"No\"\n    };\n  });\n\n  const updateFinalRowData = allRows => {\n    debugger;\n    props.tableUpdate(allRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.systemTable,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columnDefs: MaintColumns,\n      rowData: rowData,\n      tableUpdate: updateFinalRowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MaintenanceInfo, \"pGqyY09l2fwOyWqzlFeuO2TaLMs=\", false, function () {\n  return [useSelector];\n});\n\n_c = MaintenanceInfo;\nexport default MaintenanceInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaintenanceInfo\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/systen_configuration/maintenanceInfo/maintenanceInfo.js"],"names":["useEffect","useState","useDispatch","useSelector","Button","CustomSelect","Table","styles","MIrowData","AgGridColumn","v4","uuid","MaintenanceInfo","props","systemData","state","treeData","MaintColumns","values","rowData","map","element","id","component_id","EquipmentName","name","RepairType","ele","PreventiveMaintenaceApplicable","PreventiveMaintenaceInterval","ComponentsReplaced","ConditionMonitoring","updateFinalRowData","allRows","tableUpdate","systemTable"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,UAAU,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeA,QAA3B,CAA9B;AACA,QAAMC,YAAY,GAAG,cACnB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,UAAU,EAAC,gBAFb;AAGE,IAAA,aAAa,EAAC,gBAHhB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UADmB,eAQnB,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,UAAU,EAAC,aAFb;AAGE,IAAA,aAAa,EAAC,aAHhB;AAIE,IAAA,UAAU,EAAC,oBAJb;AAKE,IAAA,gBAAgB,EAAE;AAChBC,MAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,YAAhB;AADQ,KALpB;AAQE,IAAA,KAAK,EAAE,GART;AASE,IAAA,QAAQ,EAAE;AATZ;AAAA;AAAA;AAAA;AAAA,UARmB,CAmBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEmB,GAArB;AA4EA,QAAMC,OAAO,GAAGL,UAAU,CACxB;AADwB,GAEvBM,GAFa,CAERC,OAAD,IAAa;AAChB,WAAO;AACLC,MAAAA,EAAE,EAAEX,IAAI,EADH;AAELY,MAAAA,YAAY,EAAEF,OAAO,CAACC,EAFjB;AAGLE,MAAAA,aAAa,EAAEH,OAAO,CAACI,IAHlB;AAILC,MAAAA,UAAU,EAAEC,GAJP;AAKLC,MAAAA,8BAA8B,EAAE,IAL3B;AAMLC,MAAAA,4BAA4B,EAAE,CANzB;AAOLC,MAAAA,kBAAkB,EAAE,IAPf;AAQLC,MAAAA,mBAAmB,EAAE;AARhB,KAAP;AAUD,GAba,CAAhB;;AAcA,QAAMC,kBAAkB,GAAIC,OAAD,IAAa;AACtC;AACApB,IAAAA,KAAK,CAACqB,WAAN,CAAkBD,OAAlB;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC4B,WAAvB;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,UAAU,EAAElB,YADd;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,WAAW,EAAEa;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzGD;;GAAMpB,e;UACeT,W;;;KADfS,e;AA2GN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { MIrowData } from \"../SystemConfigurationTable.js\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst MaintenanceInfo = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const MaintColumns = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment name\"\r\n      headerTooltip=\"Equipment name\"\r\n      width={150}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"RepairType\"\r\n      headerName=\"Repair Type\"\r\n      headerTooltip=\"Repair Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Replaceable\", \"Repairable\"],\r\n      }}\r\n      width={160}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"PreventiveMaintenaceApplicable\"\r\n    //   headerName=\"Preventive Maintenace Applicable\"\r\n    //   headerTooltip=\"Preventive Maintenace Applicable\"\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n    //   width={200}\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"PreventiveMaintenaceInterval\"\r\n    //   headerName=\"Preventive Maintenace Interval (hrs)\"\r\n    //   headerTooltip=\"Preventive Maintenace Interval (hrs)\"\r\n    //   type=\"number\"\r\n    //   width={200}\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"ComponentsReplaced\"\r\n    //   headerName=\"Can be Replaced Ship Staff\"\r\n    //   headerTooltip=\"Can be Replaced Ship Staff\"\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n    //   width={200}\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"ConditionMonitoring\"\r\n    //   headerName=\"Is System Parameter's Recorded\"\r\n    //   headerTooltip=\"Is System Parameter's Recorded\"\r\n    //   width={200}\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"ComponentCriticality\"\r\n    //   headerName=\"Criticality\"\r\n    //   width={350}\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{\r\n    //     values: [\r\n    //       \"\",\r\n    //       \"Failure leads to hazard or complete loss of functionality.\",\r\n    //       \"Failure does not lead to hazard but causes partial loss of functionality.\",\r\n    //       \"Failure does not lead hazard or loss of functionality but significant loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but causes rapid deterioration of some other critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but minor loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but causes rapid deterioration of some other non-critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to significant inconvenience.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to minor inconvenience.\",\r\n    //     ],\r\n    //   }}\r\n    //   editable={true}\r\n    // />,\r\n  ];\r\n\r\n  const rowData = systemData\r\n    // .filter((x) => x.lmu === 1)\r\n    .map((element) => {\r\n      return {\r\n        id: uuid(),\r\n        component_id: element.id,\r\n        EquipmentName: element.name,\r\n        RepairType: ele,\r\n        PreventiveMaintenaceApplicable: \"No\",\r\n        PreventiveMaintenaceInterval: 0,\r\n        ComponentsReplaced: \"No\",\r\n        ConditionMonitoring: \"No\",\r\n      };\r\n    });\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={MaintColumns}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceInfo;\r\n"]},"metadata":{},"sourceType":"module"}