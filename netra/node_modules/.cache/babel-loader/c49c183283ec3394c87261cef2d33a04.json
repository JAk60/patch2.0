{"ast":null,"code":"var _jsxFileName = \"D:\\\\NetraB\\\\netra\\\\src\\\\pages\\\\Bayesian\\\\bayesian_input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewModule from \"../../components/module/NewModule\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport UserSelection from \"../../ui/userSelection/userSelection\";\nimport styles from \"./UserSelectionConfiguration.module.css\";\nimport { AgGridColumn } from \"ag-grid-react\";\nimport Table from \"../../ui/Table/DataManagerTable\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\nimport ustyles from '../systen_configuration/SystemConfiguration.module.css'; //From Add new equipment form\n\nimport { userActions } from \"../../store/ApplicationVariable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { treeDataActions } from \"../../store/TreeDataStore\";\nimport classes from \"./EqptStructuring.module.css\";\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\"; // import Tree from \"./Tree\";\n// import TreeComponent from \"../../sortableTree/SortableTree\";\n\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"0 2.5em\"\n  }\n});\nconst SystemStyles = makeStyles({\n  formControl: {\n    margin: \"2rem\",\n    minWidth: 200\n  },\n  Submit: {\n    margin: \"2rem\"\n  },\n  buttons: {\n    minWidth: 150,\n    marginLeft: 10,\n    marginTop: 15,\n    float: \"right\"\n  }\n});\n\nconst Bayesian_Inputs = props => {\n  _s();\n\n  const SystemClasses = SystemStyles();\n  const dispatch = useDispatch();\n  const selectedInputs = useSelector(state => state.userSelection.currentSelection);\n  const currentSelection = useSelector(state => state.userSelection.currentSelection);\n  const [disableButton, setDisableButton] = useState(false);\n  let fData = useSelector(state => state.treeData.treeData); //   const [gridApi, setGridApi] = useState(null);\n\n  const [SnackBarMessage, setSnackBarMessage] = useState({\n    severity: \"error\",\n    message: \"This is awesome\",\n    showSnackBar: false\n  });\n\n  const onHandleSnackClose = () => {\n    setSnackBarMessage({\n      severity: \"error\",\n      message: \"Close\",\n      showSnackBar: false\n    });\n  };\n\n  const [parentFiledValue, setParentFieldValue] = useState({\n    title: \"\",\n    name: \"\",\n    children: [],\n    id: \"\",\n    eqType: \"\",\n    parentName: \"\",\n    parentId: \"\",\n    lmu: 1\n  });\n  const classesButton = useStyles();\n\n  const parentOnChange = (e, value) => {\n    debugger;\n    setParentFieldValue(value);\n  };\n\n  const clearForm = e => {\n    e.preventDefault();\n    setDisableButton(false);\n    dispatch(treeDataActions.setTreeData({\n      treeData: []\n    }));\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      command: \"\",\n      ship_name: \"\",\n      department: \"\",\n      shipClass: \"\",\n      shipC: \"\"\n    },\n    //validationSchema: validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      // alert(JSON.stringify(values, null, 2));\n      debugger; //   const { platform, platformType, system, systemType } = values;\n\n      console.log(values);\n      fetch(\"/addUserSelectionData\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          values\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.code == 1) {\n          // resetForm()\n          setSnackBarMessage({\n            severity: \"success\",\n            message: data.message,\n            showSnackBar: true\n          });\n        } else {\n          setSnackBarMessage({\n            severity: \"error\",\n            message: data.message,\n            showSnackBar: true\n          });\n        }\n      }); //   \n      //   const platformId = uuid();\n      //   const systemId = uuid();\n      //   debugger;\n      //   const treeNodes = [\n      //     {\n      //       name: system,\n      //       id: systemId,\n      //       eqType: systemType,\n      //       parentName: selectedInputs[\"shipName\"],\n      //       parentId: null,\n      //       parent: null,\n      //       children: [],\n      //       lmu: 1,\n      //       command: selectedInputs[\"command\"],\n      //       department: selectedInputs[\"department\"],\n      //       shipCategory: selectedInputs[\"shipCategory\"],\n      //       shipClass: selectedInputs[\"shipClass\"],\n      //       shipName: selectedInputs[\"shipName\"],\n      //     },\n      //   ];\n      //   const updateEqStore = {\n      //     equipmentName: system,\n      //     equipmentCode: systemType,\n      //   };\n      //   const filteredData = {\n      //     equipmentName: [system],\n      //     equipmentCode: [systemType],\n      //   };\n      //   dispatch(treeDataActions.addElement({ data: treeNodes }));\n      //   dispatch(\n      //     userActions.onAddingEquipmentName({\n      //       selectedData: updateEqStore,\n      //       filteredData: filteredData,\n      //     })\n      //   );\n      //   setDisableButton(true);\n    }\n  }); //Save Button Handler\n\n  const onSaveButtonClickHandler = () => {\n    alert(\"Hello\");\n  };\n\n  const onLoadTreeStructure = () => {\n    fetch(\"/fetch_system\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        system: currentSelection[\"equipmentName\"],\n        ship_name: currentSelection[\"shipName\"]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json()).then(d => {\n      let treeD = d[\"treeD\"];\n      let failureModes = d[\"failureMode\"];\n      dispatch(treeDataActions.setTreeData({\n        treeData: treeD,\n        failureModes: failureModes\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ustyles.flex,\n        style: {\n          marginTop: \"5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: ustyles.user,\n          children: /*#__PURE__*/_jsxDEV(UserSelection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: SystemClasses.buttons,\n            onClick: onLoadTreeStructure,\n            children: \"Load System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header,\n            children: \"Add Current Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              width: \"100%\"\n            },\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Component Current Age\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"command\",\n                  name: \"command\",\n                  value: formik.values.command,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Select Parameter\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"shipC\",\n                  name: \"shipC\",\n                  value: formik.values.shipC,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Current Parameter Value\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"cpv\",\n                  name: \"cpv\",\n                  value: formik.values.shipClass,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Projected Days\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"p_days\",\n                  name: \"p_days\",\n                  value: formik.values.department,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formrow1,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: [/*#__PURE__*/_jsxDEV(LabelToolTip, {\n                  label: \"Number of Phases\",\n                  info: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n                  className: classes.fullWidth,\n                  id: \"n_phases\",\n                  name: \"n_phases\",\n                  value: formik.values.ship_name,\n                  onChange: formik.handleChange,\n                  disabled: disableButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.field1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classesButton.root,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), SnackBarMessage.showSnackBar && /*#__PURE__*/_jsxDEV(CustomizedSnackbars, {\n      message: SnackBarMessage,\n      onHandleClose: onHandleSnackClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Bayesian_Inputs, \"Bg5kSQJxCCb3/STgT5G3LM6iSvI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useStyles, useFormik];\n});\n\n_c = Bayesian_Inputs;\nexport default Bayesian_Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bayesian_Inputs\");","map":{"version":3,"sources":["D:/NetraB/netra/src/pages/Bayesian/bayesian_input.js"],"names":["React","useEffect","useState","NewModule","Navigation","UserSelection","styles","AgGridColumn","Table","Button","makeStyles","Grid","AddIcon","v4","uuidv4","DeleteIcon","CustomizedSnackbars","ustyles","userActions","useDispatch","useSelector","treeDataActions","classes","LabelToolTip","CustomTextInput","CustomSelect","AutoSelect","useFormik","uuid","Route","useStyles","root","margin","SystemStyles","formControl","minWidth","Submit","buttons","marginLeft","marginTop","float","Bayesian_Inputs","props","SystemClasses","dispatch","selectedInputs","state","userSelection","currentSelection","disableButton","setDisableButton","fData","treeData","SnackBarMessage","setSnackBarMessage","severity","message","showSnackBar","onHandleSnackClose","parentFiledValue","setParentFieldValue","title","name","children","id","eqType","parentName","parentId","lmu","classesButton","parentOnChange","e","value","clearForm","preventDefault","setTreeData","formik","resetForm","initialValues","command","ship_name","department","shipClass","shipC","onSubmit","values","console","log","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","code","onSaveButtonClickHandler","alert","onLoadTreeStructure","system","d","treeD","failureModes","flex","user","table","form","header","width","handleSubmit","formrow1","field1","fullWidth","handleChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport styles from \"./UserSelectionConfiguration.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\nimport ustyles from '../systen_configuration/SystemConfiguration.module.css'\r\n//From Add new equipment form\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\nimport classes from \"./EqptStructuring.module.css\";\r\nimport LabelToolTip from \"../../components/main/EqptStructuring/LabelToolTip/LabelToolTip\";\r\n// import Tree from \"./Tree\";\r\n// import TreeComponent from \"../../sortableTree/SortableTree\";\r\nimport CustomTextInput from \"../../ui/Form/CustomTextInput\";\r\nimport CustomSelect from \"../../ui/Form/CustomSelect\";\r\nimport AutoSelect from \"../../ui/Form/AutoSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\"; \r\nimport { Route } from \"react-router-dom/cjs/react-router-dom.min\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      margin: \"0 2.5em\",\r\n    },\r\n  });\r\n  \r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\nconst Bayesian_Inputs = (props) => {\r\n  const SystemClasses = SystemStyles();\r\n  const dispatch = useDispatch();\r\n  const selectedInputs = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  let fData = useSelector((state) => state.treeData.treeData);\r\n//   const [gridApi, setGridApi] = useState(null);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Close\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const [parentFiledValue, setParentFieldValue] = useState({\r\n    title: \"\",\r\n    name: \"\",\r\n    children: [],\r\n    id: \"\",\r\n    eqType: \"\",\r\n    parentName: \"\",\r\n    parentId: \"\",\r\n    lmu: 1,\r\n  });\r\n\r\n  const classesButton = useStyles();\r\n  const parentOnChange = (e, value) => {\r\n    debugger\r\n    setParentFieldValue(value);\r\n  };\r\n  const clearForm = (e) => {\r\n    e.preventDefault();\r\n    setDisableButton(false);\r\n    dispatch(treeDataActions.setTreeData({ treeData: [] }));\r\n    formik.resetForm();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        command: \"\",\r\n      ship_name: \"\",\r\n      department: \"\",\r\n      shipClass: \"\",\r\n      shipC: \"\",\r\n    },\r\n    //validationSchema: validationSchema,\r\n    onSubmit: (values, {resetForm}) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      debugger;\r\n    //   const { platform, platformType, system, systemType } = values;\r\n      console.log(values);\r\n      fetch(\"/addUserSelectionData\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({values}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n            if (data.code == 1){\r\n                // resetForm()\r\n          setSnackBarMessage({\r\n            severity: \"success\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        }else{\r\n            setSnackBarMessage({\r\n                severity: \"error\",\r\n                message: data.message,\r\n                showSnackBar: true,\r\n              });\r\n        }\r\n        })\r\n    //   \r\n    //   const platformId = uuid();\r\n    //   const systemId = uuid();\r\n    //   debugger;\r\n    //   const treeNodes = [\r\n    //     {\r\n    //       name: system,\r\n    //       id: systemId,\r\n    //       eqType: systemType,\r\n    //       parentName: selectedInputs[\"shipName\"],\r\n    //       parentId: null,\r\n    //       parent: null,\r\n    //       children: [],\r\n    //       lmu: 1,\r\n    //       command: selectedInputs[\"command\"],\r\n    //       department: selectedInputs[\"department\"],\r\n    //       shipCategory: selectedInputs[\"shipCategory\"],\r\n    //       shipClass: selectedInputs[\"shipClass\"],\r\n    //       shipName: selectedInputs[\"shipName\"],\r\n    //     },\r\n    //   ];\r\n    //   const updateEqStore = {\r\n    //     equipmentName: system,\r\n    //     equipmentCode: systemType,\r\n    //   };\r\n    //   const filteredData = {\r\n    //     equipmentName: [system],\r\n    //     equipmentCode: [systemType],\r\n    //   };\r\n    //   dispatch(treeDataActions.addElement({ data: treeNodes }));\r\n    //   dispatch(\r\n    //     userActions.onAddingEquipmentName({\r\n    //       selectedData: updateEqStore,\r\n    //       filteredData: filteredData,\r\n    //     })\r\n    //   );\r\n    //   setDisableButton(true);\r\n    },\r\n  });\r\n\r\n\r\n\r\n  //Save Button Handler\r\nconst onSaveButtonClickHandler = () => {\r\n  alert(\"Hello\")\r\n} \r\n\r\nconst onLoadTreeStructure = () => {\r\n  fetch(\"/fetch_system\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      system: currentSelection[\"equipmentName\"],\r\n      ship_name: currentSelection[\"shipName\"],\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((d) => {\r\n      let treeD = d[\"treeD\"];\r\n      let failureModes = d[\"failureMode\"];\r\n      dispatch(\r\n        treeDataActions.setTreeData({\r\n          treeData: treeD,\r\n          failureModes: failureModes,\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        {/* <div className={styles.user}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={SystemClasses.buttons}\r\n            onClick={onSaveButtonClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div> */}\r\n        <div className={ustyles.flex} style={{ marginTop: \"5rem\" }}>\r\n          <div className={ustyles.user} ><UserSelection /></div>\r\n          <div className={styles.buttons}>\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={SystemClasses.buttons}\r\n                onClick={onLoadTreeStructure}\r\n              >\r\n                Load System\r\n              </Button>\r\n        </div>\r\n          </div>\r\n        \r\n        <div className={styles.table}>\r\n          {/* <Table\r\n            rowData={rowState}\r\n            columnDefs={MProfileColumns}\r\n            tableUpdate={setFinalTableData}\r\n            setGrid={setGridApi}\r\n            gridApi={gridApi}\r\n          /> */}\r\n         <div className={classes.form}>\r\n      <div className={classes.header}>Add Current Data</div>\r\n        <form style={{ width: \"100%\" }} onSubmit={formik.handleSubmit}>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"Component Current Age\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"command\"\r\n                name=\"command\"\r\n                value={formik.values.command}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"Select Parameter\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"shipC\"\r\n                name=\"shipC\"\r\n                value={formik.values.shipC}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n          </div>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"Current Parameter Value\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"cpv\"\r\n                name=\"cpv\"\r\n                value={formik.values.shipClass}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"Projected Days\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"p_days\"\r\n                name=\"p_days\"\r\n                value={formik.values.department}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n          </div>\r\n          <div className={classes.formrow1}>\r\n            <div className={classes.field1}>\r\n              <LabelToolTip label=\"Number of Phases\" info=\"Info\" />\r\n              <CustomTextInput\r\n                className={classes.fullWidth}\r\n                id=\"n_phases\"\r\n                name=\"n_phases\"\r\n                value={formik.values.ship_name}\r\n                onChange={formik.handleChange}\r\n                disabled={disableButton}\r\n              ></CustomTextInput>\r\n            </div>\r\n            <div className={classes.field1}>\r\n            <Button\r\n                className={classesButton.root}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n       \r\n      </div>\r\n          {/* <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bayesian_Inputs;\r\n"]},"metadata":{},"sourceType":"module"}