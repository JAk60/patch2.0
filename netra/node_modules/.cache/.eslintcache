[{"D:\\IITB\\Netra\\netra\\src\\index.js":"1","D:\\IITB\\Netra\\netra\\src\\App.js":"2","D:\\IITB\\Netra\\netra\\src\\store\\index.js":"3","D:\\IITB\\Netra\\netra\\src\\store\\elements.js":"4","D:\\IITB\\Netra\\netra\\src\\store\\Levels.js":"5","D:\\IITB\\Netra\\netra\\src\\store\\PhaseStore.js":"6","D:\\IITB\\Netra\\netra\\src\\store\\TreeDataStore.js":"7","D:\\IITB\\Netra\\netra\\src\\store\\ApplicationVariable.js":"8","D:\\IITB\\Netra\\netra\\src\\store\\taskStore.js":"9","D:\\IITB\\Netra\\netra\\src\\pages\\Bayesian\\bayesian_input.js":"10","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\DataManager.js":"11","D:\\IITB\\Netra\\netra\\src\\pages\\CDashboard\\CDashboard.js":"12","D:\\IITB\\Netra\\netra\\src\\pages\\Help\\Help.js":"13","D:\\IITB\\Netra\\netra\\src\\pages\\Module Selection\\ModuleSelection.js":"14","D:\\IITB\\Netra\\netra\\src\\pages\\Home\\Home.js":"15","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\HEP.js":"16","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\MaintenanceAllocation.js":"17","D:\\IITB\\Netra\\netra\\src\\pages\\Mission Profile\\MissionProfile.js":"18","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\new.js":"19","D:\\IITB\\Netra\\netra\\src\\pages\\RUL\\RulLife.js":"20","D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\pm.js":"21","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityDashboard.js":"22","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\configureHistory2.js":"23","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\SignIn.js":"24","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\SignUp.js":"25","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Phasemanager.js":"26","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\configureHistory.js":"27","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\userApproval.js":"28","D:\\IITB\\Netra\\netra\\src\\pages\\System Docs\\SysDocs.js":"29","D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\ForgotPassword\\Forgot_Password.js":"30","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\DragNdrop.js":"31","D:\\IITB\\Netra\\netra\\src\\pages\\ViewData\\ViewData.js":"32","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfiguration.js":"33","D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskDashboard.js":"34","D:\\IITB\\Netra\\netra\\src\\pages\\userSelectionConfig\\UserSelectionConfiguration.js":"35","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\PhasetableData.js":"36","D:\\IITB\\Netra\\netra\\src\\pages\\Home\\AccessControl.js":"37","D:\\IITB\\Netra\\netra\\src\\pages\\CDashboard\\CGraph.js":"38","D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\ResTable.js":"39","D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskRenderMultipleComponent.js":"40","D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\PaperTable.js":"41","D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskGridColumns.js":"42","D:\\IITB\\Netra\\netra\\src\\ui\\userSelection\\userSelection.js":"43","D:\\IITB\\Netra\\netra\\src\\ui\\Form\\CustomSelect.js":"44","D:\\IITB\\Netra\\netra\\src\\ui\\CustomSnackBar.js":"45","D:\\IITB\\Netra\\netra\\src\\ui\\Form\\CustomTextInput.js":"46","D:\\IITB\\Netra\\netra\\src\\ui\\Form\\AutoSelect.js":"47","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\DataManagerTable.js":"48","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\importData\\importData.js":"49","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\operationalData\\operationalData.js":"50","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableOverhaul.js":"51","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\historicalData.js":"52","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\parameterEstimation\\parameterEstimation.js":"53","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\maintenanceData.js":"54","D:\\IITB\\Netra\\netra\\src\\components\\navigation\\Navigation.js":"55","D:\\IITB\\Netra\\netra\\src\\components\\module\\NewModule.js":"56","D:\\IITB\\Netra\\netra\\src\\components\\slider\\NewSlider.js":"57","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\additionalInfo\\additionalInfo.js":"58","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\dutyCycle\\dutyCycle.js":"59","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\redundancy.js":"60","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\failureMode.js":"61","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\maintenanceInfo\\maintenanceInfo.js":"62","D:\\IITB\\Netra\\netra\\src\\components\\main\\EqptStructuring\\LabelToolTip\\LabelToolTip.js":"63","D:\\IITB\\Netra\\netra\\src\\components\\main\\EqptStructuring\\EqptStructuring.js":"64","D:\\IITB\\Netra\\netra\\src\\components\\navigation\\MuiFap.js":"65","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\EquipmentName.js":"66","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\Table.js":"67","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\IntervalData.js":"68","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\nprd.js":"69","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oemExpert.js":"70","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\failureDataPoint.js":"71","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\probabilityFailure.js":"72","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\expert.js":"73","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oem.js":"74","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\RenderParallelComponent.js":"75","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\selectEquipment.js":"76","D:\\IITB\\Netra\\netra\\src\\components\\sortableTree\\SortableTreeData.js":"77","D:\\IITB\\Netra\\netra\\src\\components\\sortableTree\\SortableTree.js":"78","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\MultiSelect.js":"79","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfigurationTable.js":"80","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\EquipmentName.js":"81","D:\\IITB\\Netra\\netra\\src\\components\\navigation\\SideBarData.js":"82","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\OverhaulEntryTable.js":"83","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\RepairableSubTableMaual.js":"84","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableSubTable.js":"85","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\OverhaulTable.js":"86","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\custom.js":"87","D:\\IITB\\Netra\\netra\\src\\ui\\userSelection\\userSelectionData.js":"88","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\Layout\\layout.js":"89","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\DCMultiplier\\dcMultiplier.js":"90","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\LifeMultiplier\\LifeMultiplier.js":"91","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Add\\AddPhase.js":"92","D:\\IITB\\Netra\\netra\\src\\ui\\Form\\SelectWithLimit.js":"93","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\EventCalendar.js":"94","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityChart.js":"95","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\DashboardData.js":"96","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Home\\Home.js":"97","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\BarGraph.js":"98","D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\OptiQ.js":"99","D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\Data.js":"100","D:\\IITB\\Netra\\netra\\src\\pages\\RUL\\RULPredictor.js":"101","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\Flow\\flow.js":"102","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\ComponentDetails.js":"103","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\MissionSlider.js":"104","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\CreateProfile.js":"105","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\Main.js":"106","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\HEPData.js":"107","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\Table2.js":"108","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\CreateRCM.js":"109","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\critical_RCM.js":"110","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ShareMaintenance\\ShareMaintenance.js":"111","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\CreateMaintenance.js":"112","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\AssignType.js":"113","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ModifyandDisplay\\ModifyandDisplayMaintenance.js":"114","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\AddData\\AddData.js":"115","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\EquipmentLevel\\EquipmentLevel.js":"116","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\LifeMultiplier\\LifeMultiplier.js":"117","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\CommanHEP\\CommanHEP.js":"118","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\ComponentLevel\\componentLevel.js":"119","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\SAdmin.js":"120","D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\OptTable.js":"121","D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\GroupTable.js":"122","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\GroupData.js":"123","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\CustomNode\\CustomNode.js":"124","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ContextMenu\\contextMenu.js":"125","D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\SaveHandler.js":"126","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\Manage_User.js":"127","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\AccCreate.js":"128","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\welcome.js":"129","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\Administrator.js":"130","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\AdminInputs.js":"131","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\RegisterEquipment.js":"132","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\DelSpecific.js":"133","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\EtlEquipment.js":"134","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\UnregisterStepper.js":"135"},{"size":605,"mtime":1702997097438,"results":"136","hashOfConfig":"137"},{"size":46764,"mtime":1703049069976,"results":"138","hashOfConfig":"137"},{"size":626,"mtime":1702997094568,"results":"139","hashOfConfig":"137"},{"size":45570,"mtime":1702997097568,"results":"140","hashOfConfig":"137"},{"size":601,"mtime":1702997094567,"results":"141","hashOfConfig":"137"},{"size":807,"mtime":1702997094567,"results":"142","hashOfConfig":"137"},{"size":2397,"mtime":1702997094568,"results":"143","hashOfConfig":"137"},{"size":2950,"mtime":1702997094566,"results":"144","hashOfConfig":"137"},{"size":988,"mtime":1702997094569,"results":"145","hashOfConfig":"137"},{"size":48905,"mtime":1703045022139,"results":"146","hashOfConfig":"137"},{"size":57674,"mtime":1702997097462,"results":"147","hashOfConfig":"137"},{"size":51192,"mtime":1703160638746,"results":"148","hashOfConfig":"137"},{"size":4564,"mtime":1702997094483,"results":"149","hashOfConfig":"137"},{"size":4394,"mtime":1702997094508,"results":"150","hashOfConfig":"137"},{"size":45543,"mtime":1702997097485,"results":"151","hashOfConfig":"137"},{"size":50199,"mtime":1702997097480,"results":"152","hashOfConfig":"137"},{"size":1896,"mtime":1702997094499,"results":"153","hashOfConfig":"137"},{"size":6855,"mtime":1702997097507,"results":"154","hashOfConfig":"137"},{"size":66076,"mtime":1702997097524,"results":"155","hashOfConfig":"137"},{"size":52970,"mtime":1702997097518,"results":"156","hashOfConfig":"137"},{"size":44986,"mtime":1702997097512,"results":"157","hashOfConfig":"137"},{"size":53397,"mtime":1702997097523,"results":"158","hashOfConfig":"137"},{"size":43406,"mtime":1702997097533,"results":"159","hashOfConfig":"137"},{"size":43038,"mtime":1702997097530,"results":"160","hashOfConfig":"137"},{"size":6987,"mtime":1702997094531,"results":"161","hashOfConfig":"137"},{"size":52099,"mtime":1702997097516,"results":"162","hashOfConfig":"137"},{"size":41113,"mtime":1702997097532,"results":"163","hashOfConfig":"137"},{"size":41225,"mtime":1702997097537,"results":"164","hashOfConfig":"137"},{"size":46230,"mtime":1702997097538,"results":"165","hashOfConfig":"137"},{"size":4077,"mtime":1702997094529,"results":"166","hashOfConfig":"137"},{"size":400,"mtime":1702997094550,"results":"167","hashOfConfig":"137"},{"size":41530,"mtime":1703048965940,"results":"168","hashOfConfig":"137"},{"size":55204,"mtime":1702997097557,"results":"169","hashOfConfig":"137"},{"size":64464,"mtime":1702997097541,"results":"170","hashOfConfig":"137"},{"size":47761,"mtime":1703077962254,"results":"171","hashOfConfig":"137"},{"size":3000,"mtime":1702997094517,"results":"172","hashOfConfig":"137"},{"size":39168,"mtime":1702997097485,"results":"173","hashOfConfig":"137"},{"size":45161,"mtime":1702997097458,"results":"174","hashOfConfig":"137"},{"size":44938,"mtime":1702997097540,"results":"175","hashOfConfig":"137"},{"size":43132,"mtime":1702997097543,"results":"176","hashOfConfig":"137"},{"size":41453,"mtime":1702997097539,"results":"177","hashOfConfig":"137"},{"size":1611,"mtime":1702997094542,"results":"178","hashOfConfig":"137"},{"size":49580,"mtime":1703165959255,"results":"179","hashOfConfig":"137"},{"size":1905,"mtime":1702997094572,"results":"180","hashOfConfig":"137"},{"size":1191,"mtime":1702997094570,"results":"181","hashOfConfig":"137"},{"size":1437,"mtime":1702997094572,"results":"182","hashOfConfig":"137"},{"size":1497,"mtime":1702997094571,"results":"183","hashOfConfig":"137"},{"size":50074,"mtime":1702997097576,"results":"184","hashOfConfig":"137"},{"size":2043,"mtime":1702997094463,"results":"185","hashOfConfig":"137"},{"size":41877,"mtime":1702997097463,"results":"186","hashOfConfig":"137"},{"size":41053,"mtime":1702997097463,"results":"187","hashOfConfig":"137"},{"size":48487,"mtime":1702997097463,"results":"188","hashOfConfig":"137"},{"size":45101,"mtime":1702997097463,"results":"189","hashOfConfig":"137"},{"size":5545,"mtime":1702997094463,"results":"190","hashOfConfig":"137"},{"size":2479,"mtime":1702997094438,"results":"191","hashOfConfig":"137"},{"size":4059,"mtime":1702997094438,"results":"192","hashOfConfig":"137"},{"size":1869,"mtime":1702997094438,"results":"193","hashOfConfig":"137"},{"size":42704,"mtime":1702997097559,"results":"194","hashOfConfig":"137"},{"size":1273,"mtime":1702997094560,"results":"195","hashOfConfig":"137"},{"size":4191,"mtime":1702997097563,"results":"196","hashOfConfig":"137"},{"size":42325,"mtime":1702997097561,"results":"197","hashOfConfig":"137"},{"size":4234,"mtime":1702997094562,"results":"198","hashOfConfig":"137"},{"size":557,"mtime":1702997094438,"results":"199","hashOfConfig":"137"},{"size":58102,"mtime":1702997097438,"results":"200","hashOfConfig":"137"},{"size":891,"mtime":1702997094438,"results":"201","hashOfConfig":"137"},{"size":2570,"mtime":1702997097463,"results":"202","hashOfConfig":"137"},{"size":43974,"mtime":1702997097578,"results":"203","hashOfConfig":"137"},{"size":42324,"mtime":1702997097463,"results":"204","hashOfConfig":"137"},{"size":3708,"mtime":1702997094463,"results":"205","hashOfConfig":"137"},{"size":44765,"mtime":1702997097463,"results":"206","hashOfConfig":"137"},{"size":43664,"mtime":1702997097463,"results":"207","hashOfConfig":"137"},{"size":3507,"mtime":1702997094463,"results":"208","hashOfConfig":"137"},{"size":4172,"mtime":1702997094463,"results":"209","hashOfConfig":"137"},{"size":44415,"mtime":1702997097463,"results":"210","hashOfConfig":"137"},{"size":4141,"mtime":1702997097563,"results":"211","hashOfConfig":"137"},{"size":39697,"mtime":1702997097463,"results":"212","hashOfConfig":"137"},{"size":257,"mtime":1702997094438,"results":"213","hashOfConfig":"137"},{"size":39838,"mtime":1702997097438,"results":"214","hashOfConfig":"137"},{"size":2929,"mtime":1702997094463,"results":"215","hashOfConfig":"137"},{"size":5384,"mtime":1702997094559,"results":"216","hashOfConfig":"137"},{"size":2499,"mtime":1702997097561,"results":"217","hashOfConfig":"137"},{"size":718,"mtime":1702997094438,"results":"218","hashOfConfig":"137"},{"size":42584,"mtime":1702997097463,"results":"219","hashOfConfig":"137"},{"size":43747,"mtime":1702997097463,"results":"220","hashOfConfig":"137"},{"size":42981,"mtime":1702997097463,"results":"221","hashOfConfig":"137"},{"size":46984,"mtime":1702997097577,"results":"222","hashOfConfig":"137"},{"size":55874,"mtime":1702997097463,"results":"223","hashOfConfig":"137"},{"size":61,"mtime":1702997094580,"results":"224","hashOfConfig":"137"},{"size":55489,"mtime":1702997097555,"results":"225","hashOfConfig":"137"},{"size":2371,"mtime":1702997094514,"results":"226","hashOfConfig":"137"},{"size":3228,"mtime":1702997094515,"results":"227","hashOfConfig":"137"},{"size":6093,"mtime":1702997097513,"results":"228","hashOfConfig":"137"},{"size":4055,"mtime":1702997094573,"results":"229","hashOfConfig":"137"},{"size":41344,"mtime":1702997097521,"results":"230","hashOfConfig":"137"},{"size":40917,"mtime":1702997097522,"results":"231","hashOfConfig":"137"},{"size":4776,"mtime":1702997094521,"results":"232","hashOfConfig":"137"},{"size":3280,"mtime":1702997094515,"results":"233","hashOfConfig":"137"},{"size":1858,"mtime":1702997097520,"results":"234","hashOfConfig":"137"},{"size":41847,"mtime":1702997097511,"results":"235","hashOfConfig":"137"},{"size":4590,"mtime":1702997094509,"results":"236","hashOfConfig":"137"},{"size":45822,"mtime":1702997097518,"results":"237","hashOfConfig":"137"},{"size":10820,"mtime":1702997097553,"results":"238","hashOfConfig":"137"},{"size":47599,"mtime":1702997097547,"results":"239","hashOfConfig":"137"},{"size":304,"mtime":1702997094521,"results":"240","hashOfConfig":"137"},{"size":46368,"mtime":1702997097520,"results":"241","hashOfConfig":"137"},{"size":2242,"mtime":1702997094498,"results":"242","hashOfConfig":"137"},{"size":3071,"mtime":1702997094482,"results":"243","hashOfConfig":"137"},{"size":42913,"mtime":1702997097579,"results":"244","hashOfConfig":"137"},{"size":44325,"mtime":1702997097502,"results":"245","hashOfConfig":"137"},{"size":69578,"mtime":1702997097503,"results":"246","hashOfConfig":"137"},{"size":41834,"mtime":1702997097504,"results":"247","hashOfConfig":"137"},{"size":43581,"mtime":1702997097495,"results":"248","hashOfConfig":"137"},{"size":68728,"mtime":1702997097494,"results":"249","hashOfConfig":"137"},{"size":45762,"mtime":1702997097501,"results":"250","hashOfConfig":"137"},{"size":52442,"mtime":1702997097493,"results":"251","hashOfConfig":"137"},{"size":3300,"mtime":1702997094479,"results":"252","hashOfConfig":"137"},{"size":2041,"mtime":1702997097483,"results":"253","hashOfConfig":"137"},{"size":5621,"mtime":1702997094463,"results":"254","hashOfConfig":"137"},{"size":2180,"mtime":1702997094463,"results":"255","hashOfConfig":"137"},{"size":4781,"mtime":1702997094527,"results":"256","hashOfConfig":"137"},{"size":43358,"mtime":1702997097511,"results":"257","hashOfConfig":"137"},{"size":42784,"mtime":1702997097510,"results":"258","hashOfConfig":"137"},{"size":807,"mtime":1702997094548,"results":"259","hashOfConfig":"137"},{"size":39001,"mtime":1702997097549,"results":"260","hashOfConfig":"137"},{"size":39371,"mtime":1702997097548,"results":"261","hashOfConfig":"137"},{"size":39441,"mtime":1702997097496,"results":"262","hashOfConfig":"137"},{"size":47370,"mtime":1702997097526,"results":"263","hashOfConfig":"137"},{"size":6633,"mtime":1702997094526,"results":"264","hashOfConfig":"137"},{"size":1814,"mtime":1702997094527,"results":"265","hashOfConfig":"137"},{"size":42280,"mtime":1703518568144,"results":"266","hashOfConfig":"137"},{"size":43161,"mtime":1703253216832,"results":"267","hashOfConfig":"137"},{"size":42718,"mtime":1703242642423,"results":"268","hashOfConfig":"137"},{"size":11451,"mtime":1703349775535,"results":"269","hashOfConfig":"137"},{"size":44864,"mtime":1703410970798,"results":"270","hashOfConfig":"137"},{"size":5072,"mtime":1703416983405,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wobr6",{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"278"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"278"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"278"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"278"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"278"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"278"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"278"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"278"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"278"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"278"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"278"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"278"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"278"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"278"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"278"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"278"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"278"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"278"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"278"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"278"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"278"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"278"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"278"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"278"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"278"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"278"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"525","messages":"526","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"278"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"278"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"278"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"278"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"278"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"278"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IITB\\Netra\\netra\\src\\index.js",[],"D:\\IITB\\Netra\\netra\\src\\App.js",[],"D:\\IITB\\Netra\\netra\\src\\store\\index.js",[],["575","576"],"D:\\IITB\\Netra\\netra\\src\\store\\elements.js",[],"D:\\IITB\\Netra\\netra\\src\\store\\Levels.js",[],"D:\\IITB\\Netra\\netra\\src\\store\\PhaseStore.js",["577"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MProwData } from \"../pages/Phase_Manager/PhasetableData\";\r\n\r\nconst initialState = {\r\n  phase: [],\r\n};\r\n\r\nconst phase = createSlice({\r\n  name: \"phase\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setPhase(state, action) {\r\n      const phaseData = action.payload.phaseData;\r\n      state.phase = [...state.phase, ...phaseData];\r\n    },\r\n    addPhase(state, action) {\r\n      const newPhase = action.payload.newPhase;\r\n      state.phase = [...state.phase, ...newPhase];\r\n    },\r\n    loadPhase(state, action) {\r\n      const phase_data = action.payload.newPhase;\r\n      // state.phase = [...phase_data];\r\n      state.phase = phase_data;\r\n    },\r\n    //End of Reducers\r\n  },\r\n});\r\n\r\nexport default phase;\r\nexport const phaseActions = phase.actions;\r\n","D:\\IITB\\Netra\\netra\\src\\store\\TreeDataStore.js",[],"D:\\IITB\\Netra\\netra\\src\\store\\ApplicationVariable.js",[],"D:\\IITB\\Netra\\netra\\src\\store\\taskStore.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Bayesian\\bayesian_input.js",["578","579","580","581","582"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\DataManager.js",["583","584","585","586","587","588","589","590","591","592"],"D:\\IITB\\Netra\\netra\\src\\pages\\CDashboard\\CDashboard.js",["593"],"D:\\IITB\\Netra\\netra\\src\\pages\\Help\\Help.js",["594"],"import React, { useState } from \"react\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport classes from \"./Help.module.css\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst modules = {\r\n  \"System Configuration\": {\r\n    info: \" Creating an equipment structure, defining parent- child relations, parallel-series configuration.\",\r\n    pdfLink: \"pdf/system_config_pdf.pdf\",\r\n  },\r\n  \"Reliability Dashboard\": {\r\n    info: \" Displays the reliability of an equipment for the specified duration.\",\r\n    pdfLink: \"pdf/reliblity_dashboard_pdf.pdf\",\r\n  },\r\n  \"Monitoring Dashboard\": {\r\n    info: \" Displays the graph for sensor values\",\r\n    pdfLink: \"pdf/monitoring_dashboard.pdf\",\r\n  },\r\n  \"Mission Reliability Dashboard\": {\r\n    info: \" Displays the reliability for a particular mission.<br/> User can specify the mission duration, phases and the equipments for the task.\",\r\n    pdfLink: \"pdf/mission_rel_dashboard_pdf.pdf\",\r\n  },\r\n  \"Mission Configuration\": {\r\n    info: \"User can configure the task and select equipments for the particular task\",\r\n    pdfLink: \"pdf/mission_configuration_pdf.pdf\",\r\n  },\r\n  \"View Or UpdateData\": {\r\n    info: ` A) Data Manager - monthly utilisation,maintenance data <br/>\r\n      B) Equipment Related Data - Parameter estimation using historical data <br/>\r\n      C) User Selection Configuration - Adding a new ship <br/>\r\n      D) Add System Documents - Documents related with equipments (Manuals/Training books) <br/>\r\n      E) Add Sensor Data`,\r\n    pdfLink: \"/view_data_pdf\",\r\n  },\r\n  \"Maintenance Allocation\": {\r\n    info: `A) Create maintenance plan-To specify maintenance plans (Sensor based / Inspection based )\r\n              To specify sensors<br/>\r\n          B) Conduct RCM analysis `,\r\n    pdfLink: \"/maintenance_allocation_pdf\",\r\n  },\r\n  \"Time To Failure RUL\": {\r\n    info: \" Remaining useful life prediction\",\r\n    pdfLink: \"pdf/rul_pdf.pdf\",\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction Help() {\r\n  const [expanded, setExpanded] = useState(null);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : null);\r\n  };\r\n  const handleDownload = (moduleName) => {\r\n    debugger\r\n    const module = modules[moduleName];\r\n\r\n    if (module && module.pdfLink) {\r\n      fetch(module.pdfLink)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n          const url = window.URL.createObjectURL(new Blob([blob]));\r\n          const a = document.createElement('a');\r\n          a.href = url;\r\n          a.download = `${moduleName}.pdf`; // Set desired file name here\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          a.remove();\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className={classes.background}\r\n    style={{ backgroundImage: \"url(/wave2.svg)\" }}\r\n    >\r\n      <div className={classes.flex}>\r\n        <Navigation />\r\n        <div className={classes.content}>\r\n          <div className={classes.text_heading}>\r\n              NETRA DOCUMENTATION\r\n          </div>\r\n          {Object.keys(modules).map((module, index) => (\r\n            <Accordion\r\n              key={index}\r\n              expanded={expanded === module}\r\n              onChange={handleChange(module)}\r\n              className={classes.accordion}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={`${module}-content`}\r\n                id={`${module}-header`}\r\n              >\r\n                <div className={classes.heading}>{module}</div>\r\n              </AccordionSummary>\r\n              <AccordionDetails className={classes.info}>\r\n                <Typography variant=\"h6\" dangerouslySetInnerHTML={{ __html: modules[module].info }}></Typography>\r\n                <button onClick={() => handleDownload(module)} className={classes.button}>\r\n                  GET DOCUMENT\r\n                </button>\r\n              </AccordionDetails>\r\n\r\n            </Accordion>\r\n          ))}\r\n        </div>\r\n        {/* <img\r\n          src=\"/netra-logo-removebg.png\"\r\n          width={200}\r\n          height={200}\r\n          alt=\"Netra Logo\"\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Module Selection\\ModuleSelection.js",["595","596","597"],"import React,{ useEffect } from 'react'\r\nimport styles from './ModuleSelection.module.css'\r\nimport { \r\n    Paper,\r\n    makeStyles,\r\n    FormControlLabel,\r\n    Switch,\r\n    FormGroup, \r\n    Button} \r\n    from '@material-ui/core'\r\n\r\nconst LabelStyles = makeStyles({\r\n    root: {\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        margin:'15px 0px 5px 0px',\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n        minWidth:300,\r\n        background: \"#ebebeb\",\r\n        borderRadius: \"5px\",\r\n        height: 40,\r\n        boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n        '&:hover':{\r\n            background: \"#d1d1d1\",\r\n        }\r\n    },\r\n    label: {\r\n        fontSize:20,\r\n        fontWeight:'bold',\r\n    }\r\n  });\r\n\r\nconst ModuleSelection=(props)=>{\r\n    const labelClasses=LabelStyles();\r\n\r\n    const [sysConfig, setSysConfig] = React.useState(true);\r\n    const [phaseManager, setPhaseManager] = React.useState(true);\r\n    const [hep, setHep] = React.useState(true);\r\n    const [dataManager, setDataManager] = React.useState(true);\r\n    const [dashboard, setDashboard] = React.useState(true);\r\n\r\n    const toggleSysConfig = () => {\r\n        setSysConfig((prev) => !prev);\r\n    };\r\n    const togglePhaseManager = () => {\r\n        setPhaseManager((prev) => !prev);\r\n    };\r\n    const toggleHep = () => {\r\n        setHep((prev) => !prev);\r\n    };\r\n    const toggleDataManager = () => {\r\n        setDataManager((prev) => !prev);\r\n    };\r\n    const toggleDashboard = () => {\r\n        setDashboard((prev) => !prev);\r\n    };\r\n\r\n    const save=()=>{\r\n        let settings={\r\n            'SystemConfiguration':sysConfig,\r\n            'PhaseManager':phaseManager,\r\n            'HEP':hep,\r\n            'DataManager':dataManager,\r\n            'ReliabilityDashboard':dashboard,\r\n        }\r\n        localStorage.setItem('settings',JSON.stringify(settings))\r\n        props.setSettings(settings)\r\n        props.history.push('/')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"settings\")){\r\n        let settings=JSON.parse(localStorage.getItem('settings'))\r\n        setSysConfig(settings.SystemConfiguration)\r\n        setPhaseManager(settings.PhaseManager)\r\n        setHep(settings.HEP)\r\n        setDataManager(settings.DataManager)\r\n        setDashboard(settings.ReliabilityDashboard)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        <Paper className={styles.ModulePaper} elevation={5}>\r\n            <div>\r\n                <img src='/netra-logo.png' width={60} height={60}/>\r\n                <div style={{textAlign:'center'}}>NETRA</div>\r\n            </div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h5 style={{margin:0}}>Settings</h5>\r\n                <h6 style={{margin:0}}>Please Select the required modules</h6>\r\n            </div>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={sysConfig} disabled/>}\r\n                    label=\"System Configuration\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={phaseManager} onChange={togglePhaseManager}/>}\r\n                    label=\"Phase Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={hep} onChange={toggleHep} />}\r\n                    label=\"HEP\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dataManager} onChange={toggleDataManager} />}\r\n                    label=\"Data Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dashboard} disabled/>}\r\n                    label=\"Reliability Dashboard\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </FormGroup>\r\n            <Button variant='contained' color='secondary' onClick={()=>save()}>Save</Button>\r\n        </Paper>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ModuleSelection;","D:\\IITB\\Netra\\netra\\src\\pages\\Home\\Home.js",["598","599","600","601"],"D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\HEP.js",["602","603","604","605","606","607","608","609","610","611","612","613","614","615"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\MaintenanceAllocation.js",["616","617","618","619","620","621","622"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route} from \"react-router-dom\";\r\nimport AddData from \"./AddData/AddData\";\r\nimport CreateMaintenance from \"./CreateMaintenance/CreateMaintenance\";\r\nimport AssignType from \"./CreateMaintenance/AssignType\";\r\nimport Main from \"./Main\";\r\nimport ModifyandDisplayMaintenance from \"./ModifyandDisplay/ModifyandDisplayMaintenance\";\r\nimport ShareMaintenance from \"./ShareMaintenance/ShareMaintenance\";\r\nimport CreateRCM from \"./RCM/CreateRCM\";\r\nimport Critical_RCM from \"./RCM/critical_RCM\";\r\n\r\nconst MaintenanceAllocation = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    if (!props.loggedIn) {\r\n      props.history.push(\"/sign_in\");\r\n    }\r\n  });\r\n  const Logout = () => {\r\n    props.setLoggedIn(false);\r\n    props.history.push(\"/sign_in\");\r\n  };\r\n  return (<Switch>\r\n          <Route exact path='/maintenance_allocation' component={Main}/>\r\n          <Route path='/maintenance_allocation/assignMaintenance' component={AssignType}/>\r\n          <Route path='/maintenance_allocation/modify' component={ModifyandDisplayMaintenance}/>\r\n          <Route path='/maintenance_allocation/display' component={ModifyandDisplayMaintenance}/>\r\n          <Route path='/maintenance_allocation/share' component={ShareMaintenance}/>\r\n          <Route exact path='/maintenance_allocation/conduct_rcm_analysis/create' component={CreateRCM}/>\r\n          <Route exact path='/maintenance_allocation/conduct_rcm_analysis/critical_comp' component={Critical_RCM}/>\r\n          <Route path='/maintenance_allocation/add_data' component={AddData}/>\r\n          </Switch>\r\n  );\r\n};\r\n\r\nexport default MaintenanceAllocation;\r\n\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Mission Profile\\MissionProfile.js",["623","624"],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\new.js",["625","626","627","628","629"],"D:\\IITB\\Netra\\netra\\src\\pages\\RUL\\RulLife.js",["630","631","632","633","634"],"D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\pm.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityDashboard.js",["635","636","637","638","639","640","641","642","643","644","645","646","647"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\configureHistory2.js",["648","649","650","651","652"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\SignIn.js",["653","654","655","656","657","658","659"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\SignUp.js",["660","661","662","663","664"],"import React, { useState } from 'react';\r\nimport styles from './SignUp.module.css';\r\nimport CustomizedSnackbars from '../../ui/CustomSnackBar';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  InputBase,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n  TextField, // Import the TextField component\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst InputStyles = makeStyles({\r\n  root: {\r\n    margin: '15px 0px 5px 0px',\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    background: \"#ebebeb\",\r\n    borderRadius: \"5px\",\r\n    height: 50,\r\n    // width: '70%',\r\n  },\r\n});\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const [fname, setFname] = useState('');\r\n  // const [lname, setLname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [accessLevel, setAccessLevel] = useState(''); // Add state for access level\r\n  const InputClasses = InputStyles();\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    const data = {\r\n      username: username,   // Replace with the new username to insert\r\n      password: password, // Replace with the new password to insert\r\n      level: accessLevel, // Replace with the new level to insert\r\n    };\r\n\r\n    fetch(\"/insert_user\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => {\r\n\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n\r\n        if(data.code){\r\n          history.push('/sign_in', { message: data.message }); \r\n        }else{\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        }\r\n      })\r\n  }\r\n  const handleHome=()=>{\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Paper className={styles.SignUpPaper} elevation={5}>\r\n        <IconButton  size='Large' onClick={handleHome}>\r\n          {/* <ArrowBackIcon /> */}\r\n          <ArrowBackIosIcon style={{fontSize:\"30px\"}}/>\r\n          <HomeIcon/>\r\n        </IconButton>\r\n        <div className={styles.welcome_text}>\r\n          <img src='/netra-logo-removebg.png' height={300} />\r\n          <div className={styles.netra}>NETRA</div>\r\n        </div>\r\n        <div className={styles.input_fields}>\r\n        <div className={styles.subheading}>\r\n          <Typography variant='h4'>Welcome</Typography>\r\n          <Typography variant='h6'>Create account</Typography>\r\n        </div>\r\n        <form id={styles.signUpForm}>\r\n          <div className={styles.flex}>\r\n            <InputBase\r\n              classes={InputClasses}\r\n              name='username'\r\n              id='username'\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder='Username'\r\n              className={styles.inputField}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.flex}>\r\n            <InputBase\r\n              classes={InputClasses}\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              id='password'\r\n              placeholder='Password'\r\n              className={styles.inputField}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              required\r\n            />\r\n            <InputBase\r\n              classes={InputClasses}\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              id='confirm-password'\r\n              placeholder='Confirm Password'\r\n              className={styles.inputField}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.flex}>\r\n            {/* Level of Access input */}\r\n            <TextField\r\n              select\r\n              label=\"Level of Access\"\r\n              value={accessLevel}\r\n              onChange={(e) => setAccessLevel(e.target.value)}\r\n              variant=\"outlined\"\r\n              className={`${styles.accessLevelInput} ${styles.inputField}`}\r\n            >\r\n              <option value=\"L1\">Ship HoD</option>\r\n              <option value=\"L2\">Ship CO</option>\r\n              <option value=\"L3\">Fleet/ Command HQ</option>\r\n              <option value=\"L4\">NHQ</option>\r\n              <option value=\"L5\">Admin/ INSMA</option>\r\n              <option value=\"L6\">OEM</option>\r\n            </TextField>\r\n          </div>\r\n        </form>\r\n        <Button\r\n          variant='contained'\r\n          style={{ backgroundColor: '#1c4199', color: 'white', marginTop: \"10px\" }}\r\n          onClick={handleCreateAccount}\r\n        >\r\n          Create Account\r\n        </Button>\r\n        </div>\r\n      </Paper>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Phasemanager.js",["665","666"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\configureHistory.js",["667"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\userApproval.js",["668"],"D:\\IITB\\Netra\\netra\\src\\pages\\System Docs\\SysDocs.js",["669","670","671","672","673","674","675"],"D:\\IITB\\Netra\\netra\\src\\pages\\Settings\\ForgotPassword\\Forgot_Password.js",["676"],"import React, { useState } from \"react\";\r\nimport styles from \"./ForgotPass.module.css\";\r\nimport CustomizedSnackbars from \"../../../ui/CustomSnackBar\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  InputBase,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nconst InputStyles = makeStyles({\r\n  root: {\r\n    margin: \"15px 0px 5px 0px\",\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    background: \"#ebebeb\",\r\n    borderRadius: \"5px\",\r\n    height: 50,\r\n  },\r\n});\r\n\r\nconst ForgotPass = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const InputClasses = InputStyles();\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"\",\r\n    showSnackBar: false,\r\n  });\r\n  const history = useHistory();\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    const managerEmail = \"pradeep.patell707@gmail.com\"; // Replace with the actual manager's email\r\n    const subject = \"Forgot Password\";\r\n    const body = `Username: ${username}\\nDetails: ...`;\r\n\r\n    const mailtoLink = `mailto:${managerEmail}?subject=${encodeURIComponent(\r\n      subject\r\n    )}&body=${encodeURIComponent(body)}`;\r\n\r\n    window.location.href = mailtoLink;\r\n\r\n    // The following code remains unchanged\r\n    const data = {\r\n      username: username,\r\n    };\r\n\r\n    fetch(\"/reset_password\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.code) {\r\n          history.push(\"/sign_in\", { message: data.message });\r\n        } else {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleHome=()=>{\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Paper className={styles.SignUpPaper} elevation={5}>\r\n      <IconButton  size='Large' onClick={handleHome}>\r\n          {/* <ArrowBackIcon /> */}\r\n          <ArrowBackIosIcon style={{fontSize:\"30px\"}}/>\r\n          <HomeIcon/>\r\n        </IconButton>\r\n        <div className={styles.welcome_text}>\r\n          <img src=\"/netra-logo-removebg.png\" height={300} alt=\"Netra Logo\" />\r\n          <div className={styles.netra}>NETRA</div>\r\n        </div>\r\n        <div className={styles.input_fields}>\r\n          <div className={styles.subheading}>\r\n            <Typography variant=\"h4\">Welcome</Typography>\r\n            <Typography variant=\"h6\">Please Fill the below Details</Typography>\r\n          </div>\r\n          <form id={styles.signUpForm}>\r\n            <div className={styles.flex}>\r\n              <InputBase\r\n                classes={InputClasses}\r\n                name=\"username\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                className={styles.inputField}\r\n                required\r\n              />\r\n            </div>\r\n          </form>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"#1c4199\",\r\n              color: \"white\",\r\n              marginTop: \"10px\",\r\n            }}\r\n            onClick={handleCreateAccount}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPass;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\DragNdrop.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\ViewData\\ViewData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfiguration.js",["677","678","679","680","681","682","683","684","685"],"D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskDashboard.js",["686","687","688","689","690"],"D:\\IITB\\Netra\\netra\\src\\pages\\userSelectionConfig\\UserSelectionConfiguration.js",["691","692","693","694","695","696"],"D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\PhasetableData.js",["697"],"import { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\r\n\r\nexport const MProwData = [\r\n  {\r\n    PhaseName: \"Load\",\r\n    MeasurementType: \"Quantitative\",\r\n    LowerBound: 0,\r\n    UpperBound: 50,\r\n    Status: \"\",\r\n    PhaseRange: \"L1\",\r\n    Unit: \"Unit\",\r\n    Description: \"Description\",\r\n  },\r\n  {\r\n    PhaseName: \"Load\",\r\n    MeasurementType: \"Quantitative\",\r\n    LowerBound: 51,\r\n    UpperBound: 75,\r\n    Status: \"\",\r\n    PhaseRange: \"L2\",\r\n    Unit: \"Unit\",\r\n    Description: \"Description\",\r\n  },\r\n];\r\nexport const MPcolumnDefs = [\r\n  {\r\n    field: \"PhaseName\",\r\n    headerName: \"Phase name\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"MeasurementType\",\r\n    headerName: \"Measurement Type\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Qualitative\", \"Quantitative\"] },\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"LowerBound\",\r\n    headerName: \"Lower Bound\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"UpperBound\",\r\n    headerName: \"Upper Bound\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Status\",\r\n    headerName: \"Status\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"PhaseRange\",\r\n    headerName: \"PhaseRange\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Unit\",\r\n    headerName: \"Unit\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Km/hr\", \"M/hr\"] },\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Description\",\r\n    headerName: \"Description\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const LMrowData = [];\r\n\r\nexport const LMcolumnDefs = [\r\n  {\r\n    headerName: \"Component\",\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    headerName: \"Load\",\r\n    children: [{ field: \"L1\" }, { field: \"L2\" }, { field: \"L3\" }],\r\n  },\r\n  {\r\n    headerName: \"Ship Mode\",\r\n    children: [{ field: \"Docked\" }, { field: \"Cruise\" }, { field: \"Attack\" }],\r\n  },\r\n];\r\n\r\nexport const DCMrowData = [\r\n  {\r\n    System: \"DA\",\r\n    L1: \"0.52\",\r\n    L2: \"1\",\r\n    L3: \"0.5\",\r\n    Docked: \"1\",\r\n    Cruise: \"1\",\r\n    Attack: \"1\",\r\n  },\r\n];\r\n\r\nexport const DCMcolumnDefs = [\r\n  {\r\n    field: \"System\",\r\n    headerName: \"System\",\r\n    minWidth: 260,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"L1\",\r\n    headerName: \"L1\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"L2\",\r\n    headerName: \"L2\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"L3\",\r\n    headerName: \"L3\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Docked\",\r\n    headerName: \"Docked\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Cruise\",\r\n    headerName: \"Cruise\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Attack\",\r\n    headerName: \"Attack\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const components = [\"Fresh Water Cooling\", \"Component2\", \"Component3\"];\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Home\\AccessControl.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\CDashboard\\CGraph.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\ResTable.js",["698"],"D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskRenderMultipleComponent.js",["699","700","701","702","703"],"D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\PaperTable.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskGridColumns.js",[],"D:\\IITB\\Netra\\netra\\src\\ui\\userSelection\\userSelection.js",["704","705"],"D:\\IITB\\Netra\\netra\\src\\ui\\Form\\CustomSelect.js",["706"],"//Custom Select- Props{id,label,value,onchange,classname,fields}\r\nimport React from \"react\";\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  FormControl,\r\n  InputBase,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst LabelStyles = makeStyles({\r\n  root: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n    position: \"unset\",\r\n    // marginBottom: 10,\r\n  },\r\n});\r\nconst StyledInput = withStyles({\r\n  root: {\r\n    paddingRight: 25,\r\n    paddingLeft: 10,\r\n    background: \"#fff\",\r\n    border: \"1px solid #0263a1\",\r\n    borderRadius: \"5px\",\r\n    width: \"320px\",\r\n    height: \"40px\",\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n})(InputBase);\r\nconst CustomSelect = (props) => {\r\n  const Labelclasses = LabelStyles();\r\n\r\n  return (\r\n    <FormControl className={props.className}>\r\n      <InputLabel id={props.id}  classes={Labelclasses} shrink>\r\n        <Typography variant=\"h5\" sx={{fontSize: \"700\"}}>\r\n        {props.label}\r\n        </Typography>\r\n      </InputLabel>\r\n      {props.value ? (\r\n        <Select\r\n          style={props.style}\r\n          labelId={props.id + \"-label\"}\r\n          id={props.id}\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          input={<StyledInput />}\r\n          value={props.value}\r\n        >\r\n          {props.fields.map((data) => (\r\n            <MenuItem value={data}>{data}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      ) : (\r\n        <Select\r\n          style={props.style}\r\n          labelId={props.id + \"-label\"}\r\n          id={props.id}\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          input={<StyledInput />}\r\n        >\r\n          {props.fields?.map((data) => (\r\n            <MenuItem value={data}>{data}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CustomSelect;\r\n","D:\\IITB\\Netra\\netra\\src\\ui\\CustomSnackBar.js",["707","708"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomizedSnackbars = (props) => {\r\n  // const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(props.message.showSnackBar);\r\n\r\n  // const handleClick = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = (event, reason) => {\r\n  //   if (reason === \"clickaway\") {\r\n  //     return;\r\n  //   }\r\n\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={props.message.showSnackBar}\r\n      autoHideDuration={7000}\r\n      onClose={props.onHandleClose}\r\n    >\r\n      <Alert onClose={props.onHandleClose} severity={props.message.severity}>\r\n        {props.message.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n","D:\\IITB\\Netra\\netra\\src\\ui\\Form\\CustomTextInput.js",[],"D:\\IITB\\Netra\\netra\\src\\ui\\Form\\AutoSelect.js",["709","710"],"import { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst LabelStyles = makeStyles({\r\n  root: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n    position: \"unset\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\nconst InputStyles = makeStyles({\r\n  root: {\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    background: \"#fff\",\r\n    border:'1px solid #0263a1',\r\n    borderRadius: \"5px\",\r\n    // height: 40,\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n});\r\n\r\nexport default function AutoSelect(props) {\r\n  debugger;\r\n  const options = props.fields.map((option) => {\r\n    //const firstLetter = option.parentName.toUpperCase();\r\n    // firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\r\n    return {\r\n      ...option,\r\n    };\r\n  });\r\n  const Labelclasses = LabelStyles();\r\n  const Inputclasses = InputStyles();\r\n  return (\r\n    <Autocomplete\r\n      multiple={props.multiple}\r\n      classes={Inputclasses}\r\n      id=\"grouped-demo\"\r\n      options={options}\r\n      groupBy={(option) => option.parentName}\r\n      // getOptionLabel={(option) => option.name}\r\n      getOptionLabel={(option) => option.nomenclature || \"\"}\r\n      //style={{ width: 300 }}\r\n      value={props.value || null}\r\n      onChange={props.onChange}\r\n      renderInput={(params) => <TextField  {...params} InputProps={{...params.InputProps, disableUnderline: true}} />}\r\n    />\r\n  );\r\n}\r\n","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\DataManagerTable.js",["711","712"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\importData\\importData.js",["713"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst ImportData = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const rows = props.childList.map((x) => {\r\n    return {\r\n      id: x.id,\r\n      ComponentName: x.name,\r\n      ScaleParameter: \"\",\r\n      ShapeParameter: \"\",\r\n    };\r\n  });\r\n  const ImportColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      minWidth={200}\r\n      checkboxSelection={true}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ScaleParameter\"\r\n      headerName=\"Scale Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ShapeParameter\"\r\n      headerName=\"Shape Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger;\r\n    props.tableUpdate(allRows, \"import_replacable\");\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rows}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportData;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\operationalData\\operationalData.js",["714","715","716","717","718"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableOverhaul.js",["719","720","721"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\historicalData.js",["722","723"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\parameterEstimation\\parameterEstimation.js",["724","725"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\maintenanceData.js",["726","727"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nimport EquipmentName from \"./EquipmentName\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst MaintenanceData = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  let finalDataTableData = [];\r\n  const [rowState, setRows] = useState([]);\r\n  let selectedOptionId = \"\";\r\n  // const\r\n  const setIdToDropdownOption = (id) => {\r\n    selectedOptionId = id;\r\n  };\r\n  const MaintColumns = [\r\n    <AgGridColumn\r\n      field=\"LMU\"\r\n      headerName=\"Equipment Name\"\r\n      headerTooltip=\"Equipment Name\"\r\n      cellEditorFramework={EquipmentName}\r\n      minWidth={100}\r\n      editable={true}\r\n      // keyCreator={{ values: systemData.map((x) => x.id) }}\r\n      cellEditorParams={{ setId: setIdToDropdownOption }}\r\n      // cellEditorParams={{ values: systemData.map((x) => x.name) }}\r\n      checkboxSelection={true}\r\n      // cellEditor=\"agSelectCellEditor\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"EventType\"\r\n      headerName=\"EventType\"\r\n      headerTooltip=\"EventType\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Preventive\", \"Breakdown\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Date\"\r\n      headerName=\"Date\"\r\n      headerTooltip=\"Date\"\r\n      width={200}\r\n      cellEditor=\"datePicker\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaintenanceType\"\r\n      headerName=\"Maintenance Type\"\r\n      headerTooltip=\"Maintenance Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Replaced\", \"Repaired\"] }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ReplaceType\"\r\n      headerName=\"Replace Component Type\"\r\n      headerTooltip=\"Replace Component Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"New\", \"Refurbished\", \"Cannibalised\", \"Duplicate\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={(params) => {\r\n        return params.data.ReplaceType === \"NA\" ? false : true;\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"CannibalisedAge\"\r\n      headerName=\"Cannibalised Age\"\r\n      headerTooltip=\"Cannibalised Age\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={(params) => {\r\n        return params.data.CannibalisedAge === \"NA\" ? false : true;\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaintenanceDuration\"\r\n      headerName=\"Maintenance Duration\"\r\n      headerTooltip=\"Maintenance Duration\"\r\n      type=\"nmber\"\r\n      minWidt={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FM\"\r\n      headerName=\"Failure Mode\"\r\n      headerTooltip=\"Failure Mode\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Failure Mode 1\", \"Failure Mode 2\", \"Failure Mode 3\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Remark\"\r\n      headerName=\"Remark\"\r\n      headerTooltip=\"Remark\"\r\n      cellEditor=\"agLargeTextCellEditor\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const AddRow = () => {\r\n    let newRowData = [\r\n      {\r\n        LMU: systemData[0]?.nomenclature,\r\n        component_id: systemData[0]?.id,\r\n        EventType: \"Preventive\",\r\n        Date: \"10/08/2021\",\r\n        MaintainanceType: \"Replaced\",\r\n        ReplaceType: \"New\",\r\n        CannibalisedAge: \"NA\",\r\n        MaintenanceDuration: \"0\",\r\n        FM: \"Failure Mode 1\",\r\n        Remark: \"Enter remarks here...\",\r\n        id: uuid(),\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: newRowData,\r\n    });\r\n    onGridAddDeleteSupport();\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    onGridAddDeleteSupport();\r\n  };\r\n  const onGridAddDeleteSupport = () => {\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    tableUpdate(allRowData, undefined);\r\n  };\r\n  const tableUpdate = (data, id) => {\r\n    // alert(id);\r\n    // alert(selectedOptionId);\r\n    finalDataTableData = data;\r\n    if (id) {\r\n      finalDataTableData.filter((x) => x.id === id)[0][\"component_id\"] =\r\n        selectedOptionId;\r\n    }\r\n    props.tableUpdate(finalDataTableData, \"maintData\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columnDefs={MaintColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        // selectedOptionId={selectedOptionId}\r\n        tableUpdate={tableUpdate}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceData;\r\n","D:\\IITB\\Netra\\netra\\src\\components\\navigation\\Navigation.js",["728","729","730"],"import AccountCircleTcon from \"@material-ui/icons/AccountCircle\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport classes from \"./Navigation.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport SideBarData from \"./SideBarData\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { resetLevels } from \"../../store/Levels\";\r\n\r\nconst Navigation = () => {\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const Logout = () => {\r\n    localStorage.setItem(\"login\", false);\r\n    const isLoggedIn = localStorage.getItem(\"login\");\r\n    history.push(\"/sign_in\");\r\n    dispatch(resetLevels({\r\n      L1: false,\r\n      L2: false,\r\n      L3: false,\r\n      L4: false,\r\n      L5: false,\r\n      L6: false,\r\n    }));\r\n  };\r\n\r\n  const onMouseInHandler = () => {\r\n    setSidebar(false);\r\n  };\r\n  const onMouseOutHandler = () => {\r\n    setSidebar(true);\r\n  };\r\n  return (\r\n    <nav\r\n      className={classes.navigation}\r\n      onMouseEnter={onMouseInHandler}\r\n      onMouseLeave={onMouseOutHandler}\r\n    >\r\n      <ul className={classes.nav}>\r\n        {/* <li className={classes.nav_link}>\r\n          <Link to='/module_select'>\r\n            <AccountCircleTcon fontSize=\"large\" />\r\n          </Link>\r\n        </li> */}\r\n        {SideBarData.map((item, index) => {\r\n          return (\r\n            <li key={index} className={classes.nav_link}>\r\n              <Link to={item.path}>\r\n                {item.icon}\r\n                <div\r\n                  className={\r\n                    sidebar\r\n                      ? `${classes.div}`\r\n                      : `${classes.div} + ' ' + ${classes.active}`\r\n                  }\r\n                >\r\n                  {item.title}\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n        <hr className={classes.hr}></hr>\r\n        <li className={classes.nav_link}>\r\n          <Link onClick={Logout}>\r\n            <ExitToAppIcon fontSize=\"large\" />\r\n            <div\r\n              className={\r\n                sidebar\r\n                  ? `${classes.div}`\r\n                  : `${classes.div} + ' ' + ${classes.active}`\r\n              }\r\n            >\r\n              Logout\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\IITB\\Netra\\netra\\src\\components\\module\\NewModule.js",["731","732","733","734","735"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport clsx from 'clsx';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./Module_radio.module.css\";\r\n\r\nconst StepperStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: '#ebebed',\r\n    borderRadius: '5px',\r\n    height: \"50px\",\r\n    justifyContent: 'space-between',\r\n    padding: '15px'\r\n  },\r\n  active: {\r\n    color: '#000',\r\n  }\r\n}));\r\nconst CustomIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  active: {\r\n    // position: 'relative',\r\n    // // backgroundColor: '#3ae711',\r\n    // left: '5px',\r\n    // top: '5px',\r\n    // width: '15px',\r\n    // height: '15px',\r\n    // borderRadius:'50%',\r\n    // zIndex: 1,\r\n    // boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  circle: {\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n\r\n  completed: {\r\n    position: 'relative',\r\n    backgroundColor: '#00dffe',\r\n    left: '5px',\r\n    top: '5px',\r\n    width: '15px',\r\n    height: '15px',\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n    boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n  },\r\n});\r\n\r\nfunction CustomIcon(props) {\r\n  const classes = CustomIconStyles();\r\n  const { active, completed } = props;\r\n  debugger;\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n    >\r\n      {completed ? <div className={classes.circle}><div className={classes.completed} /></div> : <div className={classes.circle}><div className={clsx({\r\n        [classes.active]: active,\r\n      })} /></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"System Configuration\",\r\n    \"Phase Manager\",\r\n    \"HEP\",\r\n    \"Data Manager\",\r\n    \"Mission Profile\"\r\n  ];\r\n}\r\n\r\nexport default function NewModule() {\r\n  const classes = StepperStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  debugger;\r\n  return (\r\n    <div className={styles.module}>\r\n      <Stepper classes={classes} activeStep={activeStep} connector={null}>\r\n        {steps.map((label) => (\r\n          <Step key={label} >\r\n            <StepLabel\r\n              StepIconComponent={CustomIcon}\r\n              TypographyProps={{\r\n                classes: { root: styles.boldLabel }, // Apply the class to the Typography component\r\n              }}\r\n            >\r\n              {label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {/* <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","D:\\IITB\\Netra\\netra\\src\\components\\slider\\NewSlider.js",["736"],"import { React, useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport classes from \"./Slider.module.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"98%\",\r\n    background: \"#ebebeb\",\r\n    height: 70,\r\n    borderRadius: 5,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sliderMarks: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"18px\"\r\n  },\r\n});\r\n\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#fff\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    \"&.Mui-disabled\": {\r\n      height: 20,\r\n      width: 20,\r\n      backgroundColor: \"#fff\",\r\n      // marginTop: -4,\r\n      // marginLeft: -4,\r\n      boxShadow:\r\n        \"1px 2px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\",\r\n    },\r\n  },\r\n  active: {},\r\n\r\n  track: {\r\n    marginLeft: \"1%\",\r\n    height: 12,\r\n    borderRadius: 10,\r\n    background:\r\n      \"linear-gradient(90deg, rgba(0,159,251,1) 0%, rgba(42,42,112,1) 60%)\",\r\n  },\r\n  rail: {\r\n    width: \"98%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    height: 12,\r\n    borderRadius: 10,\r\n    background: \"#fff\",\r\n    opacity: 1,\r\n  },\r\n})(Slider);\r\n\r\nexport default function StageSlider(props) {\r\n  const [def, Setdef] = useState(props.default);\r\n  useEffect(() => {\r\n    Setdef(props.default);\r\n  }, [props.default]);\r\n  const styles = useStyles();\r\n  return (\r\n    <div className={classes.slider}>\r\n      <div className={styles.root}>\r\n        <PrettoSlider\r\n          value={def}\r\n          step={null}\r\n          marks={props.marks}\r\n          classes={{\r\n            markLabel: styles.sliderMarks, // Apply the class to the mark labels\r\n          }}\r\n          disabled\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\additionalInfo\\additionalInfo.js",["737","738","739","740","741"],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\dutyCycle\\dutyCycle.js",["742","743","744"],"import { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport {v4 as uuid} from 'uuid';\r\nconst DutyCycle = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const rowData = systemData.map((element, index) => {\r\n    return {\r\n      Component: element.nomenclature,\r\n      ComponentId:element.id,\r\n      id:uuid(),\r\n      DutyCycle: 1,\r\n    };\r\n  });\r\n\r\n\r\n\r\n  const DCcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Equipment Name\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"DutyCycle\"\r\n      headerName=\"Duty Cycle\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={DCcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DutyCycle;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\redundancy.js",["745","746","747","748","749","750","751"],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\failureMode.js",["752","753"],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\maintenanceInfo\\maintenanceInfo.js",["754","755","756","757","758","759"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { MIrowData } from \"../SystemConfigurationTable.js\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst MaintenanceInfo = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const MaintColumns = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment name\"\r\n      headerTooltip=\"Equipment name\"\r\n      width={150}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"RepairType\"\r\n      headerName=\"Repair Type\"\r\n      headerTooltip=\"Repair Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Replaceable\", \"Repairable\"],\r\n      }}\r\n      width={160}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"PreventiveMaintenaceApplicable\"\r\n      headerName=\"Preventive Maintenace Applicable\"\r\n      headerTooltip=\"Preventive Maintenace Applicable\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"PreventiveMaintenaceInterval\"\r\n      headerName=\"Preventive Maintenace Interval (hrs)\"\r\n      headerTooltip=\"Preventive Maintenace Interval (hrs)\"\r\n      type=\"number\"\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ComponentsReplaced\"\r\n      headerName=\"Can be Replaced by Ship Staff\"\r\n      headerTooltip=\"Can be Replaced by Ship Staff\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ConditionMonitoring\"\r\n      headerName=\"Is System Parameter's Recorded\"\r\n      headerTooltip=\"Is System Parameter's Recorded\"\r\n      width={200}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"ComponentCriticality\"\r\n    //   headerName=\"Criticality\"\r\n    //   width={350}\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{\r\n    //     values: [\r\n    //       \"\",\r\n    //       \"Failure leads to hazard or complete loss of functionality.\",\r\n    //       \"Failure does not lead to hazard but causes partial loss of functionality.\",\r\n    //       \"Failure does not lead hazard or loss of functionality but significant loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but causes rapid deterioration of some other critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but minor loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but causes rapid deterioration of some other non-critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to significant inconvenience.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to minor inconvenience.\",\r\n    //     ],\r\n    //   }}\r\n    //   editable={true}\r\n    // />,\r\n  ];\r\n\r\n  const rowData = systemData\r\n    // .filter((x) => x.lmu === 1)\r\n    .map((element) => {\r\n      return {\r\n        id: uuid(),\r\n        component_id: element.id,\r\n        EquipmentName: element.nomenclature,\r\n        RepairType: element.repairType,\r\n        PreventiveMaintenaceApplicable: \"No\",\r\n        PreventiveMaintenaceInterval: 0,\r\n        ComponentsReplaced: \"No\",\r\n        ConditionMonitoring: \"No\",\r\n      };\r\n    });\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={MaintColumns}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceInfo;\r\n","D:\\IITB\\Netra\\netra\\src\\components\\main\\EqptStructuring\\LabelToolTip\\LabelToolTip.js",[],"D:\\IITB\\Netra\\netra\\src\\components\\main\\EqptStructuring\\EqptStructuring.js",["760","761","762","763","764","765","766","767","768","769","770","771"],"D:\\IITB\\Netra\\netra\\src\\components\\navigation\\MuiFap.js",["772"],"// BackToHomeFab.js\r\nimport React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"fixed\",\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n    zIndex: theme.zIndex.tooltip + 1, // Ensure it's above other elements\r\n  },\r\n}));\r\n\r\nconst BackToHomeFab = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fab\r\n      className={classes.fab}\r\n      color=\"primary\"\r\n      aria-label=\"back to home\"\r\n      onClick={() => history.push(\"/\")}\r\n    >\r\n      <ArrowBackIcon />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default BackToHomeFab;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\EquipmentName.js",["773","774","775"],"D:\\IITB\\Netra\\netra\\src\\ui\\Table\\Table.js",["776","777","778","779","780"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\IntervalData.js",["781"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\nprd.js",["782","783","784"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(0),\r\n      // width:\r\n      width: \"50%\",\r\n      height: theme.spacing(5),\r\n      // background: \"#048ee7\",\r\n      color: \"black\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      // justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NPRD = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      FailureRate: \"2\",\r\n      Beta: \"2\",\r\n    },\r\n  ]);\r\n\r\n  const NPRDColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      minWidth={100}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FailureRate\"\r\n      headerName=\"Failure Rate\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Beta\"\r\n      headerName=\"β - Shape Parameter\"\r\n      type=\"nmber\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"nprd\");\r\n  };\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        FailureRate: \"2\",\r\n        Beta: \"2\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <h5>\r\n          *If the beta of the component is not known, use the following\r\n          information: <br />\r\n          1. If Failure of the component is observed in narrow time window use\r\n          beta(β) = 2.5 <br />\r\n          2. If Failure of the component is observed in scattered time window\r\n          use beta(β) = 1.5\r\n        </h5>\r\n      </div>\r\n      <Table\r\n        columnDefs={NPRDColumns}\r\n        rowData={rowState}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NPRD;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oemExpert.js",["785","786","787"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\failureDataPoint.js",["788","789"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\probabilityFailure.js",["790","791"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(40),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ProbabilityFailure(props) {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      Time: \"120\",\r\n      FailureProbability: \"10\",\r\n    },\r\n  ]);\r\n\r\n  const PFColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      minWidth={100}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Time\"\r\n      headerName=\"Time (T<) hrs\"\r\n      editable={true}\r\n      type=\"number\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FailureProbability\"\r\n      headerName=\"Failure Probability\"\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"prob\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        Time: \"120\",\r\n        FailureProbability: \"10\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          Probabilty of Failure\r\n        </Paper>\r\n      </div>\r\n      <Table\r\n        columnDefs={PFColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProbabilityFailure;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\expert.js",["792","793"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(30),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Expert = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      MostLikely: \"\",\r\n      MaxLife: \"\",\r\n      MinLife: \"\",\r\n      componentFailure: \"\",\r\n      time_wo_failure: \"\",\r\n    },\r\n  ]);\r\n\r\n  const ExpertColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      width={200}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MostLikely\"\r\n      headerName=\"Most Likely Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaxLife\"\r\n      headerName=\"Maximum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MinLife\"\r\n      headerName=\"Minimum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Replacements\"\r\n    //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"componentFailure\"\r\n      headerName=\"Number of Component seen withour Failure\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"time_wo_failure\"\r\n      headerName=\"Total time without Failure\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"expert\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        MostLikely: \"\",\r\n        MaxLife: \"\",\r\n        MinLife: \"\",\r\n        componentFailure: \"\",\r\n        time_wo_failure: \"\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          Expert Judgement\r\n        </Paper>\r\n      </div>\r\n      <Table\r\n        columnDefs={ExpertColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expert;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oem.js",["794","795","796","797"],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\RenderParallelComponent.js",["798","799"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\selectEquipment.js",["800","801","802"],"D:\\IITB\\Netra\\netra\\src\\components\\sortableTree\\SortableTreeData.js",[],"D:\\IITB\\Netra\\netra\\src\\components\\sortableTree\\SortableTree.js",["803","804","805","806"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\MultiSelect.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfigurationTable.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\EquipmentName.js",["807","808","809","810"],"D:\\IITB\\Netra\\netra\\src\\components\\navigation\\SideBarData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\OverhaulEntryTable.js",["811","812"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\RepairableSubTableMaual.js",["813","814","815"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableSubTable.js",["816","817"],"D:\\IITB\\Netra\\netra\\src\\ui\\Table\\OverhaulTable.js",["818"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\custom.js",["819","820","821","822","823","824","825","826","827","828","829"],"D:\\IITB\\Netra\\netra\\src\\ui\\userSelection\\userSelectionData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\Layout\\layout.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\DCMultiplier\\dcMultiplier.js",["830","831","832","833"],"import Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst DCMultiplier = (props) => {\r\n  const phase = useSelector((state) => state.phase.phase);\r\n  if (phase.length === 0) {\r\n    alert(\"Please add Phases first\");\r\n  }\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const rootSystemData = systemData.filter((x) => x.parent === null);\r\n  let distinctPhaseName = phase.map((element, index) => {\r\n    return element.PhaseName;\r\n  });\r\n  distinctPhaseName = [...new Set(distinctPhaseName)];\r\n  let childColHeaders = [];\r\n  const phaseArr = distinctPhaseName.map((ele, index) => {\r\n    const childArr = phase.filter((x) => x.PhaseName === ele);\r\n    const childAgGrid = childArr.map((ele1, index1) => {\r\n      childColHeaders.push(ele1.PhaseRange + \" \" + ele1.id);\r\n      if (ele1.MeasurementType === \"Quantitative\") {\r\n        return (\r\n          <AgGridColumn\r\n            field={ele1.PhaseRange + \" \" + ele1.id}\r\n            headerName={ele1.PhaseRange}\r\n            editable={true}\r\n          />\r\n        );\r\n      } else {\r\n        return <AgGridColumn field={ele1.Status} editable={true} />;\r\n      }\r\n    });\r\n    return (\r\n      <AgGridColumn field={ele} headerName={ele}>\r\n        {childAgGrid}\r\n      </AgGridColumn>\r\n    );\r\n  });\r\n  // childColHeaders = [...new Set(childColHeaders)];\r\n  const DCMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Component\"\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    ...phaseArr,\r\n  ];\r\n  const rowData = systemData\r\n    .filter((x) => x.parentId === null)\r\n    .map((element, index) => {\r\n      let d = {};\r\n      const phaseD = childColHeaders.map((ele, index) => {\r\n        d[ele] = 1;\r\n        return null;\r\n      });\r\n      return {\r\n        Component: element.name,\r\n        component_id: element.id,\r\n        ...d,\r\n      };\r\n    });\r\n  debugger;\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.phaseTable}>\r\n      <Table\r\n        columnDefs={DCMcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DCMultiplier;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\LifeMultiplier\\LifeMultiplier.js",["834","835","836","837","838","839","840","841"],"import { Fragment } from \"react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { LMrowData, components } from \"../PhasetableData\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst PhaseStyles = makeStyles({\r\n  formControl: {\r\n    minWidth: \"20%\",\r\n  },\r\n  Submit: {\r\n    height: 40,\r\n  },\r\n  Pbuttons: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\nconst LifeMultiplier = (props) => {\r\n  const PhaseClasses = PhaseStyles();\r\n  const phase = useSelector((state) => state.phase.phase);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  let distinctPhaseName = phase.map((element, index) => {\r\n    return element.PhaseName;\r\n  });\r\n  distinctPhaseName = [...new Set(distinctPhaseName)];\r\n  let childColHeaders = [];\r\n  const phaseArr = distinctPhaseName.map((ele, index) => {\r\n    const childArr = phase.filter((x) => x.PhaseName === ele);\r\n    const childAgGrid = childArr.map((ele1, index1) => {\r\n      childColHeaders.push(ele1.PhaseRange + \" \" + ele1.id);\r\n      if (ele1.MeasurementType === \"Quantitative\") {\r\n        return (\r\n          <AgGridColumn\r\n            field={ele1.PhaseRange + \" \" + ele1.id}\r\n            headerName={ele1.PhaseRange}\r\n            index={ele1.id}\r\n            editable={true}\r\n          />\r\n        );\r\n      } else {\r\n        return <AgGridColumn field={ele1.Status} />;\r\n      }\r\n    });\r\n    return (\r\n      <AgGridColumn field={ele} headerName={ele}>\r\n        {childAgGrid}\r\n      </AgGridColumn>\r\n    );\r\n  });\r\n  const LMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Component\"\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    ...phaseArr,\r\n  ];\r\n  const rowData = systemData.map((element, index) => {\r\n    let d = {};\r\n    const phaseD = childColHeaders.map((ele, index) => {\r\n      d[ele] = 1;\r\n      return null;\r\n    });\r\n    debugger;\r\n    return {\r\n      Component: element.name,\r\n      component_id: element.id,\r\n      ...d,\r\n    };\r\n  });\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {/* <div className={styles.flex2}>\r\n        <CustomSelect\r\n          style={{ minWidth: \"45%\" }}\r\n          className={PhaseClasses.formControl}\r\n          id=\"parent-component\"\r\n          label=\"Parent Component\"\r\n          fields={components}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={PhaseClasses.Submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <span style={{ fontSize: \"0.7rem\" }}>\r\n          <LensIcon style={{ color: \"#d8f0f4\" }} />\r\n          LMU-Lowest Maintainable Unit\r\n        </span>\r\n      </div> */}\r\n      <div className={styles.LMphaseTable}>\r\n        <Table\r\n          columnDefs={LMcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LifeMultiplier;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Add\\AddPhase.js",["842","843","844"],"D:\\IITB\\Netra\\netra\\src\\ui\\Form\\SelectWithLimit.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\EventCalendar.js",["845"],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityChart.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\DashboardData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Phase_Manager\\Home\\Home.js",["846"],"import { AgGridColumn } from \"ag-grid-react\";\r\nimport { Fragment } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst PhaseManagerHome = (props) => {\r\n  const phases = useSelector((state) => state.phase.phase);\r\n\r\n  const pRow = phases.map((x) => {\r\n    return {\r\n      id: x.id,\r\n      Description: x.Description,\r\n      LowerBound: x.LowerBound,\r\n      MeasurementType: x.MeasurementType,\r\n      PhaseName: x.PhaseName,\r\n      PhaseRange: x.PhaseRange,\r\n      Status: x.Status,\r\n      Unit: x.Unit,\r\n      UpperBound: x.UpperBound,\r\n    };\r\n  });\r\n  // const pRow = [\r\n  //   {\r\n  //     Description: \"Description\",\r\n  //     LowerBound: 0,\r\n  //     MeasurementType: \"Quantitative\",\r\n  //     PhaseName: \"Load\",\r\n  //     PhaseRange: \"L1\",\r\n  //     Status: \"\",\r\n  //     Unit: \"Unit\",\r\n  //     UpperBound: 50,\r\n  //   },\r\n  //   {\r\n  //     Description: \"Description\",\r\n  //     LowerBound: 51,\r\n  //     MeasurementType: \"Quantitative\",\r\n  //     PhaseName: \"Load\",\r\n  //     PhaseRange: \"L2\",\r\n  //     Status: \"\",\r\n  //     Unit: \"Unit\",\r\n  //     UpperBound: 75,\r\n  //   },\r\n  // ];\r\n  const MPcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"PhaseName\"\r\n      headerName=\"Phase Parameter name\"\r\n      headerTooltip=\"Phase Parameter name\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MeasurementType\"\r\n      headerName=\"Measurement Type\"\r\n      headerTooltip=\"Measurement Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Qualitative\", \"Quantitative\"] }}\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"LowerBound\"\r\n      headerName=\"Lower Bound\"\r\n      headerTooltip=\"Lower Bound\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"UpperBound\"\r\n      headerName=\"Upper Bound\"\r\n      headerTooltip=\"Upper Bound\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Status\"\r\n    //   headerName=\"Status\"\r\n    //   minWidth={100}\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"PhaseRange\"\r\n      headerName=\"PhaseRange\"\r\n      headerTooltip=\"Phase Range\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Unit\"\r\n      headerName=\"Unit\"\r\n      headerTooltip=\"Unit\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Km/hr\", \"M/hr\"] }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Description\"\r\n      headerName=\"Description\"\r\n      headerTooltip=\"Description\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={MPcolumnDefs}\r\n          rowData={pRow}\r\n          tableUpdate={updateFinalRowData}\r\n          setGrid={props.setGridApi}\r\n          gridApi={props.gridApi}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default PhaseManagerHome;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\BarGraph.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\OptiQ.js",["847","848","849","850"],"D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\Data.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\RUL\\RULPredictor.js",["851","852","853","854","855","856"],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\Flow\\flow.js",["857","858","859","860","861","862","863"],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\ComponentDetails.js",["864","865","866"],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\MissionSlider.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Reliability Dashboard\\CreateProfile.js",["867"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\Main.js",["868"],"import React from \"react\";\r\nimport styles from \"./MaintenanceAllocation.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AccessControl from \"../Home/AccessControl\";\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport TableChartSharpIcon from '@material-ui/icons/TableChartSharp';\r\nimport { Button, Typography, makeStyles } from \"@material-ui/core\";\r\nimport BackToHomeFab from \"../../components/navigation/MuiFap\";\r\n\r\nconst Main = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    linkbtn: {\r\n      backgroundColor: \"white\",\r\n      padding: \"10px\",\r\n      display: \"flex\",\r\n      marginRight: \"40px\",\r\n      borderRadius: \"50%\",\r\n      width: \"50px\",\r\n      height: \"50px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      color: \" #004d90\",\r\n      objectFit: \"cover\",\r\n    },\r\n    txt: {\r\n      color: \"white\"\r\n    },\r\n    logoImg: {\r\n      marginTop: \"40px\",\r\n      maxWidth: \"80%\",\r\n      height: \"auto\",\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles(); // Apply makeStyles\r\n\r\n  const MainLinks = [\r\n    { name: \"Create Maintenance Plan\", path: \"/maintenance_allocation/assignMaintenance\", icon: <BuildOutlinedIcon /> },\r\n    { name: \"Conduct Rcm Analysis\", path: \"/maintenance_allocation/conduct_rcm_analysis/critical_comp\", icon: <TableChartSharpIcon /> },\r\n  ];\r\n\r\n  return (\r\n    <AccessControl allowedLevels={['L1', 'L5', 'L6']}>\r\n      <div className={styles.container}>\r\n      <BackToHomeFab />\r\n        <div className={styles.homeLinks}>\r\n          {MainLinks.map((link, index) => (\r\n            <Link key={index} to={link.path} >\r\n            <div className={classes.linkbtn}> \r\n              {link.icon}\r\n            </div>\r\n            <Button disableRipple={true}>\r\n              <Typography variant=\"h5\" className={classes.txt}>\r\n                {link.name}\r\n              </Typography>\r\n            </Button>\r\n          </Link>\r\n          ))}\r\n        </div>\r\n        <div className={styles.netra}>\r\n          <img src=\"/netra-logo-removebg.png\" width={300} height={400} alt=\"Netra Logo\" />\r\n          <div className={styles.logotxt}>NETRA</div>\r\n        </div>\r\n      </div>\r\n    </AccessControl>\r\n  );\r\n};\r\nexport default Main;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\HEPData.js",["869"],"import { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\r\n\r\nexport const ELrowData = [\r\n  {\r\n    equipment: \"Fresh Water Cooling\",\r\n    Maintenancepolicy: \"Preventive\",\r\n    Criticality: \"Low\",\r\n    ATNominal: \"1\",\r\n    \"Less than required\": \"2\",\r\n    \"Higher than required\": \"3\",\r\n    \"Very High than required\": \"4\",\r\n    Nominal: \"5\",\r\n    Low: \"6\",\r\n    Extreme: \"7\",\r\n  },\r\n];\r\nexport const ELcolumnDefs = [\r\n  {\r\n    field: \"equipment\",\r\n    headerName: \"Equipment\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Maintenancepolicy\",\r\n    headerName: \"Maintenance Policy\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Qualitative\", \"Quantitative\"] },\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Criticality\",\r\n    headerName: \"Criticality\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    headerName: \"PSF-Available Time\",\r\n    children: [\r\n      { field: \"ATNominal\", headerName: \"Nominal\", editable: true },\r\n      { field: \"Less than required\", editable: true },\r\n      { field: \"Higher than required\", editable: true },\r\n      { field: \"Very High than required\", editable: true },\r\n    ],\r\n  },\r\n  {\r\n    headerName: \"PSF-Stress\",\r\n    children: [\r\n      { field: \"Nominal\", editable: true },\r\n      { field: \"Low\", editable: true },\r\n      { field: \"Extreme\", editable: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const CLcolumnDefs = [\r\n  {\r\n    field: \"LMU\",\r\n    headerName: \"Lowest Maintainable Unit (LMU)\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"shipmode\",\r\n    headerName: \"Ship Mode\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfcomplexity\",\r\n    headerName: \"PSF-Complexity\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfergonomics\",\r\n    headerName: \"PSF-Ergonomics\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfprocedure\",\r\n    headerName: \"PSF-Procedure Available\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n];\r\nexport const CLrowData = [\r\n  {\r\n    LMU: \"Water Temperature Gauge\",\r\n    shipmode: \"Docked\",\r\n    psfcomplexity: \"\",\r\n    psfergonomics: \"\",\r\n    psfprocedure: \"\",\r\n  },\r\n];\r\n\r\nexport const SLMcolumnDefs = [\r\n  {\r\n    field: \"component\",\r\n    headerName: \"Component\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"refurbished\",\r\n    headerName: \"Refurbished\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"cannibalised\",\r\n    headerName: \"Cannibalised\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"nonOEM\",\r\n    headerName: \"Non-OEM/Duplicate\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const SLMrowData = [\r\n  {\r\n    component: \"DA\",\r\n    refurbished: \"1\",\r\n    cannibalised: \"1\",\r\n    nonOEM: \"1\",\r\n  },\r\n];\r\n","D:\\IITB\\Netra\\netra\\src\\ui\\Table\\Table2.js",["870"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\CreateRCM.js",["871","872","873","874","875"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\critical_RCM.js",["876","877","878","879","880"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ShareMaintenance\\ShareMaintenance.js",["881","882","883"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\CreateMaintenance.js",["884","885","886"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\AssignType.js",["887","888","889","890","891","892","893","894","895"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ModifyandDisplay\\ModifyandDisplayMaintenance.js",["896","897","898","899"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\AddData\\AddData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\EquipmentLevel\\EquipmentLevel.js",["900","901","902","903"],"import { Fragment } from \"react\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { ELcolumnDefs, ELrowData } from \"../HEPData\";\r\nimport styles from \"../HEP.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst EquipmentLevelHEP = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.parent === null);\r\n  const phaseData = useSelector((state) => state.phase.phase);\r\n  const mData = [\"Preventive\", \"Breakdown\"];\r\n  let rowData = [];\r\n  const rData = systemData.map((e, i) => {\r\n    phaseData.map((p_e, p_i) => {\r\n      mData.map((mE, mI) => {\r\n        if (p_e.MType === \"Qualitative\") {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.Status,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        } else {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.PhaseRange,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        }\r\n      });\r\n      return null;\r\n    });\r\n\r\n    return null;\r\n  });\r\n  const ELcolumnDefs = [\r\n    <AgGridColumn field=\"equipment\" headerName=\"Equipment\" minWidth={80} />,\r\n    <AgGridColumn field=\"phase\" headerName=\"Phase Name\" minWidth={80} />,\r\n    <AgGridColumn\r\n      field=\"Maintenancepolicy\"\r\n      headerName=\"Maintenance Policy\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Preventive\", \"Breakdown\"] }}\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn headerName=\"PSF-Available Time\">\r\n      <AgGridColumn\r\n        field=\"ATNominal\"\r\n        headerName=\"Nominal\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Lessthanrequired\"\r\n        headerName=\"Less Than Required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Higherthanrequired\"\r\n        headerName=\"Higher than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"vhtr\"\r\n        headerName=\"Very High than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n    </AgGridColumn>,\r\n    <AgGridColumn headerName=\"PSF-Stress\">\r\n      <AgGridColumn field=\"Nominal\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Low\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Extreme\" editable={true}></AgGridColumn>\r\n    </AgGridColumn>,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={ELcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EquipmentLevelHEP;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\LifeMultiplier\\LifeMultiplier.js",["904","905","906"],"D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\CommanHEP\\CommanHEP.js",["907"],"import { FormControl } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Radio } from \"@material-ui/core\";\r\nimport { FormControlLabel } from \"@material-ui/core\";\r\nimport { RadioGroup } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport styles from \"../HEP.module.css\";\r\n\r\nconst radioLabel = makeStyles({\r\n  label: {\r\n    minWidth: 80,\r\n    border: \"rgb(116, 114, 114) 1px solid\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    background: \"#ebebeb\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  labelPlacementStart: {\r\n    marginLeft: 1,\r\n  },\r\n});\r\nconst radioStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    border: \"1px solid black\",\r\n    borderRadius: 5,\r\n    width: 24,\r\n    height: 22,\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    border: \"1px solid black\",\r\n    borderRadius: 5,\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 24,\r\n      height: 22,\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction StyledRadio(props) {\r\n  const radioClasses = radioStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={radioClasses.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={radioClasses.checkedIcon} />}\r\n      icon={<span className={radioClasses.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst CHEP = ({experience,workCulture,fitness,handleExp,handleWC,handleFit}) => {\r\n  const radioLabelStyle = radioLabel();\r\n\r\n  return (\r\n    <div className={styles.midSection}>\r\n      \r\n        <div className={styles.sectionHeader}>\r\n          External Factor/PSF-Experience\r\n        </div>\r\n      <div className={styles.Qcard}>\r\n        <div>\r\n          <div className={styles.QcardHeader}>\r\n            What percentage of time does a maintenance personnel with following\r\n            experience perform the task?\r\n          </div>\r\n          <div className=\"Qcard-content\">\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"expnominal\">Nominal</label>\r\n              <input className='experience' type=\"number\" id=\"expnominal\" value={experience.nominal} onChange={(e)=>handleExp(e,'nominal')}></input>\r\n            </div>\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"explow\">Low</label>\r\n              <input className='experience' type=\"number\" id=\"explow\" value={experience.low} onChange={(e)=>handleExp(e,'low')}></input>\r\n            </div>\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"exphigh\">High</label>\r\n              <input className='experience' type=\"number\" id=\"exphigh\" value={experience.high} onChange={(e)=>handleExp(e,'high')}></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sectionHeader}>\r\n        External Factor/PSF-Work Culture\r\n      </div>\r\n      <div className={styles.Qcard}>\r\n        <div className={styles.QcardHeader}>\r\n          How do you rate the work culture of your organisation?\r\n        </div>\r\n        <div className=\"Qcard-content\">\r\n          <FormControl>\r\n            <RadioGroup aria-label=\"work-culture\" value={workCulture} onChange={handleWC} name=\"psf-work-culture\">\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"nominal\"\r\n                control={<StyledRadio />}\r\n                label=\"Nominal\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"low\"\r\n                control={<StyledRadio />}\r\n                label=\"Low\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"high\"\r\n                control={<StyledRadio />}\r\n                label=\"High\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sectionHeader}>\r\n        External Factor/PSF-Fitness for Duty\r\n      </div>\r\n      <div className={styles.Qcard}>\r\n        <div className={styles.QcardHeader}>\r\n          What percentage of time does a maintenance personnel with following\r\n          fitness level perform the task?\r\n        </div>\r\n        <div className=\"Qcard-content\">\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fitnominal\">Nominal</label>\r\n            <input className='fitness' type=\"number\" id=\"fitnominal\" value={fitness.nominal} onChange={(e)=>handleFit(e,'nominal')}></input>\r\n          </div>\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fitlow\">Low</label>\r\n            <input className='fitness' type=\"number\" id=\"fitlow\" value={fitness.low} onChange={(e)=>handleFit(e,'low')}></input>\r\n          </div>\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fithigh\">High</label>\r\n            <input className='fitness' type=\"number\" id=\"fithigh\" value={fitness.high} onChange={(e)=>handleFit(e,'high')}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CHEP;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\HEP\\ComponentLevel\\componentLevel.js",["908","909","910","911"],"import { Fragment } from \"react\";\r\nimport styles from \"../HEP.module.css\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { CLrowData } from \"../HEPData\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst HEPComponentLevel = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.lmu === 1);\r\n  const phaseData = useSelector((state) => state.phase.phase);\r\n  const mData = [\"Preventive\", \"Breakdown\"];\r\n  const rowData = systemData.map((e, i) => {\r\n    return {\r\n      ComponentId:e.id,\r\n      LMU: e.name,\r\n      psfcomplexity: \"Nominal\",\r\n      psfergonomics: \"Nominal\",\r\n      psfprocedure: \"Available\",\r\n      id:uuid(),\r\n    };\r\n  });\r\n  debugger;\r\n  const CLcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"LMU\"\r\n      headerName=\"Lowest Maintainable Unit (LMU)\"\r\n      minWidth={80}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfcomplexity\"\r\n      headerName=\"PSF-Complexity\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Nominal\", \"Moderately Complex\", \"Highly Complex\"],\r\n      }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfergonomics\"\r\n      headerName=\"PSF-Ergonomics\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Nominal\", \"Good\", \"Poor\", \"Misleading\"] }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfprocedure\"\r\n      headerName=\"PSF-Procedure Available\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Available\", \"Available But Poor\", \"Not Available\"],\r\n      }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={CLcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HEPComponentLevel;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\SAdmin.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\OptTable.js",["912"],"D:\\IITB\\Netra\\netra\\src\\pages\\PM OPTIM\\GroupTable.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\GroupData.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\CustomNode\\CustomNode.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\dragNdrop\\ContextMenu\\contextMenu.js",["913","914"],"D:\\IITB\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\SaveHandler.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\Manage_User.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\AccCreate.js",["915"],"import React, { useState } from \"react\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  InputBase,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    width: \"70%\",\r\n    padding: \"40px 0;\",\r\n    textAlign: \"center\",\r\n    padding: \"20px 20px 30px 20px\",\r\n    borderRadius: \"10px\",\r\n    marginTop: \"30px\",\r\n    boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n  },\r\n  input: {\r\n    margin: \"15px 0px\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n    background: \"#ebebeb\",\r\n    borderRadius: \"5px\",\r\n    height: \"50px\",\r\n    width: \"30%\",\r\n    fontSize: \"16px\",\r\n  },\r\n  level: {\r\n    borderRadius: \"5px\",\r\n    background: \"#ebebeb\",\r\n    width: \"30%\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1c4199\",\r\n    color: \"white\",\r\n    marginTop: \"10px\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  option: {\r\n    fontSize: \"16px\",\r\n    border: \"1px solid black\",\r\n  },\r\n});\r\n\r\nconst AccCreate = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [accessLevel, setAccessLevel] = useState(\"\");\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleCreateAccount = () => {\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n      level: accessLevel,\r\n    };\r\n\r\n    fetch(\"/insert_user\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.code) {\r\n          history.push(\"/sign_in\", { message: data.message });\r\n        } else {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper} elevation={5}>\r\n        <div>\r\n          <div>\r\n            <Typography variant=\"h4\">Welcome</Typography>\r\n            <Typography variant=\"h6\">Create account</Typography>\r\n          </div>\r\n          <form className={classes.form}>\r\n            <InputBase\r\n              className={classes.input}\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Username\"\r\n              required\r\n            />\r\n            <InputBase\r\n              className={classes.input}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              required\r\n            />\r\n            <InputBase\r\n              className={classes.input}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              id=\"confirm-password\"\r\n              placeholder=\"Confirm Password\"\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              required\r\n            />\r\n            <TextField\r\n              select\r\n              label=\"Level of Access\"\r\n              value={accessLevel}\r\n              onChange={(e) => setAccessLevel(e.target.value)}\r\n              variant=\"outlined\"\r\n              className={classes.level}\r\n            >\r\n              <option value=\"L1\" className={classes.option}>\r\n                Ship HoD\r\n              </option>\r\n              <option value=\"L2\" className={classes.option}>\r\n                Ship CO\r\n              </option>\r\n              <option value=\"L3\" className={classes.option}>\r\n                Fleet/ Command HQ\r\n              </option>\r\n              <option value=\"L4\" className={classes.option}>\r\n                NHQ\r\n              </option>\r\n              <option value=\"L5\" className={classes.option}>\r\n                Admin/ INSMA\r\n              </option>\r\n              <option value=\"L6\" className={classes.option}>\r\n                OEM\r\n              </option>\r\n            </TextField>\r\n          </form>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            onClick={handleCreateAccount}\r\n          >\r\n            Create Account\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccCreate;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\SAdmin\\welcome.js",["916","917","918"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  logo: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  logoImage: {\r\n    width: \"350px\",\r\n    height: \"400px\",\r\n  },\r\n  heading: {\r\n    fontSize: \"24px\",\r\n  },\r\n  card: {\r\n    margin: \"10px\",\r\n    minWidth: \"250px\",\r\n    padding: \"20px 20px 30px 20px\",\r\n    borderRadius: \"10px\",\r\n    marginTop: \"30px\",\r\n    boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n    fontSize: \"24px\",\r\n    background: \"rgb(73,143,232)\",\r\n    color:\"white\",\r\n    background: \"linear-gradient(90deg, rgba(73,143,232,1) 5%, rgba(42,42,114,1) 100%)\"\r\n  },\r\n};\r\n\r\nconst CardItem = ({ title, count }) => {\r\n  return (\r\n    <Grid item>\r\n      <Card style={styles.card}>\r\n        <CardHeader title={title} />\r\n        <CardContent>{count}</CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst WelcomePage = ({cardData}) => {\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.logo}>\r\n        <img src=\"/NavyMan.png\" alt=\"Logo\" style={styles.logoImage} />\r\n      </div>\r\n      {/* <h1 style={styles.heading}>Welcome to Dashboard</h1> */}\r\n      <Typography variant=\"h3\" style={{ color: \"#344B99\" }}>\r\n        Welcome to Dashboard\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        {cardData.map((item, index) => (\r\n          <CardItem key={index} title={item.title} count={item.count} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default WelcomePage;\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\Administrator.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\AdminInputs.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\RegisterEquipment.js",[],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\DelSpecific.js",["919"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminInputs from \"./AdminInputs\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"0 2.5em\",\r\n  },\r\n  tabs: {\r\n    marginTop: \"1rem\",\r\n  },\r\n  autocomplete: {\r\n    margin: \"1rem\",\r\n    minWidth: 200,\r\n  },\r\n  deleteButton: {\r\n    margin: \"1rem\",\r\n  },\r\n});\r\n\r\nexport default function DelSpecific() {\r\n  const classes = useStyles();\r\n  const [selectedDataType, setSelectedDataType] = useState(\"\");\r\n  const [gridData, setGridData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [table, setTable] = useState(\"\");\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [snackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"success\",\r\n    message: \"\",\r\n    showSnackBar: false,\r\n  });\r\n\r\n  // New state to manage the confirmation dialog\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const componentsData = useSelector(\r\n    (state) => state.userSelection.componentsData\r\n  );\r\n\r\n  const DataTypes = [\r\n    {\r\n      \"Redundancy & Parallel Information\": \"redundancy_data\",\r\n      avoidColumns: [\"component_id\"],\r\n    },\r\n    {\r\n      \"Maintenance Information\": \"maintenance_configuration_data\",\r\n      avoidColumns: [\"maintenance_id\", \"component_id\"],\r\n    },\r\n    {\r\n      \"Failure Mode\": \"failure_modes\",\r\n      avoidColumns: [\"component_id\", \"failure_mode_id\"],\r\n    },\r\n    {\r\n      \"Duty Cycle\": \"duty_cycle\",\r\n      avoidColumns: [\"component_id\", \"duty_cycle_id\"],\r\n    },\r\n    { \"Additional Information Info\": \"\", avoidColumns: [\"component_id\"] },\r\n    {\r\n      \"Operational Data\": \"operational_data\",\r\n      avoidColumns: [\"component_id\", \"id\"],\r\n    },\r\n    {\r\n      \"Overhaul Hours\": \"data_manager_overhauls_info\",\r\n      avoidColumns: [\"component_id\", \"id\"],\r\n    },\r\n    {\r\n      \"Overhaul Information\": \"data_manager_overhaul_maint_data\",\r\n      avoidColumns: [\r\n        \"component_id\",\r\n        \"id\",\r\n        \"overhaul_id\",\r\n        \"associated_sub_system\",\r\n      ],\r\n    },\r\n    { \"Alpha & Beta\": \"alpha_beta\", avoidColumns: [\"component_id\", \"id\"] },\r\n    {\r\n      Sensor: \"sensor_based_data\",\r\n      avoidColumns: [\r\n        \"component_id\",\r\n        \"id\",\r\n        \"equipment_id\",\r\n        \"level\",\r\n        \"data\",\r\n        \"frequency\",\r\n      ],\r\n    },\r\n    {\r\n      \"Sensor Data\": \"parameter_data\",\r\n      avoidColumns: [\"component_id\", \"id\", \"parameter_id\"],\r\n    },\r\n  ];\r\n\r\n  const DataTypeChange = (e, value) => {\r\n    setSelectedDataType(value);\r\n\r\n    const tableObject = DataTypes.find((item) => {\r\n      const key = Object.keys(item)[0];\r\n      return key === value;\r\n    });\r\n\r\n    const tableName = tableObject ? Object.values(tableObject)[0] : null;\r\n\r\n    setTable(tableName);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const equipment = componentsData.find((item) => {\r\n      return (\r\n        item.nomenclature === currentSelection[\"nomenclature\"] &&\r\n        item.ship_name === currentSelection[\"shipName\"]\r\n      );\r\n    });\r\n\r\n    if (!equipment) {\r\n      console.error(\"Equipment not found\");\r\n      return;\r\n    }\r\n\r\n    const values = {\r\n      component_id: equipment?.id,\r\n      table: table,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/getspecific_data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ values }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.code === 1) {\r\n        const filteredColumns = data.columns.filter((column) => {\r\n          const avoidColumns =\r\n            DataTypes.find((item) => item[selectedDataType] === table)\r\n              ?.avoidColumns || [];\r\n          return !avoidColumns.includes(column.field);\r\n        });\r\n\r\n        setGridData(data.columnData);\r\n        setColumns(filteredColumns);\r\n        setSnackBarMessage({\r\n          severity: \"success\",\r\n          message: data.message,\r\n          showSnackBar: true,\r\n        });\r\n      } else {\r\n        setSnackBarMessage({\r\n          severity: \"error\",\r\n          message: data.message,\r\n          showSnackBar: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setSnackBarMessage({\r\n        severity: \"error\",\r\n        message: \"Error fetching data\",\r\n        showSnackBar: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDelete = (rows) => {\r\n    if (rows.length > 0) {\r\n      handleOpenDialog();\r\n      setSelectedRows(rows);\r\n    }\r\n  };\r\n\r\n  const handleDeleteConfirmed = async () => {\r\n    handleCloseDialog();\r\n\r\n    for (const selectedRow of selectedRows) {\r\n      const values = {\r\n        table: table,\r\n        component_id: selectedRow?.component_id,\r\n        failure_mode: selectedRow?.failure_mode,\r\n        value: selectedRow?.value,\r\n        date: selectedRow?.date,\r\n        operation_date: selectedRow?.operation_date,\r\n      };\r\n\r\n      try {\r\n        // Perform deletion for each row\r\n        const response = await fetch(\"/delspecific\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ values }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.code !== 1) {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting data:\", error);\r\n        setSnackBarMessage({\r\n          severity: \"error\",\r\n          message: \"Error deleting data\",\r\n          showSnackBar: true,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    // After all deletions, fetch data and update UI\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleCheckboxChange = (row) => {\r\n    const isSelected = selectedRows.includes(row);\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((selectedRow) => selectedRow !== row)\r\n      );\r\n    } else {\r\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, row]);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchKeyword(event.target.value);\r\n  };\r\n\r\n  const filteredGridData = gridData.filter((row) =>\r\n    Object.values(row).some(\r\n      (value) =>\r\n        typeof value === \"string\" &&\r\n        value.toLowerCase().includes(searchKeyword.toLowerCase())\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"1rem\",\r\n        }}\r\n      >\r\n        <AdminInputs />\r\n        <Autocomplete\r\n          className={classes.autocomplete}\r\n          options={DataTypes.map((data) => Object.keys(data)[0])}\r\n          getOptionLabel={(option) => option}\r\n          onChange={DataTypeChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Information Type\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n        <Button\r\n          className={classes.deleteButton}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={fetchData}\r\n        >\r\n          Fetch Information\r\n        </Button>\r\n      </div>\r\n      <TextField\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        value={searchKeyword}\r\n        onChange={handleSearchChange}\r\n        style={{ margin: \"0 5rem\" }}\r\n      />\r\n      {filteredGridData.length > 0 ? (\r\n        <Container>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selectedRows.length === filteredGridData.length}\r\n                    onChange={() => {\r\n                      const allSelected =\r\n                        selectedRows.length === filteredGridData.length;\r\n                      if (allSelected) {\r\n                        setSelectedRows([]);\r\n                      } else {\r\n                        setSelectedRows([...filteredGridData]);\r\n                      }\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column.field}>{column.headerName}</TableCell>\r\n                ))}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredGridData.map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>\r\n                    <Checkbox\r\n                      checked={selectedRows.includes(row)}\r\n                      onChange={() => handleCheckboxChange(row)}\r\n                    />\r\n                  </TableCell>\r\n                  {columns.map((column) => (\r\n                    <TableCell key={column.field}>\r\n                      {row[column.field]}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell>\r\n                    <Button\r\n                      className={classes.deleteButton}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => handleDelete(selectedRows)}\r\n                    >\r\n                      DELETE\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Container>\r\n      ) : (\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"90px\",\r\n          }}\r\n        >\r\n          Fill The Above Information\r\n        </Typography>\r\n      )}\r\n      {/* Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this information?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirmed} color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\EtlEquipment.js",["920","921","922"],"D:\\IITB\\Netra\\netra\\src\\pages\\Data Administrator\\UnregisterStepper.js",[],{"ruleId":"923","replacedBy":"924"},{"ruleId":"925","replacedBy":"926"},{"ruleId":"927","severity":1,"message":"928","line":2,"column":10,"nodeType":"929","messageId":"930","endLine":2,"endColumn":19},{"ruleId":"927","severity":1,"message":"931","line":41,"column":9,"nodeType":"929","messageId":"930","endLine":41,"endColumn":23},{"ruleId":"927","severity":1,"message":"932","line":49,"column":7,"nodeType":"929","messageId":"930","endLine":49,"endColumn":12},{"ruleId":"927","severity":1,"message":"933","line":63,"column":10,"nodeType":"929","messageId":"930","endLine":63,"endColumn":26},{"ruleId":"927","severity":1,"message":"934","line":75,"column":9,"nodeType":"929","messageId":"930","endLine":75,"endColumn":23},{"ruleId":"927","severity":1,"message":"935","line":79,"column":9,"nodeType":"929","messageId":"930","endLine":79,"endColumn":18},{"ruleId":"927","severity":1,"message":"936","line":3,"column":8,"nodeType":"929","messageId":"930","endLine":3,"endColumn":17},{"ruleId":"927","severity":1,"message":"937","line":11,"column":3,"nodeType":"929","messageId":"930","endLine":11,"endColumn":11},{"ruleId":"927","severity":1,"message":"938","line":18,"column":8,"nodeType":"929","messageId":"930","endLine":18,"endColumn":18},{"ruleId":"927","severity":1,"message":"939","line":24,"column":10,"nodeType":"929","messageId":"930","endLine":24,"endColumn":17},{"ruleId":"927","severity":1,"message":"940","line":26,"column":8,"nodeType":"929","messageId":"930","endLine":26,"endColumn":26},{"ruleId":"927","severity":1,"message":"941","line":38,"column":23,"nodeType":"929","messageId":"930","endLine":38,"endColumn":28},{"ruleId":"927","severity":1,"message":"942","line":38,"column":43,"nodeType":"929","messageId":"930","endLine":38,"endColumn":49},{"ruleId":"927","severity":1,"message":"943","line":46,"column":10,"nodeType":"929","messageId":"930","endLine":46,"endColumn":19},{"ruleId":"927","severity":1,"message":"944","line":46,"column":21,"nodeType":"929","messageId":"930","endLine":46,"endColumn":33},{"ruleId":"945","severity":1,"message":"946","line":111,"column":6,"nodeType":"947","endLine":111,"endColumn":20,"suggestions":"948"},{"ruleId":"927","severity":1,"message":"949","line":36,"column":9,"nodeType":"929","messageId":"930","endLine":36,"endColumn":14},{"ruleId":"927","severity":1,"message":"950","line":9,"column":8,"nodeType":"929","messageId":"930","endLine":9,"endColumn":14},{"ruleId":"927","severity":1,"message":"951","line":43,"column":11,"nodeType":"929","messageId":"930","endLine":43,"endColumn":26},{"ruleId":"927","severity":1,"message":"952","line":55,"column":11,"nodeType":"929","messageId":"930","endLine":55,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":87,"column":17,"nodeType":"955","endLine":87,"endColumn":68},{"ruleId":"927","severity":1,"message":"956","line":13,"column":8,"nodeType":"929","messageId":"930","endLine":13,"endColumn":38},{"ruleId":"957","severity":1,"message":"958","line":47,"column":5,"nodeType":"959","messageId":"960","endLine":47,"endColumn":12},{"ruleId":"927","severity":1,"message":"961","line":64,"column":10,"nodeType":"929","messageId":"930","endLine":64,"endColumn":18},{"ruleId":"927","severity":1,"message":"962","line":64,"column":20,"nodeType":"929","messageId":"930","endLine":64,"endColumn":31},{"ruleId":"927","severity":1,"message":"963","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":14},{"ruleId":"927","severity":1,"message":"936","line":7,"column":8,"nodeType":"929","messageId":"930","endLine":7,"endColumn":17},{"ruleId":"927","severity":1,"message":"964","line":13,"column":3,"nodeType":"929","messageId":"930","endLine":13,"endColumn":8},{"ruleId":"927","severity":1,"message":"965","line":14,"column":3,"nodeType":"929","messageId":"930","endLine":14,"endColumn":13},{"ruleId":"927","severity":1,"message":"966","line":15,"column":3,"nodeType":"929","messageId":"930","endLine":15,"endColumn":19},{"ruleId":"927","severity":1,"message":"967","line":16,"column":3,"nodeType":"929","messageId":"930","endLine":16,"endColumn":14},{"ruleId":"927","severity":1,"message":"968","line":17,"column":3,"nodeType":"929","messageId":"930","endLine":17,"endColumn":12},{"ruleId":"927","severity":1,"message":"969","line":21,"column":3,"nodeType":"929","messageId":"930","endLine":21,"endColumn":15},{"ruleId":"927","severity":1,"message":"970","line":22,"column":3,"nodeType":"929","messageId":"930","endLine":22,"endColumn":12},{"ruleId":"927","severity":1,"message":"971","line":23,"column":3,"nodeType":"929","messageId":"930","endLine":23,"endColumn":12},{"ruleId":"927","severity":1,"message":"972","line":24,"column":3,"nodeType":"929","messageId":"930","endLine":24,"endColumn":15},{"ruleId":"927","severity":1,"message":"973","line":25,"column":3,"nodeType":"929","messageId":"930","endLine":25,"endColumn":16},{"ruleId":"927","severity":1,"message":"974","line":26,"column":3,"nodeType":"929","messageId":"930","endLine":26,"endColumn":13},{"ruleId":"927","severity":1,"message":"975","line":28,"column":8,"nodeType":"929","messageId":"930","endLine":28,"endColumn":16},{"ruleId":"927","severity":1,"message":"950","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":16},{"ruleId":"927","severity":1,"message":"976","line":2,"column":17,"nodeType":"929","messageId":"930","endLine":2,"endColumn":25},{"ruleId":"927","severity":1,"message":"977","line":5,"column":8,"nodeType":"929","messageId":"930","endLine":5,"endColumn":25},{"ruleId":"927","severity":1,"message":"961","line":14,"column":10,"nodeType":"929","messageId":"930","endLine":14,"endColumn":18},{"ruleId":"927","severity":1,"message":"978","line":16,"column":9,"nodeType":"929","messageId":"930","endLine":16,"endColumn":20},{"ruleId":"927","severity":1,"message":"979","line":20,"column":9,"nodeType":"929","messageId":"930","endLine":20,"endColumn":20},{"ruleId":"927","severity":1,"message":"980","line":28,"column":9,"nodeType":"929","messageId":"930","endLine":28,"endColumn":15},{"ruleId":"927","severity":1,"message":"936","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":17},{"ruleId":"927","severity":1,"message":"981","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":21},{"ruleId":"927","severity":1,"message":"982","line":5,"column":8,"nodeType":"929","messageId":"930","endLine":5,"endColumn":16},{"ruleId":"927","severity":1,"message":"983","line":11,"column":10,"nodeType":"929","messageId":"930","endLine":11,"endColumn":14},{"ruleId":"927","severity":1,"message":"984","line":11,"column":16,"nodeType":"929","messageId":"930","endLine":11,"endColumn":34},{"ruleId":"927","severity":1,"message":"985","line":11,"column":44,"nodeType":"929","messageId":"930","endLine":11,"endColumn":52},{"ruleId":"986","severity":1,"message":"987","line":88,"column":41,"nodeType":"988","messageId":"960","endLine":88,"endColumn":43},{"ruleId":"927","severity":1,"message":"989","line":1,"column":27,"nodeType":"929","messageId":"930","endLine":1,"endColumn":38},{"ruleId":"927","severity":1,"message":"990","line":126,"column":10,"nodeType":"929","messageId":"930","endLine":126,"endColumn":17},{"ruleId":"927","severity":1,"message":"991","line":126,"column":19,"nodeType":"929","messageId":"930","endLine":126,"endColumn":29},{"ruleId":"927","severity":1,"message":"992","line":127,"column":10,"nodeType":"929","messageId":"930","endLine":127,"endColumn":19},{"ruleId":"927","severity":1,"message":"993","line":127,"column":21,"nodeType":"929","messageId":"930","endLine":127,"endColumn":31},{"ruleId":"927","severity":1,"message":"994","line":6,"column":3,"nodeType":"929","messageId":"930","endLine":6,"endColumn":9},{"ruleId":"927","severity":1,"message":"995","line":8,"column":3,"nodeType":"929","messageId":"930","endLine":8,"endColumn":8},{"ruleId":"927","severity":1,"message":"982","line":12,"column":8,"nodeType":"929","messageId":"930","endLine":12,"endColumn":16},{"ruleId":"927","severity":1,"message":"983","line":15,"column":10,"nodeType":"929","messageId":"930","endLine":15,"endColumn":14},{"ruleId":"927","severity":1,"message":"984","line":15,"column":16,"nodeType":"929","messageId":"930","endLine":15,"endColumn":34},{"ruleId":"927","severity":1,"message":"996","line":15,"column":36,"nodeType":"929","messageId":"930","endLine":15,"endColumn":42},{"ruleId":"927","severity":1,"message":"985","line":15,"column":44,"nodeType":"929","messageId":"930","endLine":15,"endColumn":52},{"ruleId":"927","severity":1,"message":"997","line":17,"column":8,"nodeType":"929","messageId":"930","endLine":17,"endColumn":21},{"ruleId":"927","severity":1,"message":"998","line":20,"column":3,"nodeType":"929","messageId":"930","endLine":20,"endColumn":21},{"ruleId":"927","severity":1,"message":"999","line":38,"column":10,"nodeType":"929","messageId":"930","endLine":38,"endColumn":23},{"ruleId":"927","severity":1,"message":"1000","line":40,"column":10,"nodeType":"929","messageId":"930","endLine":40,"endColumn":24},{"ruleId":"927","severity":1,"message":"1001","line":51,"column":25,"nodeType":"929","messageId":"930","endLine":51,"endColumn":41},{"ruleId":"927","severity":1,"message":"1002","line":53,"column":9,"nodeType":"929","messageId":"930","endLine":53,"endColumn":24},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"1004","line":6,"column":10,"nodeType":"929","messageId":"930","endLine":6,"endColumn":20},{"ruleId":"927","severity":1,"message":"1005","line":18,"column":24,"nodeType":"929","messageId":"930","endLine":18,"endColumn":39},{"ruleId":"927","severity":1,"message":"1006","line":25,"column":18,"nodeType":"929","messageId":"930","endLine":25,"endColumn":27},{"ruleId":"927","severity":1,"message":"1007","line":67,"column":9,"nodeType":"929","messageId":"930","endLine":67,"endColumn":17},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"966","line":3,"column":48,"nodeType":"929","messageId":"930","endLine":3,"endColumn":64},{"ruleId":"927","severity":1,"message":"1008","line":3,"column":66,"nodeType":"929","messageId":"930","endLine":3,"endColumn":74},{"ruleId":"927","severity":1,"message":"1009","line":39,"column":10,"nodeType":"929","messageId":"930","endLine":39,"endColumn":19},{"ruleId":"927","severity":1,"message":"1010","line":39,"column":21,"nodeType":"929","messageId":"930","endLine":39,"endColumn":33},{"ruleId":"927","severity":1,"message":"1011","line":49,"column":10,"nodeType":"929","messageId":"930","endLine":49,"endColumn":22},{"ruleId":"927","severity":1,"message":"1012","line":49,"column":24,"nodeType":"929","messageId":"930","endLine":49,"endColumn":39},{"ruleId":"927","severity":1,"message":"966","line":9,"column":3,"nodeType":"929","messageId":"930","endLine":9,"endColumn":19},{"ruleId":"927","severity":1,"message":"1008","line":10,"column":3,"nodeType":"929","messageId":"930","endLine":10,"endColumn":11},{"ruleId":"927","severity":1,"message":"1013","line":16,"column":8,"nodeType":"929","messageId":"930","endLine":16,"endColumn":21},{"ruleId":"927","severity":1,"message":"1014","line":19,"column":10,"nodeType":"929","messageId":"930","endLine":19,"endColumn":14},{"ruleId":"953","severity":1,"message":"954","line":113,"column":11,"nodeType":"955","endLine":113,"endColumn":62},{"ruleId":"927","severity":1,"message":"1015","line":5,"column":8,"nodeType":"929","messageId":"930","endLine":5,"endColumn":13},{"ruleId":"927","severity":1,"message":"1014","line":8,"column":25,"nodeType":"929","messageId":"930","endLine":8,"endColumn":29},{"ruleId":"927","severity":1,"message":"1016","line":11,"column":9,"nodeType":"929","messageId":"930","endLine":11,"endColumn":28},{"ruleId":"927","severity":1,"message":"1017","line":11,"column":20,"nodeType":"929","messageId":"930","endLine":11,"endColumn":27},{"ruleId":"927","severity":1,"message":"1018","line":9,"column":10,"nodeType":"929","messageId":"930","endLine":9,"endColumn":25},{"ruleId":"927","severity":1,"message":"1019","line":42,"column":9,"nodeType":"929","messageId":"930","endLine":42,"endColumn":17},{"ruleId":"927","severity":1,"message":"1020","line":46,"column":10,"nodeType":"929","messageId":"930","endLine":46,"endColumn":23},{"ruleId":"927","severity":1,"message":"1021","line":46,"column":25,"nodeType":"929","messageId":"930","endLine":46,"endColumn":41},{"ruleId":"927","severity":1,"message":"933","line":60,"column":10,"nodeType":"929","messageId":"930","endLine":60,"endColumn":26},{"ruleId":"927","severity":1,"message":"1022","line":76,"column":9,"nodeType":"929","messageId":"930","endLine":76,"endColumn":13},{"ruleId":"927","severity":1,"message":"934","line":80,"column":9,"nodeType":"929","messageId":"930","endLine":80,"endColumn":23},{"ruleId":"927","severity":1,"message":"1013","line":13,"column":8,"nodeType":"929","messageId":"930","endLine":13,"endColumn":21},{"ruleId":"927","severity":1,"message":"1023","line":1,"column":38,"nodeType":"929","messageId":"930","endLine":1,"endColumn":44},{"ruleId":"927","severity":1,"message":"936","line":5,"column":8,"nodeType":"929","messageId":"930","endLine":5,"endColumn":17},{"ruleId":"927","severity":1,"message":"1024","line":8,"column":18,"nodeType":"929","messageId":"930","endLine":8,"endColumn":51},{"ruleId":"927","severity":1,"message":"1025","line":21,"column":16,"nodeType":"929","messageId":"930","endLine":21,"endColumn":20},{"ruleId":"927","severity":1,"message":"942","line":39,"column":43,"nodeType":"929","messageId":"930","endLine":39,"endColumn":49},{"ruleId":"927","severity":1,"message":"1026","line":116,"column":9,"nodeType":"929","messageId":"930","endLine":116,"endColumn":19},{"ruleId":"927","severity":1,"message":"1027","line":134,"column":9,"nodeType":"929","messageId":"930","endLine":134,"endColumn":19},{"ruleId":"945","severity":1,"message":"1028","line":166,"column":6,"nodeType":"947","endLine":166,"endColumn":29,"suggestions":"1029"},{"ruleId":"927","severity":1,"message":"1030","line":167,"column":15,"nodeType":"929","messageId":"930","endLine":167,"endColumn":23},{"ruleId":"927","severity":1,"message":"1031","line":22,"column":10,"nodeType":"929","messageId":"930","endLine":22,"endColumn":33},{"ruleId":"927","severity":1,"message":"1032","line":37,"column":10,"nodeType":"929","messageId":"930","endLine":37,"endColumn":24},{"ruleId":"927","severity":1,"message":"1033","line":37,"column":26,"nodeType":"929","messageId":"930","endLine":37,"endColumn":43},{"ruleId":"927","severity":1,"message":"1017","line":39,"column":20,"nodeType":"929","messageId":"930","endLine":39,"endColumn":27},{"ruleId":"927","severity":1,"message":"1034","line":44,"column":7,"nodeType":"929","messageId":"930","endLine":44,"endColumn":18},{"ruleId":"927","severity":1,"message":"1035","line":38,"column":9,"nodeType":"929","messageId":"930","endLine":38,"endColumn":22},{"ruleId":"927","severity":1,"message":"931","line":40,"column":9,"nodeType":"929","messageId":"930","endLine":40,"endColumn":23},{"ruleId":"927","severity":1,"message":"932","line":44,"column":7,"nodeType":"929","messageId":"930","endLine":44,"endColumn":12},{"ruleId":"927","severity":1,"message":"933","line":58,"column":10,"nodeType":"929","messageId":"930","endLine":58,"endColumn":26},{"ruleId":"927","severity":1,"message":"934","line":70,"column":9,"nodeType":"929","messageId":"930","endLine":70,"endColumn":23},{"ruleId":"927","severity":1,"message":"935","line":74,"column":9,"nodeType":"929","messageId":"930","endLine":74,"endColumn":18},{"ruleId":"927","severity":1,"message":"1036","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":22},{"ruleId":"927","severity":1,"message":"1037","line":12,"column":8,"nodeType":"929","messageId":"930","endLine":12,"endColumn":18},{"ruleId":"927","severity":1,"message":"1003","line":2,"column":5,"nodeType":"929","messageId":"930","endLine":2,"endColumn":14},{"ruleId":"927","severity":1,"message":"1038","line":10,"column":12,"nodeType":"929","messageId":"930","endLine":10,"endColumn":23},{"ruleId":"927","severity":1,"message":"1039","line":17,"column":11,"nodeType":"929","messageId":"930","endLine":17,"endColumn":19},{"ruleId":"927","severity":1,"message":"1040","line":19,"column":9,"nodeType":"929","messageId":"930","endLine":19,"endColumn":36},{"ruleId":"927","severity":1,"message":"1041","line":20,"column":11,"nodeType":"929","messageId":"930","endLine":20,"endColumn":21},{"ruleId":"945","severity":1,"message":"1042","line":68,"column":6,"nodeType":"947","endLine":68,"endColumn":8,"suggestions":"1043"},{"ruleId":"986","severity":1,"message":"987","line":164,"column":27,"nodeType":"988","messageId":"960","endLine":164,"endColumn":29},{"ruleId":"927","severity":1,"message":"1044","line":11,"column":3,"nodeType":"929","messageId":"930","endLine":11,"endColumn":12},{"ruleId":"927","severity":1,"message":"950","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":14},{"ruleId":"927","severity":1,"message":"1045","line":11,"column":7,"nodeType":"929","messageId":"930","endLine":11,"endColumn":16},{"ruleId":"927","severity":1,"message":"1046","line":1,"column":22,"nodeType":"929","messageId":"930","endLine":1,"endColumn":31},{"ruleId":"927","severity":1,"message":"1047","line":35,"column":9,"nodeType":"929","messageId":"930","endLine":35,"endColumn":21},{"ruleId":"927","severity":1,"message":"1037","line":13,"column":3,"nodeType":"929","messageId":"930","endLine":13,"endColumn":13},{"ruleId":"927","severity":1,"message":"1048","line":59,"column":9,"nodeType":"929","messageId":"930","endLine":59,"endColumn":19},{"ruleId":"927","severity":1,"message":"975","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":16},{"ruleId":"927","severity":1,"message":"1049","line":5,"column":10,"nodeType":"929","messageId":"930","endLine":5,"endColumn":21},{"ruleId":"927","severity":1,"message":"1050","line":7,"column":8,"nodeType":"929","messageId":"930","endLine":7,"endColumn":18},{"ruleId":"927","severity":1,"message":"1038","line":10,"column":23,"nodeType":"929","messageId":"930","endLine":10,"endColumn":34},{"ruleId":"927","severity":1,"message":"1025","line":11,"column":16,"nodeType":"929","messageId":"930","endLine":11,"endColumn":20},{"ruleId":"927","severity":1,"message":"1017","line":48,"column":18,"nodeType":"929","messageId":"930","endLine":48,"endColumn":25},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"1051","line":6,"column":8,"nodeType":"929","messageId":"930","endLine":6,"endColumn":26},{"ruleId":"927","severity":1,"message":"1052","line":10,"column":10,"nodeType":"929","messageId":"930","endLine":10,"endColumn":21},{"ruleId":"927","severity":1,"message":"950","line":3,"column":8,"nodeType":"929","messageId":"930","endLine":3,"endColumn":14},{"ruleId":"927","severity":1,"message":"1053","line":23,"column":8,"nodeType":"929","messageId":"930","endLine":23,"endColumn":16},{"ruleId":"927","severity":1,"message":"1050","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1054","line":9,"column":8,"nodeType":"929","messageId":"930","endLine":9,"endColumn":18},{"ruleId":"927","severity":1,"message":"1050","line":6,"column":8,"nodeType":"929","messageId":"930","endLine":6,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":16,"column":20,"nodeType":"929","messageId":"930","endLine":16,"endColumn":27},{"ruleId":"927","severity":1,"message":"1055","line":1,"column":8,"nodeType":"929","messageId":"930","endLine":1,"endColumn":25},{"ruleId":"927","severity":1,"message":"1052","line":7,"column":23,"nodeType":"929","messageId":"930","endLine":7,"endColumn":34},{"ruleId":"927","severity":1,"message":"1056","line":17,"column":11,"nodeType":"929","messageId":"930","endLine":17,"endColumn":21},{"ruleId":"927","severity":1,"message":"950","line":7,"column":8,"nodeType":"929","messageId":"930","endLine":7,"endColumn":14},{"ruleId":"927","severity":1,"message":"1037","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1057","line":100,"column":9,"nodeType":"929","messageId":"930","endLine":100,"endColumn":19},{"ruleId":"927","severity":1,"message":"1058","line":104,"column":9,"nodeType":"929","messageId":"930","endLine":104,"endColumn":19},{"ruleId":"927","severity":1,"message":"1059","line":108,"column":9,"nodeType":"929","messageId":"930","endLine":108,"endColumn":20},{"ruleId":"927","severity":1,"message":"1037","line":5,"column":10,"nodeType":"929","messageId":"930","endLine":5,"endColumn":20},{"ruleId":"927","severity":1,"message":"950","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":16},{"ruleId":"927","severity":1,"message":"1024","line":1,"column":18,"nodeType":"929","messageId":"930","endLine":1,"endColumn":51},{"ruleId":"927","severity":1,"message":"1060","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":20},{"ruleId":"927","severity":1,"message":"1038","line":5,"column":10,"nodeType":"929","messageId":"930","endLine":5,"endColumn":21},{"ruleId":"927","severity":1,"message":"1061","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":31},{"ruleId":"927","severity":1,"message":"950","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":16},{"ruleId":"927","severity":1,"message":"1060","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":20},{"ruleId":"927","severity":1,"message":"1038","line":5,"column":10,"nodeType":"929","messageId":"930","endLine":5,"endColumn":21},{"ruleId":"927","severity":1,"message":"1003","line":2,"column":3,"nodeType":"929","messageId":"930","endLine":2,"endColumn":12},{"ruleId":"927","severity":1,"message":"1062","line":4,"column":3,"nodeType":"929","messageId":"930","endLine":4,"endColumn":22},{"ruleId":"927","severity":1,"message":"1023","line":5,"column":3,"nodeType":"929","messageId":"930","endLine":5,"endColumn":9},{"ruleId":"927","severity":1,"message":"1063","line":6,"column":3,"nodeType":"929","messageId":"930","endLine":6,"endColumn":13},{"ruleId":"927","severity":1,"message":"1038","line":8,"column":10,"nodeType":"929","messageId":"930","endLine":8,"endColumn":21},{"ruleId":"927","severity":1,"message":"950","line":9,"column":10,"nodeType":"929","messageId":"930","endLine":9,"endColumn":16},{"ruleId":"927","severity":1,"message":"1060","line":10,"column":8,"nodeType":"929","messageId":"930","endLine":10,"endColumn":20},{"ruleId":"945","severity":1,"message":"1064","line":32,"column":6,"nodeType":"947","endLine":32,"endColumn":8,"suggestions":"1065"},{"ruleId":"927","severity":1,"message":"1066","line":36,"column":7,"nodeType":"929","messageId":"930","endLine":36,"endColumn":23},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":19},{"ruleId":"927","severity":1,"message":"976","line":1,"column":21,"nodeType":"929","messageId":"930","endLine":1,"endColumn":29},{"ruleId":"927","severity":1,"message":"1038","line":2,"column":10,"nodeType":"929","messageId":"930","endLine":2,"endColumn":21},{"ruleId":"927","severity":1,"message":"950","line":3,"column":10,"nodeType":"929","messageId":"930","endLine":3,"endColumn":16},{"ruleId":"927","severity":1,"message":"1060","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":20},{"ruleId":"927","severity":1,"message":"1067","line":7,"column":10,"nodeType":"929","messageId":"930","endLine":7,"endColumn":19},{"ruleId":"927","severity":1,"message":"966","line":3,"column":3,"nodeType":"929","messageId":"930","endLine":3,"endColumn":19},{"ruleId":"927","severity":1,"message":"964","line":5,"column":3,"nodeType":"929","messageId":"930","endLine":5,"endColumn":8},{"ruleId":"927","severity":1,"message":"965","line":6,"column":3,"nodeType":"929","messageId":"930","endLine":6,"endColumn":13},{"ruleId":"927","severity":1,"message":"1060","line":16,"column":8,"nodeType":"929","messageId":"930","endLine":16,"endColumn":20},{"ruleId":"927","severity":1,"message":"1068","line":22,"column":8,"nodeType":"929","messageId":"930","endLine":22,"endColumn":13},{"ruleId":"927","severity":1,"message":"1069","line":24,"column":8,"nodeType":"929","messageId":"930","endLine":24,"endColumn":13},{"ruleId":"927","severity":1,"message":"1070","line":29,"column":10,"nodeType":"929","messageId":"930","endLine":29,"endColumn":19},{"ruleId":"927","severity":1,"message":"1071","line":43,"column":10,"nodeType":"929","messageId":"930","endLine":43,"endColumn":24},{"ruleId":"927","severity":1,"message":"1072","line":49,"column":9,"nodeType":"929","messageId":"930","endLine":49,"endColumn":32},{"ruleId":"927","severity":1,"message":"1073","line":95,"column":9,"nodeType":"929","messageId":"930","endLine":95,"endColumn":27},{"ruleId":"927","severity":1,"message":"1074","line":118,"column":15,"nodeType":"929","messageId":"930","endLine":118,"endColumn":23},{"ruleId":"927","severity":1,"message":"1075","line":118,"column":25,"nodeType":"929","messageId":"930","endLine":118,"endColumn":37},{"ruleId":"927","severity":1,"message":"1076","line":7,"column":8,"nodeType":"929","messageId":"930","endLine":7,"endColumn":16},{"ruleId":"927","severity":1,"message":"1003","line":2,"column":3,"nodeType":"929","messageId":"930","endLine":2,"endColumn":12},{"ruleId":"927","severity":1,"message":"1038","line":10,"column":10,"nodeType":"929","messageId":"930","endLine":10,"endColumn":21},{"ruleId":"927","severity":1,"message":"1077","line":11,"column":8,"nodeType":"929","messageId":"930","endLine":11,"endColumn":27},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"1078","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":16},{"ruleId":"927","severity":1,"message":"1044","line":9,"column":10,"nodeType":"929","messageId":"930","endLine":9,"endColumn":19},{"ruleId":"927","severity":1,"message":"1037","line":9,"column":21,"nodeType":"929","messageId":"930","endLine":9,"endColumn":31},{"ruleId":"927","severity":1,"message":"1079","line":97,"column":10,"nodeType":"929","messageId":"930","endLine":97,"endColumn":23},{"ruleId":"927","severity":1,"message":"1017","line":13,"column":20,"nodeType":"929","messageId":"930","endLine":13,"endColumn":27},{"ruleId":"927","severity":1,"message":"1069","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":13},{"ruleId":"927","severity":1,"message":"1050","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":36,"column":20,"nodeType":"929","messageId":"930","endLine":36,"endColumn":27},{"ruleId":"927","severity":1,"message":"1023","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":23},{"ruleId":"927","severity":1,"message":"1050","line":9,"column":8,"nodeType":"929","messageId":"930","endLine":9,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":100,"column":20,"nodeType":"929","messageId":"930","endLine":100,"endColumn":27},{"ruleId":"927","severity":1,"message":"1050","line":6,"column":8,"nodeType":"929","messageId":"930","endLine":6,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":15,"column":20,"nodeType":"929","messageId":"930","endLine":15,"endColumn":27},{"ruleId":"927","severity":1,"message":"1050","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":34,"column":20,"nodeType":"929","messageId":"930","endLine":34,"endColumn":27},{"ruleId":"927","severity":1,"message":"1050","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":34,"column":20,"nodeType":"929","messageId":"930","endLine":34,"endColumn":27},{"ruleId":"927","severity":1,"message":"1069","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":13},{"ruleId":"927","severity":1,"message":"995","line":5,"column":18,"nodeType":"929","messageId":"930","endLine":5,"endColumn":23},{"ruleId":"927","severity":1,"message":"1050","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1017","line":76,"column":20,"nodeType":"929","messageId":"930","endLine":76,"endColumn":27},{"ruleId":"927","severity":1,"message":"1003","line":2,"column":3,"nodeType":"929","messageId":"930","endLine":2,"endColumn":12},{"ruleId":"927","severity":1,"message":"1038","line":10,"column":10,"nodeType":"929","messageId":"930","endLine":10,"endColumn":21},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"1080","line":6,"column":7,"nodeType":"929","messageId":"930","endLine":6,"endColumn":11},{"ruleId":"927","severity":1,"message":"1081","line":7,"column":7,"nodeType":"929","messageId":"930","endLine":7,"endColumn":18},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":27,"nodeType":"929","messageId":"930","endLine":1,"endColumn":36},{"ruleId":"927","severity":1,"message":"1082","line":4,"column":8,"nodeType":"929","messageId":"930","endLine":4,"endColumn":17},{"ruleId":"927","severity":1,"message":"1083","line":20,"column":10,"nodeType":"929","messageId":"930","endLine":20,"endColumn":19},{"ruleId":"927","severity":1,"message":"1084","line":20,"column":21,"nodeType":"929","messageId":"930","endLine":20,"endColumn":32},{"ruleId":"927","severity":1,"message":"1003","line":2,"column":3,"nodeType":"929","messageId":"930","endLine":2,"endColumn":12},{"ruleId":"927","severity":1,"message":"1038","line":10,"column":10,"nodeType":"929","messageId":"930","endLine":10,"endColumn":21},{"ruleId":"927","severity":1,"message":"1077","line":11,"column":8,"nodeType":"929","messageId":"930","endLine":11,"endColumn":27},{"ruleId":"927","severity":1,"message":"1085","line":37,"column":15,"nodeType":"929","messageId":"930","endLine":37,"endColumn":19},{"ruleId":"927","severity":1,"message":"1025","line":4,"column":16,"nodeType":"929","messageId":"930","endLine":4,"endColumn":20},{"ruleId":"927","severity":1,"message":"1079","line":17,"column":12,"nodeType":"929","messageId":"930","endLine":17,"endColumn":25},{"ruleId":"927","severity":1,"message":"1015","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":13},{"ruleId":"927","severity":1,"message":"1038","line":7,"column":10,"nodeType":"929","messageId":"930","endLine":7,"endColumn":21},{"ruleId":"927","severity":1,"message":"1079","line":12,"column":10,"nodeType":"929","messageId":"930","endLine":12,"endColumn":23},{"ruleId":"927","severity":1,"message":"1015","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":13},{"ruleId":"927","severity":1,"message":"1079","line":13,"column":10,"nodeType":"929","messageId":"930","endLine":13,"endColumn":23},{"ruleId":"927","severity":1,"message":"1048","line":21,"column":9,"nodeType":"929","messageId":"930","endLine":21,"endColumn":19},{"ruleId":"927","severity":1,"message":"1086","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":14},{"ruleId":"927","severity":1,"message":"1087","line":3,"column":8,"nodeType":"929","messageId":"930","endLine":3,"endColumn":16},{"ruleId":"927","severity":1,"message":"1088","line":5,"column":53,"nodeType":"929","messageId":"930","endLine":5,"endColumn":57},{"ruleId":"927","severity":1,"message":"1071","line":27,"column":12,"nodeType":"929","messageId":"930","endLine":27,"endColumn":26},{"ruleId":"927","severity":1,"message":"1089","line":27,"column":28,"nodeType":"929","messageId":"930","endLine":27,"endColumn":45},{"ruleId":"927","severity":1,"message":"1090","line":28,"column":12,"nodeType":"929","messageId":"930","endLine":28,"endColumn":24},{"ruleId":"927","severity":1,"message":"1091","line":29,"column":12,"nodeType":"929","messageId":"930","endLine":29,"endColumn":30},{"ruleId":"927","severity":1,"message":"1092","line":31,"column":12,"nodeType":"929","messageId":"930","endLine":31,"endColumn":20},{"ruleId":"927","severity":1,"message":"1093","line":31,"column":22,"nodeType":"929","messageId":"930","endLine":31,"endColumn":33},{"ruleId":"927","severity":1,"message":"1094","line":32,"column":12,"nodeType":"929","messageId":"930","endLine":32,"endColumn":25},{"ruleId":"927","severity":1,"message":"1095","line":32,"column":27,"nodeType":"929","messageId":"930","endLine":32,"endColumn":43},{"ruleId":"927","severity":1,"message":"1038","line":4,"column":23,"nodeType":"929","messageId":"930","endLine":4,"endColumn":34},{"ruleId":"927","severity":1,"message":"1025","line":5,"column":16,"nodeType":"929","messageId":"930","endLine":5,"endColumn":20},{"ruleId":"927","severity":1,"message":"1096","line":12,"column":9,"nodeType":"929","messageId":"930","endLine":12,"endColumn":23},{"ruleId":"927","severity":1,"message":"1097","line":54,"column":13,"nodeType":"929","messageId":"930","endLine":54,"endColumn":19},{"ruleId":"927","severity":1,"message":"1060","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":20},{"ruleId":"927","severity":1,"message":"975","line":5,"column":8,"nodeType":"929","messageId":"930","endLine":5,"endColumn":16},{"ruleId":"927","severity":1,"message":"1098","line":7,"column":10,"nodeType":"929","messageId":"930","endLine":7,"endColumn":19},{"ruleId":"927","severity":1,"message":"1004","line":7,"column":21,"nodeType":"929","messageId":"930","endLine":7,"endColumn":31},{"ruleId":"927","severity":1,"message":"1038","line":9,"column":23,"nodeType":"929","messageId":"930","endLine":9,"endColumn":34},{"ruleId":"927","severity":1,"message":"1025","line":10,"column":16,"nodeType":"929","messageId":"930","endLine":10,"endColumn":20},{"ruleId":"927","severity":1,"message":"1099","line":23,"column":9,"nodeType":"929","messageId":"930","endLine":23,"endColumn":21},{"ruleId":"927","severity":1,"message":"1097","line":65,"column":11,"nodeType":"929","messageId":"930","endLine":65,"endColumn":17},{"ruleId":"927","severity":1,"message":"976","line":3,"column":10,"nodeType":"929","messageId":"930","endLine":3,"endColumn":18},{"ruleId":"927","severity":1,"message":"928","line":7,"column":10,"nodeType":"929","messageId":"930","endLine":7,"endColumn":19},{"ruleId":"927","severity":1,"message":"1054","line":8,"column":8,"nodeType":"929","messageId":"930","endLine":8,"endColumn":18},{"ruleId":"927","severity":1,"message":"1100","line":7,"column":10,"nodeType":"929","messageId":"930","endLine":7,"endColumn":28},{"ruleId":"927","severity":1,"message":"1025","line":6,"column":16,"nodeType":"929","messageId":"930","endLine":6,"endColumn":20},{"ruleId":"927","severity":1,"message":"1101","line":2,"column":29,"nodeType":"929","messageId":"930","endLine":2,"endColumn":35},{"ruleId":"927","severity":1,"message":"1102","line":2,"column":37,"nodeType":"929","messageId":"930","endLine":2,"endColumn":48},{"ruleId":"927","severity":1,"message":"1103","line":2,"column":50,"nodeType":"929","messageId":"930","endLine":2,"endColumn":63},{"ruleId":"927","severity":1,"message":"1104","line":2,"column":65,"nodeType":"929","messageId":"930","endLine":2,"endColumn":78},{"ruleId":"927","severity":1,"message":"1044","line":3,"column":3,"nodeType":"929","messageId":"930","endLine":3,"endColumn":12},{"ruleId":"927","severity":1,"message":"1105","line":19,"column":3,"nodeType":"929","messageId":"930","endLine":19,"endColumn":6},{"ruleId":"927","severity":1,"message":"1106","line":27,"column":23,"nodeType":"929","messageId":"930","endLine":27,"endColumn":37},{"ruleId":"927","severity":1,"message":"1107","line":38,"column":10,"nodeType":"929","messageId":"930","endLine":38,"endColumn":12},{"ruleId":"927","severity":1,"message":"1108","line":38,"column":14,"nodeType":"929","messageId":"930","endLine":38,"endColumn":19},{"ruleId":"927","severity":1,"message":"1109","line":39,"column":27,"nodeType":"929","messageId":"930","endLine":39,"endColumn":45},{"ruleId":"927","severity":1,"message":"1023","line":2,"column":41,"nodeType":"929","messageId":"930","endLine":2,"endColumn":47},{"ruleId":"927","severity":1,"message":"1110","line":21,"column":8,"nodeType":"929","messageId":"930","endLine":21,"endColumn":25},{"ruleId":"945","severity":1,"message":"1111","line":134,"column":6,"nodeType":"947","endLine":134,"endColumn":18,"suggestions":"1112"},{"ruleId":"945","severity":1,"message":"1113","line":190,"column":5,"nodeType":"947","endLine":190,"endColumn":16,"suggestions":"1114"},{"ruleId":"927","severity":1,"message":"1115","line":210,"column":11,"nodeType":"929","messageId":"930","endLine":210,"endColumn":19},{"ruleId":"927","severity":1,"message":"1116","line":223,"column":7,"nodeType":"929","messageId":"930","endLine":223,"endColumn":12},{"ruleId":"1117","severity":1,"message":"1118","line":253,"column":39,"nodeType":"988","messageId":"1119","endLine":253,"endColumn":40},{"ruleId":"927","severity":1,"message":"1120","line":51,"column":9,"nodeType":"929","messageId":"930","endLine":51,"endColumn":15},{"ruleId":"927","severity":1,"message":"1121","line":55,"column":9,"nodeType":"929","messageId":"930","endLine":55,"endColumn":20},{"ruleId":"927","severity":1,"message":"1122","line":76,"column":9,"nodeType":"929","messageId":"930","endLine":76,"endColumn":13},{"ruleId":"927","severity":1,"message":"1054","line":11,"column":8,"nodeType":"929","messageId":"930","endLine":11,"endColumn":18},{"ruleId":"957","severity":1,"message":"958","line":20,"column":7,"nodeType":"959","messageId":"960","endLine":20,"endColumn":14},{"ruleId":"927","severity":1,"message":"1036","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":22},{"ruleId":"927","severity":1,"message":"1123","line":37,"column":7,"nodeType":"929","messageId":"930","endLine":37,"endColumn":20},{"ruleId":"927","severity":1,"message":"965","line":5,"column":18,"nodeType":"929","messageId":"930","endLine":5,"endColumn":28},{"ruleId":"927","severity":1,"message":"966","line":5,"column":30,"nodeType":"929","messageId":"930","endLine":5,"endColumn":46},{"ruleId":"927","severity":1,"message":"964","line":5,"column":48,"nodeType":"929","messageId":"930","endLine":5,"endColumn":53},{"ruleId":"927","severity":1,"message":"1124","line":10,"column":10,"nodeType":"929","messageId":"930","endLine":10,"endColumn":15},{"ruleId":"927","severity":1,"message":"1125","line":14,"column":8,"nodeType":"929","messageId":"930","endLine":14,"endColumn":18},{"ruleId":"927","severity":1,"message":"1126","line":24,"column":28,"nodeType":"929","messageId":"930","endLine":24,"endColumn":47},{"ruleId":"927","severity":1,"message":"1127","line":28,"column":10,"nodeType":"929","messageId":"930","endLine":28,"endColumn":23},{"ruleId":"927","severity":1,"message":"1128","line":30,"column":10,"nodeType":"929","messageId":"930","endLine":30,"endColumn":28},{"ruleId":"927","severity":1,"message":"1129","line":50,"column":10,"nodeType":"929","messageId":"930","endLine":50,"endColumn":22},{"ruleId":"927","severity":1,"message":"1130","line":50,"column":24,"nodeType":"929","messageId":"930","endLine":50,"endColumn":39},{"ruleId":"927","severity":1,"message":"965","line":5,"column":17,"nodeType":"929","messageId":"930","endLine":5,"endColumn":27},{"ruleId":"927","severity":1,"message":"966","line":5,"column":28,"nodeType":"929","messageId":"930","endLine":5,"endColumn":44},{"ruleId":"927","severity":1,"message":"964","line":5,"column":45,"nodeType":"929","messageId":"930","endLine":5,"endColumn":50},{"ruleId":"927","severity":1,"message":"965","line":5,"column":18,"nodeType":"929","messageId":"930","endLine":5,"endColumn":28},{"ruleId":"927","severity":1,"message":"966","line":5,"column":30,"nodeType":"929","messageId":"930","endLine":5,"endColumn":46},{"ruleId":"927","severity":1,"message":"964","line":5,"column":48,"nodeType":"929","messageId":"930","endLine":5,"endColumn":53},{"ruleId":"927","severity":1,"message":"1101","line":3,"column":3,"nodeType":"929","messageId":"930","endLine":3,"endColumn":9},{"ruleId":"927","severity":1,"message":"1131","line":66,"column":21,"nodeType":"929","messageId":"930","endLine":66,"endColumn":33},{"ruleId":"927","severity":1,"message":"1132","line":68,"column":10,"nodeType":"929","messageId":"930","endLine":68,"endColumn":26},{"ruleId":"927","severity":1,"message":"1133","line":69,"column":10,"nodeType":"929","messageId":"930","endLine":69,"endColumn":31},{"ruleId":"927","severity":1,"message":"1134","line":70,"column":10,"nodeType":"929","messageId":"930","endLine":70,"endColumn":25},{"ruleId":"927","severity":1,"message":"1135","line":71,"column":10,"nodeType":"929","messageId":"930","endLine":71,"endColumn":31},{"ruleId":"927","severity":1,"message":"1136","line":71,"column":33,"nodeType":"929","messageId":"930","endLine":71,"endColumn":57},{"ruleId":"927","severity":1,"message":"1137","line":75,"column":10,"nodeType":"929","messageId":"930","endLine":75,"endColumn":27},{"ruleId":"927","severity":1,"message":"1138","line":78,"column":9,"nodeType":"929","messageId":"930","endLine":78,"endColumn":14},{"ruleId":"927","severity":1,"message":"965","line":5,"column":17,"nodeType":"929","messageId":"930","endLine":5,"endColumn":27},{"ruleId":"927","severity":1,"message":"966","line":5,"column":28,"nodeType":"929","messageId":"930","endLine":5,"endColumn":44},{"ruleId":"927","severity":1,"message":"964","line":5,"column":45,"nodeType":"929","messageId":"930","endLine":5,"endColumn":50},{"ruleId":"927","severity":1,"message":"1025","line":11,"column":15,"nodeType":"929","messageId":"930","endLine":11,"endColumn":19},{"ruleId":"927","severity":1,"message":"1139","line":1,"column":10,"nodeType":"929","messageId":"930","endLine":1,"endColumn":18},{"ruleId":"927","severity":1,"message":"969","line":3,"column":10,"nodeType":"929","messageId":"930","endLine":3,"endColumn":22},{"ruleId":"927","severity":1,"message":"970","line":3,"column":24,"nodeType":"929","messageId":"930","endLine":3,"endColumn":33},{"ruleId":"927","severity":1,"message":"1140","line":15,"column":9,"nodeType":"929","messageId":"930","endLine":15,"endColumn":14},{"ruleId":"927","severity":1,"message":"975","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":16},{"ruleId":"927","severity":1,"message":"1038","line":6,"column":23,"nodeType":"929","messageId":"930","endLine":6,"endColumn":34},{"ruleId":"986","severity":1,"message":"987","line":51,"column":29,"nodeType":"988","messageId":"960","endLine":51,"endColumn":31},{"ruleId":"927","severity":1,"message":"976","line":6,"column":10,"nodeType":"929","messageId":"930","endLine":6,"endColumn":18},{"ruleId":"927","severity":1,"message":"971","line":4,"column":10,"nodeType":"929","messageId":"930","endLine":4,"endColumn":19},{"ruleId":"927","severity":1,"message":"1038","line":6,"column":23,"nodeType":"929","messageId":"930","endLine":6,"endColumn":34},{"ruleId":"927","severity":1,"message":"1141","line":12,"column":9,"nodeType":"929","messageId":"930","endLine":12,"endColumn":18},{"ruleId":"927","severity":1,"message":"1142","line":13,"column":9,"nodeType":"929","messageId":"930","endLine":13,"endColumn":14},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"1143","line":2,"column":8,"nodeType":"929","messageId":"930","endLine":2,"endColumn":16},{"ruleId":"927","severity":1,"message":"1144","line":3,"column":33,"nodeType":"929","messageId":"930","endLine":3,"endColumn":51},{"ruleId":"957","severity":1,"message":"1145","line":29,"column":5,"nodeType":"959","messageId":"960","endLine":29,"endColumn":12},{"ruleId":"927","severity":1,"message":"1003","line":1,"column":17,"nodeType":"929","messageId":"930","endLine":1,"endColumn":26},{"ruleId":"927","severity":1,"message":"976","line":1,"column":28,"nodeType":"929","messageId":"930","endLine":1,"endColumn":36},{"ruleId":"957","severity":1,"message":"1146","line":39,"column":5,"nodeType":"959","messageId":"960","endLine":39,"endColumn":15},{"ruleId":"927","severity":1,"message":"1147","line":48,"column":10,"nodeType":"929","messageId":"930","endLine":48,"endColumn":25},{"ruleId":"927","severity":1,"message":"1003","line":11,"column":17,"nodeType":"929","messageId":"930","endLine":11,"endColumn":26},{"ruleId":"927","severity":1,"message":"1148","line":14,"column":8,"nodeType":"929","messageId":"930","endLine":14,"endColumn":19},{"ruleId":"927","severity":1,"message":"1149","line":15,"column":8,"nodeType":"929","messageId":"930","endLine":15,"endColumn":21},"no-native-reassign",["1150"],"no-negated-in-lhs",["1151"],"no-unused-vars","'MProwData' is defined but never used.","Identifier","unusedVar","'selectedInputs' is assigned a value but never used.","'fData' is assigned a value but never used.","'parentFiledValue' is assigned a value but never used.","'parentOnChange' is assigned a value but never used.","'clearForm' is assigned a value but never used.","'NewModule' is defined but never used.","'Redirect' is defined but never used.","'ImportData' is defined but never used.","'isAllOf' is defined but never used.","'RepairableOverhaul' is defined but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'isLoadEqt' is assigned a value but never used.","'setIsLoadEqt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NextStage', 'PreviousStage', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["1152"],"'PData' is assigned a value but never used.","'Button' is defined but never used.","'toggleSysConfig' is assigned a value but never used.","'toggleDashboard' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormatAlignJustifyOutlinedIcon' is defined but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'Table2' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'ELcolumnDefs' is defined but never used.","'ELrowData' is defined but never used.","'CLrowData' is defined but never used.","'CLcolumnDefs' is defined but never used.","'SLMcolumnDefs' is defined but never used.","'SLMrowData' is defined but never used.","'LensIcon' is defined but never used.","'useState' is defined but never used.","'CreateMaintenance' is defined but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Logout' is assigned a value but never used.","'UserSelection' is defined but never used.","'BarGraph' is defined but never used.","'data' is defined but never used.","'subSystemLevelData' is defined but never used.","'mainData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useCallback' is defined but never used.","'prevrul' is assigned a value but never used.","'setPrevrul' is assigned a value but never used.","'isRulOpen' is assigned a value but never used.","'setRulOpen' is assigned a value but never used.","'Switch' is defined but never used.","'Input' is defined but never used.","'events' is defined but never used.","'EventCalendar' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'showSubsystem' is assigned a value but never used.","'currentMission' is assigned a value but never used.","'setSubSystemData' is assigned a value but never used.","'saveTempMission' is assigned a value but never used.","'useEffect' is defined but never used.","'components' is defined but never used.","'setPlatformName' is assigned a value but never used.","'setEqData' is assigned a value but never used.","'onChange' is assigned a value but never used.","'Checkbox' is defined but never used.","'keepLogin' is assigned a value but never used.","'setKeepLogin' is assigned a value but never used.","'showSnackBar' is assigned a value but never used.","'setShowSnackBar' is assigned a value but never used.","'ArrowBackIcon' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'detailRowAutoHeight' is assigned a value but never used.","'setRows' is assigned a value but never used.","'treeDataActions' is defined but never used.","'dispatch' is assigned a value but never used.","'disableButton' is assigned a value but never used.","'setDisableButton' is assigned a value but never used.","'name' is assigned a value but never used.","'useRef' is defined but never used.","'unstable_createMuiStrictModeTheme' is defined but never used.","'uuid' is defined but never used.","'CheckStage' is assigned a value but never used.","'nextModule' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NextStage', 'PreviousStage', and 'location.pathname'. Either include them or remove the dependency array.",["1153"],"'setMarks' is assigned a value but never used.","'taskMissionTableColumns' is defined but never used.","'gridMissionApi' is assigned a value but never used.","'setgridMissionApi' is assigned a value but never used.","'ParallelIds' is assigned a value but never used.","'SystemClasses' is assigned a value but never used.","'AgGridColumn' is defined but never used.","'Typography' is defined but never used.","'useDispatch' is defined but never used.","'location' is assigned a value but never used.","'potentialParallelComponents' is assigned a value but never used.","'systemData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1154"],"'TextField' is defined but never used.","'useStyles' is assigned a value but never used.","'InputBase' is defined but never used.","'Labelclasses' is assigned a value but never used.","'monthNames' is assigned a value but never used.","'AgGridReact' is defined but never used.","'IconButton' is defined but never used.","'RepairableSubTable' is defined but never used.","'useSelector' is defined but never used.","'treeData' is defined but never used.","'DeleteIcon' is defined but never used.","'AccountCircleTcon' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'CustomSelect' is defined but never used.","'RenderParallelComponent' is defined but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","React Hook useEffect has missing dependencies: 'failureModesData', 'props.matchingId', and 'systemData'. Either include them or remove the dependency array.",["1155"],"'selectedOptionId' is assigned a value but never used.","'MIrowData' is defined but never used.","'xData' is defined but never used.","'Paper' is defined but never used.","'flushSync' is defined but never used.","'selectedOption' is assigned a value but never used.","'systemConfigurationData' is assigned a value but never used.","'handleOptionChange' is assigned a value but never used.","'platform' is assigned a value but never used.","'platformType' is assigned a value but never used.","'HomeIcon' is defined but never used.","'SystemConfiguration' is defined but never used.","'ReactDom' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'icon' is assigned a value but never used.","'checkedIcon' is assigned a value but never used.","'treeDataT' is defined but never used.","'treeDataS' is assigned a value but never used.","'setTreeData' is assigned a value but never used.","'path' is assigned a value but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Grid' is defined but never used.","'setSelectedOption' is assigned a value but never used.","'selectedShip' is assigned a value but never used.","'selectedEquipments' is assigned a value but never used.","'currShip' is assigned a value but never used.","'setCurrShip' is assigned a value but never used.","'currEquipment' is assigned a value but never used.","'setCurrEquipment' is assigned a value but never used.","'rootSystemData' is assigned a value but never used.","'phaseD' is assigned a value but never used.","'LMrowData' is defined but never used.","'PhaseClasses' is assigned a value but never used.","'ModeCommentTwoTone' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'Box' is defined but never used.","'setSensorValue' is assigned a value but never used.","'T0' is assigned a value but never used.","'setT0' is assigned a value but never used.","'setConfidenceLevel' is assigned a value but never used.","'CustomContextMenu' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'ielements'. Either include them or remove the dependency array.",["1156"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1157"],"'position' is assigned a value but never used.","'style' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'edgesN' is assigned a value but never used.","'groupDataKN' is assigned a value but never used.","'data' is assigned a value but never used.","'getDatePicker' is assigned a value but never used.","'Route' is defined but never used.","'AssignType' is defined but never used.","'setquestionsOptions' is assigned a value but never used.","'questionsCost' is assigned a value but never used.","'questionsContinous' is assigned a value but never used.","'finalRCMData' is assigned a value but never used.","'setFinalRCMData' is assigned a value but never used.","'setCondition' is assigned a value but never used.","'visualWearLevels' is assigned a value but never used.","'visualCorrosionLevels' is assigned a value but never used.","'visualFrequency' is assigned a value but never used.","'degradationWearLevels' is assigned a value but never used.","'setDegradationWearLevels' is assigned a value but never used.","'visualActionsRows' is assigned a value but never used.","'hello' is assigned a value but never used.","'Fragment' is defined but never used.","'rData' is assigned a value but never used.","'phaseData' is assigned a value but never used.","'mData' is assigned a value but never used.","'ReactDOM' is defined but never used.","'ContextMenuTrigger' is defined but never used.","Duplicate key 'padding'.","Duplicate key 'background'.","'snackBarMessage' is assigned a value but never used.","'ThumbUpIcon' is defined but never used.","'ThumbDownIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},"Update the dependencies array to be: [NextStage, PreviousStage, history, locationKeys]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [locationKeys, history, location.pathname, NextStage, PreviousStage]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [dispatch]",{"range":"1174","text":"1175"},"Update the dependencies array to be: [failureModesData, props.matchingId, systemData]",{"range":"1176","text":"1177"},"Update the dependencies array to be: [boolcanvas, dispatch, ielements]",{"range":"1178","text":"1179"},"Update the dependencies array to be: [dispatch, ielements]",{"range":"1180","text":"1181"},[3541,3555],"[NextStage, PreviousStage, history, locationKeys]",[5071,5094],"[locationKeys, history, location.pathname, NextStage, PreviousStage]",[2133,2135],"[dispatch]",[1417,1419],"[failureModesData, props.matchingId, systemData]",[3840,3852],"[boolcanvas, dispatch, ielements]",[5668,5679],"[dispatch, ielements]"]