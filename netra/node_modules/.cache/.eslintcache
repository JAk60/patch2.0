[{"E:\\NETRA PROJECT\\Netra\\netra\\src\\index.js":"1","E:\\NETRA PROJECT\\Netra\\netra\\src\\App.js":"2","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\index.js":"3","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\elements.js":"4","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\PhaseStore.js":"5","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\Levels.js":"6","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\taskStore.js":"7","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\TreeDataStore.js":"8","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\ApplicationVariable.js":"9","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\Login.js":"10","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\DragNdrop.js":"11","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\MaintenanceAllocation.js":"12","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\navigation\\Navigation.js":"13","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Module Selection\\ModuleSelection.js":"14","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\Home.js":"15","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfiguration.js":"16","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Phasemanager.js":"17","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\SignUp.js":"18","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\HEP.js":"19","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityDashboard.js":"20","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\editProfile.js":"21","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\userApproval.js":"22","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\SignIn.js":"23","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\DataManager.js":"24","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\configureHistory2.js":"25","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\configureHistory.js":"26","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\new.js":"27","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\ViewData\\ViewData.js":"28","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Mission Profile\\MissionProfile.js":"29","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\CDashboard\\CDashboard.js":"30","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Bayesian\\bayesian_input.js":"31","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskDashboard.js":"32","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\userSelectionConfig\\UserSelectionConfiguration.js":"33","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\RUL\\RulLife.js":"34","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\System Docs\\SysDocs.js":"35","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\pm.js":"36","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableOverhaul.js":"37","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\PhasetableData.js":"38","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCMMain.js":"39","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\navigation\\SideBarData.js":"40","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\AccessControl.js":"41","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\Main.js":"42","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\Data.js":"43","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\CustomSnackBar.js":"44","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\module\\NewModule.js":"45","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\redundancy.js":"46","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\userSelection\\userSelection.js":"47","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\additionalInfo\\additionalInfo.js":"48","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\dutyCycle\\dutyCycle.js":"49","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\maintenanceInfo\\maintenanceInfo.js":"50","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\Layout\\layout.js":"51","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\CreateMaintenance.js":"52","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\AddData\\AddData.js":"53","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ModifyandDisplay\\ModifyandDisplayMaintenance.js":"54","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ShareMaintenance\\ShareMaintenance.js":"55","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\CreateRCM.js":"56","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\critical_RCM.js":"57","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableSubTable.js":"58","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\RepairableSubTableMaual.js":"59","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\custom.js":"60","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\OptiQ.js":"61","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\AutoSelect.js":"62","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\CustomTextInput.js":"63","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\main\\EqptStructuring\\LabelToolTip\\LabelToolTip.js":"64","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\failureMode.js":"65","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\slider\\NewSlider.js":"66","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\Table.js":"67","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\DataManagerTable.js":"68","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\OverhaulTable.js":"69","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\RUL\\RULPredictor.js":"70","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\sortableTree\\SortableTree.js":"71","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\CustomSelect.js":"72","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\main\\EqptStructuring\\EqptStructuring.js":"73","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\GroupTable.js":"74","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\AssignType.js":"75","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\sortableTree\\SortableTreeData.js":"76","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\OptTable.js":"77","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\SaveHandler.js":"78","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfigurationTable.js":"79","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\EquipmentName.js":"80","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\RenderParallelComponent.js":"81","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\userSelection\\userSelectionData.js":"82","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\Flow\\flow.js":"83","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\SideBar\\Sidebar.js":"84","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\ComponentDetails.js":"85","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\GroupData.js":"86","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ContextMenu\\contextMenu.js":"87","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\CustomNode\\CustomNode.js":"88","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskRenderMultipleComponent.js":"89","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\PaperTable.js":"90","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\DashboardData.js":"91","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\MissionSlider.js":"92","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\EventCalendar.js":"93","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityChart.js":"94","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\SelectWithLimit.js":"95","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\CDashboard\\CGraph.js":"96","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\BarGraph.js":"97","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\CreateProfile.js":"98","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\ChangePassword.js":"99","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\importData\\importData.js":"100","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\maintenanceData.js":"101","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\HEPData.js":"102","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\historicalData.js":"103","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\parameterEstimation\\parameterEstimation.js":"104","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\ComponentLevel\\componentLevel.js":"105","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\CommanHEP\\CommanHEP.js":"106","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\operationalData\\operationalData.js":"107","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\LifeMultiplier\\LifeMultiplier.js":"108","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\Table2.js":"109","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\EquipmentLevel\\EquipmentLevel.js":"110","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\DCMultiplier\\dcMultiplier.js":"111","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Add\\AddPhase.js":"112","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\LifeMultiplier\\LifeMultiplier.js":"113","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Home\\Home.js":"114","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\EquipmentName.js":"115","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\probabilityFailure.js":"116","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\nprd.js":"117","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\expert.js":"118","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oem.js":"119","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\failureDataPoint.js":"120","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oemExpert.js":"121","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\IntervalData.js":"122","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\selectEquipment.js":"123","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\MultiSelect.js":"124"},{"size":605,"mtime":1693376307948,"results":"125","hashOfConfig":"126"},{"size":45859,"mtime":1693376307940,"results":"127","hashOfConfig":"126"},{"size":626,"mtime":1693376306995,"results":"128","hashOfConfig":"126"},{"size":44140,"mtime":1693376307995,"results":"129","hashOfConfig":"126"},{"size":807,"mtime":1693376306994,"results":"130","hashOfConfig":"126"},{"size":601,"mtime":1693376306994,"results":"131","hashOfConfig":"126"},{"size":988,"mtime":1693376306995,"results":"132","hashOfConfig":"126"},{"size":2373,"mtime":1693376306995,"results":"133","hashOfConfig":"126"},{"size":2599,"mtime":1693376306994,"results":"134","hashOfConfig":"126"},{"size":1606,"mtime":1693376306963,"results":"135","hashOfConfig":"126"},{"size":400,"mtime":1693376306986,"results":"136","hashOfConfig":"126"},{"size":1966,"mtime":1693376306965,"results":"137","hashOfConfig":"126"},{"size":1921,"mtime":1693376306946,"results":"138","hashOfConfig":"126"},{"size":4394,"mtime":1693376306969,"results":"139","hashOfConfig":"126"},{"size":44468,"mtime":1693376307962,"results":"140","hashOfConfig":"126"},{"size":53688,"mtime":1693376307990,"results":"141","hashOfConfig":"126"},{"size":51299,"mtime":1693376307974,"results":"142","hashOfConfig":"126"},{"size":44156,"mtime":1693376307979,"results":"143","hashOfConfig":"126"},{"size":49380,"mtime":1693376307961,"results":"144","hashOfConfig":"126"},{"size":53093,"mtime":1693376307977,"results":"145","hashOfConfig":"126"},{"size":39863,"mtime":1693376307981,"results":"146","hashOfConfig":"126"},{"size":40440,"mtime":1693376307981,"results":"147","hashOfConfig":"126"},{"size":42892,"mtime":1693376307979,"results":"148","hashOfConfig":"126"},{"size":55327,"mtime":1693376307952,"results":"149","hashOfConfig":"126"},{"size":42632,"mtime":1693376307980,"results":"150","hashOfConfig":"126"},{"size":40339,"mtime":1693376307980,"results":"151","hashOfConfig":"126"},{"size":65145,"mtime":1693376307977,"results":"152","hashOfConfig":"126"},{"size":3286,"mtime":1693376307984,"results":"153","hashOfConfig":"126"},{"size":6855,"mtime":1693376307968,"results":"154","hashOfConfig":"126"},{"size":47558,"mtime":1693376307950,"results":"155","hashOfConfig":"126"},{"size":48723,"mtime":1693376307950,"results":"156","hashOfConfig":"126"},{"size":70177,"mtime":1693376307982,"results":"157","hashOfConfig":"126"},{"size":47491,"mtime":1693376307993,"results":"158","hashOfConfig":"126"},{"size":47695,"mtime":1693376307975,"results":"159","hashOfConfig":"126"},{"size":48497,"mtime":1693376307982,"results":"160","hashOfConfig":"126"},{"size":44212,"mtime":1693376307972,"results":"161","hashOfConfig":"126"},{"size":2096,"mtime":1693376306958,"results":"162","hashOfConfig":"126"},{"size":3000,"mtime":1693376306975,"results":"163","hashOfConfig":"126"},{"size":1191,"mtime":1693376306968,"results":"164","hashOfConfig":"126"},{"size":692,"mtime":1693376306946,"results":"165","hashOfConfig":"126"},{"size":38394,"mtime":1693376307962,"results":"166","hashOfConfig":"126"},{"size":2006,"mtime":1693376306965,"results":"167","hashOfConfig":"126"},{"size":4590,"mtime":1693376306970,"results":"168","hashOfConfig":"126"},{"size":1191,"mtime":1693376306996,"results":"169","hashOfConfig":"126"},{"size":4059,"mtime":1693376306946,"results":"170","hashOfConfig":"126"},{"size":4235,"mtime":1693376307992,"results":"171","hashOfConfig":"126"},{"size":7544,"mtime":1693376306999,"results":"172","hashOfConfig":"126"},{"size":4347,"mtime":1693376306991,"results":"173","hashOfConfig":"126"},{"size":1256,"mtime":1693376306991,"results":"174","hashOfConfig":"126"},{"size":4220,"mtime":1693376306992,"results":"175","hashOfConfig":"126"},{"size":50089,"mtime":1693376307988,"results":"176","hashOfConfig":"126"},{"size":41683,"mtime":1693376307964,"results":"177","hashOfConfig":"126"},{"size":48037,"mtime":1693376307963,"results":"178","hashOfConfig":"126"},{"size":44921,"mtime":1693376307967,"results":"179","hashOfConfig":"126"},{"size":41030,"mtime":1693376307968,"results":"180","hashOfConfig":"126"},{"size":42849,"mtime":1693376307967,"results":"181","hashOfConfig":"126"},{"size":64064,"mtime":1693376307967,"results":"182","hashOfConfig":"126"},{"size":42181,"mtime":1693376307959,"results":"183","hashOfConfig":"126"},{"size":41745,"mtime":1693376307957,"results":"184","hashOfConfig":"126"},{"size":51324,"mtime":1693376307958,"results":"185","hashOfConfig":"126"},{"size":41047,"mtime":1693376307972,"results":"186","hashOfConfig":"126"},{"size":1489,"mtime":1693376306996,"results":"187","hashOfConfig":"126"},{"size":1437,"mtime":1693376306997,"results":"188","hashOfConfig":"126"},{"size":557,"mtime":1693376306943,"results":"189","hashOfConfig":"126"},{"size":41522,"mtime":1693376307992,"results":"190","hashOfConfig":"126"},{"size":1847,"mtime":1693376306947,"results":"191","hashOfConfig":"126"},{"size":43183,"mtime":1693376307998,"results":"192","hashOfConfig":"126"},{"size":49210,"mtime":1693376307998,"results":"193","hashOfConfig":"126"},{"size":46202,"mtime":1693376307998,"results":"194","hashOfConfig":"126"},{"size":41728,"mtime":1693376307975,"results":"195","hashOfConfig":"126"},{"size":1520,"mtime":1693376306948,"results":"196","hashOfConfig":"126"},{"size":1904,"mtime":1693376306997,"results":"197","hashOfConfig":"126"},{"size":50350,"mtime":1693376307942,"results":"198","hashOfConfig":"126"},{"size":41997,"mtime":1693376307971,"results":"199","hashOfConfig":"126"},{"size":66004,"mtime":1693376307964,"results":"200","hashOfConfig":"126"},{"size":257,"mtime":1693376306948,"results":"201","hashOfConfig":"126"},{"size":42543,"mtime":1693376307971,"results":"202","hashOfConfig":"126"},{"size":38357,"mtime":1693376307965,"results":"203","hashOfConfig":"126"},{"size":5384,"mtime":1693376306990,"results":"204","hashOfConfig":"126"},{"size":2499,"mtime":1693376307991,"results":"205","hashOfConfig":"126"},{"size":4141,"mtime":1693376307992,"results":"206","hashOfConfig":"126"},{"size":61,"mtime":1693376307000,"results":"207","hashOfConfig":"126"},{"size":7885,"mtime":1693376307987,"results":"208","hashOfConfig":"126"},{"size":1198,"mtime":1693376306990,"results":"209","hashOfConfig":"126"},{"size":46688,"mtime":1693376307984,"results":"210","hashOfConfig":"126"},{"size":807,"mtime":1693376306985,"results":"211","hashOfConfig":"126"},{"size":38599,"mtime":1693376307985,"results":"212","hashOfConfig":"126"},{"size":38229,"mtime":1693376307986,"results":"213","hashOfConfig":"126"},{"size":4567,"mtime":1693376307983,"results":"214","hashOfConfig":"126"},{"size":40281,"mtime":1693376307982,"results":"215","hashOfConfig":"126"},{"size":4776,"mtime":1693376306976,"results":"216","hashOfConfig":"126"},{"size":304,"mtime":1693376306976,"results":"217","hashOfConfig":"126"},{"size":40571,"mtime":1693376307976,"results":"218","hashOfConfig":"126"},{"size":39046,"mtime":1693376307977,"results":"219","hashOfConfig":"126"},{"size":2859,"mtime":1693376306997,"results":"220","hashOfConfig":"126"},{"size":43970,"mtime":1693376307950,"results":"221","hashOfConfig":"126"},{"size":1858,"mtime":1693376307976,"results":"222","hashOfConfig":"126"},{"size":45594,"mtime":1693376307976,"results":"223","hashOfConfig":"126"},{"size":4587,"mtime":1693376306979,"results":"224","hashOfConfig":"126"},{"size":2043,"mtime":1693376306955,"results":"225","hashOfConfig":"126"},{"size":5537,"mtime":1693376306956,"results":"226","hashOfConfig":"126"},{"size":3071,"mtime":1693376306961,"results":"227","hashOfConfig":"126"},{"size":47616,"mtime":1693376307954,"results":"228","hashOfConfig":"126"},{"size":43532,"mtime":1693376307957,"results":"229","hashOfConfig":"126"},{"size":2180,"mtime":1693376306960,"results":"230","hashOfConfig":"126"},{"size":5621,"mtime":1693376306960,"results":"231","hashOfConfig":"126"},{"size":41103,"mtime":1693376307957,"results":"232","hashOfConfig":"126"},{"size":2041,"mtime":1693376307962,"results":"233","hashOfConfig":"126"},{"size":42111,"mtime":1693376307999,"results":"234","hashOfConfig":"126"},{"size":3300,"mtime":1693376306960,"results":"235","hashOfConfig":"126"},{"size":2371,"mtime":1693376306973,"results":"236","hashOfConfig":"126"},{"size":6093,"mtime":1693376307973,"results":"237","hashOfConfig":"126"},{"size":3228,"mtime":1693376306974,"results":"238","hashOfConfig":"126"},{"size":3280,"mtime":1693376306974,"results":"239","hashOfConfig":"126"},{"size":2570,"mtime":1693376307956,"results":"240","hashOfConfig":"126"},{"size":3507,"mtime":1693376306955,"results":"241","hashOfConfig":"126"},{"size":3708,"mtime":1693376306954,"results":"242","hashOfConfig":"126"},{"size":4172,"mtime":1693376306953,"results":"243","hashOfConfig":"126"},{"size":43639,"mtime":1693376307955,"results":"244","hashOfConfig":"126"},{"size":42888,"mtime":1693376307953,"results":"245","hashOfConfig":"126"},{"size":43974,"mtime":1693376307955,"results":"246","hashOfConfig":"126"},{"size":41548,"mtime":1693376307953,"results":"247","hashOfConfig":"126"},{"size":1375,"mtime":1693376306959,"results":"248","hashOfConfig":"126"},{"size":2929,"mtime":1693376306959,"results":"249","hashOfConfig":"126"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rukjkn",{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"537","messages":"538","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\NETRA PROJECT\\Netra\\netra\\src\\index.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\App.js",["542","543","544"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\index.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\elements.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\PhaseStore.js",["545"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MProwData } from \"../pages/Phase_Manager/PhasetableData\";\r\n\r\nconst initialState = {\r\n  phase: [],\r\n};\r\n\r\nconst phase = createSlice({\r\n  name: \"phase\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setPhase(state, action) {\r\n      const phaseData = action.payload.phaseData;\r\n      state.phase = [...state.phase, ...phaseData];\r\n    },\r\n    addPhase(state, action) {\r\n      const newPhase = action.payload.newPhase;\r\n      state.phase = [...state.phase, ...newPhase];\r\n    },\r\n    loadPhase(state, action) {\r\n      const phase_data = action.payload.newPhase;\r\n      // state.phase = [...phase_data];\r\n      state.phase = phase_data;\r\n    },\r\n    //End of Reducers\r\n  },\r\n});\r\n\r\nexport default phase;\r\nexport const phaseActions = phase.actions;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\Levels.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\taskStore.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\TreeDataStore.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\store\\ApplicationVariable.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\Login.js",["546"],"import { useState } from 'react';\r\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\r\nimport styles from './Home.module.css';\r\n\r\nconst Login = ({ setLoggedIn }) => {\r\n  const [toggles, setToggles] = useState({\r\n    L1: false,\r\n    L2: false,\r\n    L3: false,\r\n    L4: false,\r\n    L5: false,\r\n  });\r\n\r\n  const handleToggleChange = (toggleName) => (event) => {\r\n    setToggles({ ...toggles, [toggleName]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.homeNav}>\r\n        <div className={styles.netra}>\r\n          <img src=\"/netra-logo-removebg.png\" width={200} height={200} />\r\n          <div>NETRA</div>\r\n        </div>\r\n\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Switch checked={toggles.L1} onChange={handleToggleChange('L1')} />}\r\n            label=\"L1\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Switch checked={toggles.L2} onChange={handleToggleChange('L2')} />}\r\n            label=\"L2\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Switch checked={toggles.L3} onChange={handleToggleChange('L3')} />}\r\n            label=\"L3\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Switch checked={toggles.L4} onChange={handleToggleChange('L4')} />}\r\n            label=\"L4\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Switch checked={toggles.L5} onChange={handleToggleChange('L5')} />}\r\n            label=\"L5\"\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\DragNdrop.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\MaintenanceAllocation.js",["547","548","549","550","551","552"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route} from \"react-router-dom\";\r\nimport AddData from \"./AddData/AddData\";\r\nimport CreateMaintenance from \"./CreateMaintenance/CreateMaintenance\";\r\nimport Main from \"./Main\";\r\nimport ModifyandDisplayMaintenance from \"./ModifyandDisplay/ModifyandDisplayMaintenance\";\r\nimport ShareMaintenance from \"./ShareMaintenance/ShareMaintenance\";\r\nimport RCMMain from \"./RCMMain\";\r\nimport CreateRCM from \"./RCM/CreateRCM\";\r\nimport Critical_RCM from \"./RCM/critical_RCM\";\r\n\r\nconst MaintenanceAllocation = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    if (!props.loggedIn) {\r\n      props.history.push(\"/sign_in\");\r\n    }\r\n  });\r\n  const Logout = () => {\r\n    props.setLoggedIn(false);\r\n    props.history.push(\"/sign_in\");\r\n  };\r\n  return (<Switch>\r\n          <Route exact path='/maintenance_allocation' component={Main}/>\r\n          <Route path='/maintenance_allocation/create' component={CreateMaintenance}/>\r\n          <Route path='/maintenance_allocation/modify' component={ModifyandDisplayMaintenance}/>\r\n          <Route path='/maintenance_allocation/display' component={ModifyandDisplayMaintenance}/>\r\n          <Route path='/maintenance_allocation/share' component={ShareMaintenance}/>\r\n          <Route exact path='/maintenance_allocation/conduct_rcm_analysis' component={RCMMain}/>\r\n          <Route exact path='/maintenance_allocation/conduct_rcm_analysis/create' component={CreateRCM}/>\r\n          <Route exact path='/maintenance_allocation/conduct_rcm_analysis/critical_comp' component={Critical_RCM}/>\r\n          <Route path='/maintenance_allocation/add_data' component={AddData}/>\r\n          </Switch>\r\n  );\r\n};\r\n\r\nexport default MaintenanceAllocation;\r\n\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\navigation\\Navigation.js",["553"],"import AccountCircleTcon from \"@material-ui/icons/AccountCircle\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport classes from \"./Navigation.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport SideBarData from \"./SideBarData\";\r\n\r\nconst Navigation = () => {\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const onMouseInHandler = () => {\r\n    setSidebar(false);\r\n  };\r\n  const onMouseOutHandler = () => {\r\n    setSidebar(true);\r\n  };\r\n  return (\r\n    <nav\r\n      className={classes.navigation}\r\n      onMouseEnter={onMouseInHandler}\r\n      onMouseLeave={onMouseOutHandler}\r\n    >\r\n      <ul className={classes.nav}>\r\n        {/* <li className={classes.nav_link}>\r\n          <Link to='/module_select'>\r\n            <AccountCircleTcon fontSize=\"large\" />\r\n          </Link>\r\n        </li> */}\r\n        {SideBarData.map((item, index) => {\r\n          return (\r\n            <li key={index} className={classes.nav_link}>\r\n              <Link to={item.path}>\r\n                {item.icon}\r\n                <div\r\n                  className={\r\n                    sidebar\r\n                      ? `${classes.div}`\r\n                      : `${classes.div} + ' ' + ${classes.active}`\r\n                  }\r\n                >\r\n                  {item.title}\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n        <hr className={classes.hr}></hr>\r\n        <li className={classes.nav_link}>\r\n          <Link to='/rDashboard'>\r\n            <ExitToAppIcon fontSize=\"large\" />\r\n            <div\r\n              className={\r\n                sidebar\r\n                  ? `${classes.div}`\r\n                  : `${classes.div} + ' ' + ${classes.active}`\r\n              }\r\n            >\r\n              Logout\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Module Selection\\ModuleSelection.js",["554","555","556"],"import React,{ useEffect } from 'react'\r\nimport styles from './ModuleSelection.module.css'\r\nimport { \r\n    Paper,\r\n    makeStyles,\r\n    FormControlLabel,\r\n    Switch,\r\n    FormGroup, \r\n    Button} \r\n    from '@material-ui/core'\r\n\r\nconst LabelStyles = makeStyles({\r\n    root: {\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        margin:'15px 0px 5px 0px',\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n        minWidth:300,\r\n        background: \"#ebebeb\",\r\n        borderRadius: \"5px\",\r\n        height: 40,\r\n        boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n        '&:hover':{\r\n            background: \"#d1d1d1\",\r\n        }\r\n    },\r\n    label: {\r\n        fontSize:20,\r\n        fontWeight:'bold',\r\n    }\r\n  });\r\n\r\nconst ModuleSelection=(props)=>{\r\n    const labelClasses=LabelStyles();\r\n\r\n    const [sysConfig, setSysConfig] = React.useState(true);\r\n    const [phaseManager, setPhaseManager] = React.useState(true);\r\n    const [hep, setHep] = React.useState(true);\r\n    const [dataManager, setDataManager] = React.useState(true);\r\n    const [dashboard, setDashboard] = React.useState(true);\r\n\r\n    const toggleSysConfig = () => {\r\n        setSysConfig((prev) => !prev);\r\n    };\r\n    const togglePhaseManager = () => {\r\n        setPhaseManager((prev) => !prev);\r\n    };\r\n    const toggleHep = () => {\r\n        setHep((prev) => !prev);\r\n    };\r\n    const toggleDataManager = () => {\r\n        setDataManager((prev) => !prev);\r\n    };\r\n    const toggleDashboard = () => {\r\n        setDashboard((prev) => !prev);\r\n    };\r\n\r\n    const save=()=>{\r\n        let settings={\r\n            'SystemConfiguration':sysConfig,\r\n            'PhaseManager':phaseManager,\r\n            'HEP':hep,\r\n            'DataManager':dataManager,\r\n            'ReliabilityDashboard':dashboard,\r\n        }\r\n        localStorage.setItem('settings',JSON.stringify(settings))\r\n        props.setSettings(settings)\r\n        props.history.push('/')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"settings\")){\r\n        let settings=JSON.parse(localStorage.getItem('settings'))\r\n        setSysConfig(settings.SystemConfiguration)\r\n        setPhaseManager(settings.PhaseManager)\r\n        setHep(settings.HEP)\r\n        setDataManager(settings.DataManager)\r\n        setDashboard(settings.ReliabilityDashboard)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        <Paper className={styles.ModulePaper} elevation={5}>\r\n            <div>\r\n                <img src='/netra-logo.png' width={60} height={60}/>\r\n                <div style={{textAlign:'center'}}>NETRA</div>\r\n            </div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h5 style={{margin:0}}>Settings</h5>\r\n                <h6 style={{margin:0}}>Please Select the required modules</h6>\r\n            </div>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={sysConfig} disabled/>}\r\n                    label=\"System Configuration\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={phaseManager} onChange={togglePhaseManager}/>}\r\n                    label=\"Phase Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={hep} onChange={toggleHep} />}\r\n                    label=\"HEP\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dataManager} onChange={toggleDataManager} />}\r\n                    label=\"Data Manager\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    classes={labelClasses}\r\n                    control={<Switch checked={dashboard} disabled/>}\r\n                    label=\"Reliability Dashboard\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </FormGroup>\r\n            <Button variant='contained' color='secondary' onClick={()=>save()}>Save</Button>\r\n        </Paper>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ModuleSelection;","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\Home.js",["557","558","559","560","561","562","563","564","565"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfiguration.js",["566","567","568","569","570","571","572","573","574"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Phasemanager.js",["575","576"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\SignUp.js",["577","578","579"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\HEP.js",["580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityDashboard.js",["594","595","596","597","598","599","600","601","602","603","604"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\editProfile.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\userApproval.js",["605"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\SignIn.js",["606","607","608","609","610","611","612"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\DataManager.js",["613","614","615","616","617","618","619","620","621","622"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\configureHistory2.js",["623","624","625","626","627"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\configureHistory.js",["628"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\new.js",["629","630","631","632","633"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\ViewData\\ViewData.js",["634","635","636","637","638","639","640","641"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./ViewData.module.css\";\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AccessControl from \"../Home/AccessControl\";\r\n\r\nconst ViewData = (props) => {\r\n  // useEffect(()=>{\r\n  //     console.log(props.settings)\r\n  // })\r\n  const Logout = () => {\r\n    props.setLoggedIn(false);\r\n    props.history.push(\"/sign_in\");\r\n  };\r\n  const dispatch = useDispatch();\r\n  const resetUserSelection = () => {\r\n    dispatch(userActions.onReset());\r\n  };\r\n  return (\r\n    <AccessControl allowedLevels={[\"L1\", \"L5\"]}>\r\n      <div className={styles.container}>\r\n        <div className={styles.viewDataNav}>\r\n          <Link onClick={() => Logout()}>\r\n            <i class=\"fas fa-sign-out-alt\"></i>Logout\r\n          </Link>\r\n        </div>\r\n        <div className={styles.viewDataLinks}>\r\n          <Link to=\"/data_manager\" onClick={() => resetUserSelection()}>\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"fas fa-database\"></i>\r\n            </div>\r\n            Data Manager\r\n          </Link>\r\n          <Link\r\n            to=\"/data_manager/historical_data\"\r\n            onClick={() => resetUserSelection()}\r\n          >\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"fas fa-wrench\"></i>\r\n            </div>\r\n            Equipment related data\r\n          </Link>\r\n          <Link to=\"/mission_profile\" onClick={() => resetUserSelection()}>\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"far fa-chart-bar\"></i>\r\n            </div>\r\n            Mission profile\r\n          </Link>\r\n          <Link\r\n            to=\"/user_selection_config\"\r\n            onClick={() => resetUserSelection()}\r\n          >\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"far fa-chart-bar\"></i>\r\n            </div>\r\n            User Selection Config\r\n          </Link>\r\n\r\n          <Link to=\"/add_system_doc\" onClick={() => resetUserSelection()}>\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"far fa-chart-bar\"></i>\r\n            </div>\r\n            Add System Documents\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/maintenance_allocation/add_data\"\r\n            onClick={() => resetUserSelection()}\r\n          >\r\n            <div className={styles.circleIcon}>\r\n              <i className=\"far fa-chart-bar\"></i>\r\n            </div>\r\n            Add Sensor Data\r\n          </Link>\r\n\r\n          {/* <Link to=\"/health_prediction_input\" onClick={()=>resetUserSelection()}><div className={styles.circleIcon}>\r\n                    <i className=\"far fa-chart-bar\"></i>\r\n                    </div>Bayesian Health Inputs</Link> */}\r\n        </div>\r\n        <div className={styles.netra}>\r\n          <img src=\"/netra-logo-removebg.png\" width={300} height={400} />\r\n          <div className={styles.logotxt}>NETRA</div>\r\n        </div>\r\n      </div>\r\n    </AccessControl>\r\n  );\r\n};\r\n\r\nexport default ViewData;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Mission Profile\\MissionProfile.js",["642","643"],"import React, { useEffect, useState } from \"react\";\r\nimport NewModule from \"../../components/module/NewModule\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport UserSelection from \"../../ui/userSelection/userSelection\";\r\nimport styles from \"./MissionProfile.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Table from \"../../ui/Table/DataManagerTable\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CustomizedSnackbars from \"../../ui/CustomSnackBar\";\r\n\r\nconst SystemStyles = makeStyles({\r\n  formControl: {\r\n    margin: \"2rem\",\r\n    minWidth: 200,\r\n  },\r\n  Submit: {\r\n    margin: \"2rem\",\r\n  },\r\n  buttons: {\r\n    minWidth: 150,\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    float: \"right\",\r\n  },\r\n});\r\nconst MissionProfile = (props) => {\r\n  const SystemClasses = SystemStyles();\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [SnackBarMessage, setSnackBarMessage] = useState({\r\n    severity: \"error\",\r\n    message: \"This is awesome\",\r\n    showSnackBar: false,\r\n  });\r\n  const onHandleSnackClose = () => {\r\n    setSnackBarMessage({\r\n      severity: \"error\",\r\n      message: \"Close\",\r\n      showSnackBar: false,\r\n    });\r\n  };\r\n  const [missionData, setMissionData] = useState([]);\r\n  // let finalTableData = [];\r\n  const setFinalTableData = (d) => {\r\n    setMissionData(d);\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"/mission_data\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const mData = data;\r\n        // const rowD = data.map((x) => () => {\r\n        //   return {\r\n        //     id: x[\"id\"],\r\n        //     missionName: x[\"missionName\"],\r\n        //     Harbour: x[\"Harbour\"],\r\n        //     elh: x[\"elh\"],\r\n        //     cruise: x[\"cruise\"],\r\n        //     ds: x[\"ds\"],\r\n        //     as: x[\"ask\"],\r\n        //   };\r\n        // });\r\n        setRows(mData);\r\n        setMissionData(mData);\r\n      });\r\n  }, []);\r\n  const [rowState, setRows] = useState([]);\r\n  const MProfileColumns = [\r\n    <AgGridColumn\r\n      field=\"missionName\"\r\n      headerName=\"Mission Name\"\r\n      headerTooltip=\"Mission Name\"\r\n      width={250}\r\n      checkboxSelection={true}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Harbour\"\r\n      headerName=\"Harbour\"\r\n      headerTooltip=\"Harbour\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"elh\"\r\n      headerName=\"Entry Leaving Harbour\"\r\n      headerTooltip=\"Entry Leaving Harbour\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"cruise\"\r\n      headerName=\"Cruise\"\r\n      headerTooltip=\"Cruise\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ds\"\r\n      headerName=\"Defense Station\"\r\n      headerTooltip=\"Defense Station\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"as\"\r\n      headerName=\"Action Station\"\r\n      headerTooltip=\"Action Station\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"tar_rel\"\r\n      headerName=\"Target Reliability\"\r\n      headerTooltip=\"Target Reliability\"\r\n      width={250}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: uuidv4(),\r\n        missionName: \"Please Enter Mission Name\",\r\n        Harbour: 0,\r\n        elh: 0,\r\n        cruise: 0,\r\n        ds: 0,\r\n        as: 0,\r\n        tar_rel: 0,\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    setMissionData(allRowData)\r\n    // console.log(selectedRows);\r\n  };\r\n\r\n  //Save Button Handler\r\n  const onSaveButtonClickHandler = () => {\r\n    debugger;\r\n    if (missionData.length > 0) {\r\n      fetch(\"/mission_data\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          mission_data: missionData,\r\n          dtype: \"insertMission\",\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setSnackBarMessage({\r\n            severity: \"success\",\r\n            message: data.message,\r\n            showSnackBar: true,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setSnackBarMessage({\r\n            severity: \"error\",\r\n            message: \"Some Error Occured. \" + error,\r\n            showSnackBar: true,\r\n          });\r\n        });\r\n    } else {\r\n      setSnackBarMessage((prevState) => {\r\n        const data = {\r\n          ...prevState,\r\n          message: \"This is error\",\r\n          showSnackBar: true,\r\n        };\r\n        return data;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className={styles.body}>\r\n        <div className={styles.module}>\r\n          {/* <NewModule /> */}\r\n        </div>\r\n        <div className={styles.user}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={SystemClasses.buttons}\r\n            onClick={onSaveButtonClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        {/* <div className={styles.user}><UserSelection /></div> */}\r\n        <div className={styles.table}>\r\n          <Table\r\n            rowData={rowState}\r\n            columnDefs={MProfileColumns}\r\n            tableUpdate={setFinalTableData}\r\n            setGrid={setGridApi}\r\n            gridApi={gridApi}\r\n          />\r\n          <div className={styles.tableFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => AddRow()}\r\n            >\r\n              Add Row\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              color=\"secondary\"\r\n              onClick={() => deleteRows()}\r\n            >\r\n              Delete Rows\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {SnackBarMessage.showSnackBar && (\r\n        <CustomizedSnackbars\r\n          message={SnackBarMessage}\r\n          onHandleClose={onHandleSnackClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MissionProfile;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\CDashboard\\CDashboard.js",["644"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Bayesian\\bayesian_input.js",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskDashboard.js",["663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\userSelectionConfig\\UserSelectionConfiguration.js",["691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\RUL\\RulLife.js",["710","711"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\System Docs\\SysDocs.js",["712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\pm.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableOverhaul.js",["727"],"import React, { useEffect, useState } from \"react\";\r\nimport Custom from \"./custom\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport OverhaulTable from \"../../../ui/Table/OverhaulTable\";\r\nimport RepairableSubTable from \"./repairableSubTable\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RepairableSubTableMaual from \"./RepairableSubTableMaual\";\r\n\r\n\r\n\r\nconst RepairableOverhaul = (props) => {\r\n  const [secondTableData, setSecondTableData] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"manual\");\r\n  const secondTableDataUpdate = (data, isUpdated = false) => {\r\n    setSecondTableData(data);\r\n  };\r\n\r\n  const mainTableUpdate = (data) => {\r\n    props?.tableUpdate(data, \"overhauls\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5rem\" }}>\r\n      <RadioGroup\r\n        row\r\n        aria-label=\"option\"\r\n        name=\"option\"\r\n        value={selectedOption}\r\n        onChange={(e) => setSelectedOption(e.target.value)}\r\n      >\r\n        <FormControlLabel\r\n          value=\"manual\"\r\n          control={<Radio />}\r\n          label=\"Manual Data Entry\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"cmms\"\r\n          control={<Radio />}\r\n          label=\"Cmms Data Entry\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"ship\"\r\n          control={<Radio />}\r\n          label=\"Insert From another ship\"\r\n        />\r\n      </RadioGroup>\r\n\r\n      {selectedOption === \"manual\" && (\r\n        <div>\r\n          <RepairableSubTableMaual secondTableDataUpdate={secondTableDataUpdate} />\r\n          <OverhaulTable data={secondTableData} tableUpdate={mainTableUpdate} />\r\n        </div>\r\n      )}\r\n\r\n      {selectedOption === \"cmms\" && (\r\n        <div>\r\n          <RepairableSubTable secondTableDataUpdate={secondTableDataUpdate} />\r\n          <OverhaulTable data={secondTableData} tableUpdate={mainTableUpdate} />\r\n        </div>\r\n      )}\r\n\r\n      {selectedOption === \"ship\" && (\r\n        <Custom />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepairableOverhaul;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\PhasetableData.js",["728"],"import { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\r\n\r\nexport const MProwData = [\r\n  {\r\n    PhaseName: \"Load\",\r\n    MeasurementType: \"Quantitative\",\r\n    LowerBound: 0,\r\n    UpperBound: 50,\r\n    Status: \"\",\r\n    PhaseRange: \"L1\",\r\n    Unit: \"Unit\",\r\n    Description: \"Description\",\r\n  },\r\n  {\r\n    PhaseName: \"Load\",\r\n    MeasurementType: \"Quantitative\",\r\n    LowerBound: 51,\r\n    UpperBound: 75,\r\n    Status: \"\",\r\n    PhaseRange: \"L2\",\r\n    Unit: \"Unit\",\r\n    Description: \"Description\",\r\n  },\r\n];\r\nexport const MPcolumnDefs = [\r\n  {\r\n    field: \"PhaseName\",\r\n    headerName: \"Phase name\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"MeasurementType\",\r\n    headerName: \"Measurement Type\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Qualitative\", \"Quantitative\"] },\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"LowerBound\",\r\n    headerName: \"Lower Bound\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"UpperBound\",\r\n    headerName: \"Upper Bound\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Status\",\r\n    headerName: \"Status\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"PhaseRange\",\r\n    headerName: \"PhaseRange\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Unit\",\r\n    headerName: \"Unit\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Km/hr\", \"M/hr\"] },\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Description\",\r\n    headerName: \"Description\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const LMrowData = [];\r\n\r\nexport const LMcolumnDefs = [\r\n  {\r\n    headerName: \"Component\",\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    headerName: \"Load\",\r\n    children: [{ field: \"L1\" }, { field: \"L2\" }, { field: \"L3\" }],\r\n  },\r\n  {\r\n    headerName: \"Ship Mode\",\r\n    children: [{ field: \"Docked\" }, { field: \"Cruise\" }, { field: \"Attack\" }],\r\n  },\r\n];\r\n\r\nexport const DCMrowData = [\r\n  {\r\n    System: \"DA\",\r\n    L1: \"0.52\",\r\n    L2: \"1\",\r\n    L3: \"0.5\",\r\n    Docked: \"1\",\r\n    Cruise: \"1\",\r\n    Attack: \"1\",\r\n  },\r\n];\r\n\r\nexport const DCMcolumnDefs = [\r\n  {\r\n    field: \"System\",\r\n    headerName: \"System\",\r\n    minWidth: 260,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"L1\",\r\n    headerName: \"L1\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"L2\",\r\n    headerName: \"L2\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"L3\",\r\n    headerName: \"L3\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Docked\",\r\n    headerName: \"Docked\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Cruise\",\r\n    headerName: \"Cruise\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Attack\",\r\n    headerName: \"Attack\",\r\n    minWidth: 120,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const components = [\"Fresh Water Cooling\", \"Component2\", \"Component3\"];\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCMMain.js",["729","730"],"import React from 'react'\r\nimport styles from \"./MaintenanceAllocation.module.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst RCMMain=(props)=> {\r\n    return <div className={styles.container}>\r\n  \r\n  <div className={styles.homeLinks}>\r\n        <Link to=\"/maintenance_allocation/conduct_rcm_analysis/create\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          RCM Analysis\r\n        </Link>\r\n        {/* <Link to=\"/maintenance_allocation/conduct_rcm_analysis/critical_comp\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Select Critical Components\r\n        </Link>\r\n        <Link to=\"/maintenance_allocation/display\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Create RCM Analysis\r\n        </Link> */}\r\n      </div>\r\n      <div className={styles.netra}>\r\n        <img src=\"/netra-logo-removebg.png\" width={200} height={200} />\r\n        <div>NETRA</div>\r\n      </div>\r\n    </div>;\r\n  }\r\n  export default RCMMain;","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\navigation\\SideBarData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Home\\AccessControl.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\Main.js",["731","732"],"import React from \"react\";\r\nimport styles from \"./MaintenanceAllocation.module.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AccessControl from \"../Home/AccessControl\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <AccessControl allowedLevels={['L1', 'L5', 'L6']}>\r\n      <div className={styles.container}>\r\n        <div className={styles.homeLinks}>\r\n          <Link to=\"/maintenance_allocation/create\">\r\n            <div className={styles.circleIcon}>\r\n              <i class=\"fas fa-microchip\"></i>\r\n            </div>\r\n            Create Maintenance Plan\r\n          </Link>\r\n          {/* <Link to=\"/maintenance_allocation/modify\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Modify Maintenance Plan\r\n        </Link>\r\n        <Link to=\"/maintenance_allocation/display\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Display Maintenance Plan\r\n        </Link>\r\n        <Link to=\"/maintenance_allocation/share\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Share Maintenance Plan\r\n        </Link> */}\r\n          <Link to=\"/maintenance_allocation/conduct_rcm_analysis\">\r\n            <div className={styles.circleIcon}>\r\n              <i class=\"fas fa-microchip\"></i>\r\n            </div>\r\n            Conduct Rcm Analysis\r\n          </Link>\r\n          {/* <Link to=\"/maintenance_allocation/add_data\">\r\n          <div className={styles.circleIcon}>\r\n            <i class=\"fas fa-microchip\"></i>\r\n          </div>\r\n          Add Data\r\n        </Link> */}\r\n        </div>\r\n        <div className={styles.netra}>\r\n        <img src=\"/netra-logo-removebg.png\" width={300} height={400} />\r\n        <div className={styles.logotxt}>NETRA</div>\r\n        </div>\r\n      </div>\r\n    </AccessControl>\r\n  );\r\n};\r\nexport default Main;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\Data.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\CustomSnackBar.js",["733","734"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomizedSnackbars = (props) => {\r\n  // const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(props.message.showSnackBar);\r\n\r\n  // const handleClick = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = (event, reason) => {\r\n  //   if (reason === \"clickaway\") {\r\n  //     return;\r\n  //   }\r\n\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={props.message.showSnackBar}\r\n      autoHideDuration={7000}\r\n      onClose={props.onHandleClose}\r\n    >\r\n      <Alert onClose={props.onHandleClose} severity={props.message.severity}>\r\n        {props.message.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\module\\NewModule.js",["735","736","737","738","739"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport clsx from 'clsx';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./Module_radio.module.css\";\r\n\r\nconst StepperStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: '#ebebed',\r\n    borderRadius: '5px',\r\n    height: \"50px\",\r\n    justifyContent: 'space-between',\r\n    padding: '15px'\r\n  },\r\n  active: {\r\n    color: '#000',\r\n  }\r\n}));\r\nconst CustomIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  active: {\r\n    // position: 'relative',\r\n    // // backgroundColor: '#3ae711',\r\n    // left: '5px',\r\n    // top: '5px',\r\n    // width: '15px',\r\n    // height: '15px',\r\n    // borderRadius:'50%',\r\n    // zIndex: 1,\r\n    // boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  circle: {\r\n    height: '25px',\r\n    width: '25px',\r\n    borderRadius: '50%',\r\n    boxShadow: '0px 4px 14px 0px rgba(0,0,0,0.2)',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n\r\n  completed: {\r\n    position: 'relative',\r\n    backgroundColor: '#00dffe',\r\n    left: '5px',\r\n    top: '5px',\r\n    width: '15px',\r\n    height: '15px',\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n    boxShadow: '3px 3px 10px 0px rgba(0,0,0,0.3)',\r\n  },\r\n});\r\n\r\nfunction CustomIcon(props) {\r\n  const classes = CustomIconStyles();\r\n  const { active, completed } = props;\r\n  debugger;\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n    >\r\n      {completed ? <div className={classes.circle}><div className={classes.completed} /></div> : <div className={classes.circle}><div className={clsx({\r\n        [classes.active]: active,\r\n      })} /></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"System Configuration\",\r\n    \"Phase Manager\",\r\n    \"HEP\",\r\n    \"Data Manager\",\r\n    \"Mission Profile\"\r\n  ];\r\n}\r\n\r\nexport default function NewModule() {\r\n  const classes = StepperStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  debugger;\r\n  return (\r\n    <div className={styles.module}>\r\n      <Stepper classes={classes} activeStep={activeStep} connector={null}>\r\n        {steps.map((label) => (\r\n          <Step key={label} >\r\n            <StepLabel\r\n              StepIconComponent={CustomIcon}\r\n              TypographyProps={{\r\n                classes: { root: styles.boldLabel }, // Apply the class to the Typography component\r\n              }}\r\n            >\r\n              {label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {/* <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\redundancy.js",["740","741","742","743","744","745","746"],"import {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  useRef,\r\n  forwardRef,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport RenderParallelComponent from \"./RenderParallelComponent\";\r\nconst RedundancyInfo = (props) => {\r\n  // const [rows, setRows] = useState([]);\r\n  // useEffect(() => {\r\n  //   fetch(\"/home\", {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Accept: \"application/json\",\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((data) => {\r\n  //       setRows(data);\r\n  //     });\r\n  // }, [setRows]);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  let ParallelIds = [];\r\n\r\n  const setParallelIds = (d) => {\r\n    ParallelIds = d;\r\n  };\r\n\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n\r\n  const currentSelectedSystem = useSelector(\r\n    (state) => state.userSelection.currentSelection.equipmentName\r\n  );\r\n\r\n  const RIDemo = [\r\n    <AgGridColumn field=\"eqId\" hide={true} />,\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment name\"\r\n      headerTooltip=\"Equipment name\"\r\n      width=\"220\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"EquipmentParentName\"\r\n      headerName=\"Equipment Parent Name\"\r\n      headerTooltip=\"Equipment Parent Name\"\r\n      width={300}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ParallelComponent\"\r\n      headerName=\"Parallel Component (Component - Parent Name)\"\r\n      headerTooltip=\"Parallel Component (Component - Parent Name)\"\r\n      // cellEditor=\"agSelectCellEditor\"\r\n      cellEditorFramework={RenderParallelComponent}\r\n      cellEditorParams={{\r\n        setParallelIds: setParallelIds,\r\n        label: \"Select Parallel Equipments!\",\r\n        isMultiple: true,\r\n      }}\r\n      //onCellClicked={onCellChanged}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"ParallelComponent\"\r\n    //   headerName=\"Parallel Component (Component - Parent Name)\"\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   // cellEditorParams={renderParallelComponent}\r\n    //   // onCellValueChanged={onCellChanged}\r\n    //   cellRendererFramework={MultipleSelect}\r\n    //   width=\"220\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"RedundancyType\"\r\n      headerName=\"Redundancy Type\"\r\n      headerTooltip=\"Redundancy Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\r\n          \"\",\r\n          \"K out-of N - Active Redundancy\",\r\n          \"K out-of N - Inactive Redundancy\",\r\n        ],\r\n      }}\r\n      width=\"220\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"K\"\r\n      headerName=\"K\"\r\n      headerTooltip=\"K\"\r\n      type=\"number\"\r\n      width={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const rData = systemData.map((element, index) => {\r\n    return {\r\n      eqId: element.id,\r\n      EquipmentName: element.name,\r\n      componentId: element.id,\r\n      systemName: currentSelectedSystem,\r\n      id: uuid(),\r\n      EquipmentParentName: element.parentName,\r\n      ParallelComponent: \"\",\r\n      RedundancyType: \"K out-of N - Active Redundancy\",\r\n      K: 1,\r\n      // hK: 1,\r\n      // elhK: 0,\r\n      // cK: 0,\r\n      // dsK: 0,\r\n      // asK: 0,\r\n      parallelComponentIds: [],\r\n      N: 0,\r\n    };\r\n  });\r\n\r\n  const updateFinalRowData = (allRows, id) => {\r\n    if (id) {\r\n      allRows.filter((x) => x.id === id)[0].parallelComponentIds = ParallelIds;\r\n      allRows.filter((x) => x.id === id)[0].N = ParallelIds.length + 1;\r\n    }\r\n    debugger;\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={RIDemo}\r\n        rowData={rData}\r\n        tableUpdate={updateFinalRowData}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedundancyInfo;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\userSelection\\userSelection.js",["747","748","749","750"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { components } from \"./userSelectionData\";\r\nimport CustomSelect from \"../Form/CustomSelect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../store/ApplicationVariable\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst SelectStyles = makeStyles({\r\n  spacing: {\r\n    marginLeft: \"10px\",\r\n  },\r\n});\r\n\r\nfunction UserSelection(props) {\r\n  UserSelection.defaultProps = {\r\n    alignment:\"horizontal\",\r\n    inputWidth:\"200px\"\r\n  }\r\n  const [userSelectionData, setUserSelectionData] = useState([]);\r\n  const [userSelectionEqData, setUserSelectionEqData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const customSelectData = useSelector(\r\n    (state) => state.userSelection.userSelection\r\n  );\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  useEffect(() => {\r\n    fetch(\"/fetch_user_selection\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const userData = data[\"data\"];\r\n        const eqData = data[\"eqData\"];\r\n        const shipName = userData.map((x) => x.shipName);\r\n        const components = data[\"uniq_eq_data\"];\r\n        setUserSelectionData(userData);\r\n        setUserSelectionEqData(eqData);\r\n        dispatch(\r\n          userActions.onFirstLoad({\r\n            filteredData: { shipName: shipName },\r\n            componentsData: components,\r\n          })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const handleShipNameChange = (e) => {\r\n    const shipName = e.currentTarget.innerText;\r\n    const category = userSelectionData\r\n      .filter((x) => x.shipName === shipName)\r\n      .map((x) => x.shipCategory);\r\n    const shipClass = userSelectionData\r\n      .filter((x) => x.shipName === shipName)\r\n      .map((x) => x.shipClass);\r\n    const command = userSelectionData\r\n      .filter((x) => x.shipName === shipName)\r\n      .map((x) => x.command);\r\n    const dept = userSelectionData\r\n      .filter((x) => x.shipName === shipName)\r\n      .map((x) => x.department);\r\n    const d = {\r\n      shipCategory: category,\r\n      shipClass: shipClass,\r\n      command: command,\r\n      department: dept,\r\n    };\r\n    dispatch(\r\n      userActions.onChangeLoad({\r\n        filteredData: d,\r\n        currentShipName: { shipName: shipName },\r\n      })\r\n    );\r\n  };\r\n\r\n  const onShipCategoryChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    data = { shipCategory: data };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n  };\r\n\r\n  const onShipClassChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    data = { shipClass: data };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n  };\r\n\r\n  const onCommandChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    data = { command: data };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n  };\r\n\r\n  const onDepartmentChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    let eqData = userSelectionEqData\r\n      .filter(\r\n        (x) =>\r\n          x.command === currentSelection.command &&\r\n          x.department === data &&\r\n          x.shipName === currentSelection.shipName &&\r\n          x.shipCategory === currentSelection.shipCategory &&\r\n          x.shipName === currentSelection.shipName &&\r\n          x.shipClass === currentSelection.shipClass\r\n      )\r\n      .map((x) => x.equipmentName);\r\n    data = { department: data };\r\n    eqData = { equipmentName: eqData };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n    dispatch(userActions.populateEqName({ filteredData: eqData }));\r\n  };\r\n  const onEquipmentChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    data = { equipmentName: data };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n  };\r\n  const onEquipmentCodeChange = (e) => {\r\n    let data = e.currentTarget.innerText;\r\n    data = { equipmentCode: data };\r\n    dispatch(userActions.onChangeCurrentSelection({ selectedData: data }));\r\n  };\r\n  const SelectClasses = SelectStyles();\r\n  let colwidth=4\r\n  props.alignment===\"vertical\"?colwidth=12:colwidth=4\r\n  \r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={colwidth}>\r\n        <div className={SelectClasses.spacing}>\r\n          <CustomSelect\r\n            style={{ width: props.inputWidth }}\r\n            id=\"ship-name\"\r\n            label=\"Ship Name\"\r\n            fields={customSelectData[\"shipName\"]}\r\n            onChange={handleShipNameChange}\r\n            value={currentSelection[\"shipName\"]}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={colwidth}>\r\n        <div className={SelectClasses.spacing}>\r\n          <CustomSelect\r\n            style={{ width: props.inputWidth }}\r\n            id=\"ship-category\"\r\n            label=\"Ship Category\"\r\n            fields={customSelectData[\"shipCategory\"]}\r\n            onChange={onShipCategoryChange}\r\n            value={currentSelection[\"shipCategory\"]}\r\n\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={colwidth}>\r\n        <div className={SelectClasses.spacing}>\r\n          <CustomSelect\r\n            style={{ width: props.inputWidth }}\r\n            id=\"ship-class\"\r\n            label=\"Ship Class\"\r\n            fields={customSelectData[\"shipClass\"]}\r\n            onChange={onShipClassChange}\r\n            value={currentSelection[\"shipClass\"]}\r\n\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={colwidth}>\r\n        <div className={SelectClasses.spacing}>\r\n          <CustomSelect\r\n            style={{ width: props.inputWidth }}\r\n            id=\"command\"\r\n            label=\"Command\"\r\n            fields={customSelectData[\"command\"]}\r\n            onChange={onCommandChange}\r\n            value={currentSelection[\"command\"]}\r\n\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={colwidth}>\r\n        <div className={SelectClasses.spacing}>\r\n          <CustomSelect\r\n            style={{ width: props.inputWidth }}\r\n            id=\"department\"\r\n            label=\"Department\"\r\n            fields={customSelectData[\"department\"]}\r\n            onChange={onDepartmentChange}\r\n            value={currentSelection[\"department\"]}\r\n\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Route\r\n        path={[\r\n          \"/system_config/redundancy_info\",\r\n          \"/system_config/maintenance_info\",\r\n          \"/system_config/failure_mode\",\r\n          \"/system_config/duty_cycle\",\r\n          \"/system_config/\",\r\n          \"/data_manager/\",\r\n          \"/phase_manager/\",\r\n          \"/HEP/\",\r\n          \"/maintenance_allocation/\",\r\n          \"/add_system_doc/\",\r\n          \"/rul\",\r\n          \"/optimize\"\r\n          \r\n        ]}\r\n      >\r\n        <Grid item xs={colwidth}>\r\n          <div className={SelectClasses.spacing}>\r\n            <CustomSelect\r\n              style={{ width: props.inputWidth}}\r\n              id=\"equipment-name\"\r\n              label=\"Equipment Name\"\r\n              fields={customSelectData[\"equipmentName\"]}\r\n              onChange={onEquipmentChange}\r\n              value={currentSelection[\"equipmentName\"]}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Route>\r\n    </Grid>\r\n  );\r\n}\r\nexport default UserSelection;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\additionalInfo\\additionalInfo.js",["751","752","753","754","755","756"],"import { Button, unstable_createMuiStrictModeTheme } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport RenderParallelComponent from \"../redundancy/RenderParallelComponent\";\r\nconst AdditionalInfo = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.parentId === null);\r\n  let ParallelIds = [];\r\n\r\n  const setParallelIds = (d) => {\r\n    ParallelIds = d;\r\n  };\r\n  const rowData = systemData.map((element, index) => {\r\n    return {\r\n      id: uuid(),\r\n      component_id: element.id,\r\n      installation_date: \"10/08/2021\",\r\n      EquipmentName: element.name,\r\n      AverageRunning: \"\",\r\n      Unit: \"\",\r\n      InstallationDate: \"\",\r\n      maintDataAvail: \"Component Level\",\r\n      hK: 1,\r\n      elhK: 1,\r\n      cK: 1,\r\n      dsK: 1,\r\n      asK: 1,\r\n      parallelComponentIds: [],\r\n    };\r\n  });\r\n\r\n  const AIcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment Name\"\r\n      headerTooltip=\"Equipment Name\"\r\n      width={150}\r\n      // editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"installation_date\"\r\n      headerName=\"Installation Date\"\r\n      headerTooltip=\"Date\"\r\n      width={150}\r\n      cellEditor=\"datePicker\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"AverageRunning\"\r\n      headerName=\"Default Avg. Monthly Utilization\"\r\n      headerTooltip=\"Default Avg. Monthly Utilization\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Unit\"\r\n      headerName=\"Unit\"\r\n      headerTooltip=\"Unit\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Days\", \"Hours\", \"Cycles\"],\r\n      }}\r\n      width={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"maintDataAvail\"\r\n      headerName=\"Maintenance Data Availability\"\r\n      headerTooltip=\"Maintenance Data Availability\"\r\n      width={250}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      editable={true}\r\n      cellEditorParams={{\r\n        values: [\"System Level\", \"Component Level\"],\r\n      }}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"hK\"\r\n    //   headerName=\"Harbour-K\"\r\n    //   headerTooltip=\"Harbour-K\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"elhK\"\r\n    //   headerName=\"Entry Leaving Harbour-K\"\r\n    //   headerTooltip=\"Entry Leaving Harbour-K\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"cK\"\r\n    //   headerName=\"Cruise-K\"\r\n    //   headerTooltip=\"Cruise-K\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"dsK\"\r\n    //   headerName=\"Defence Station-K\"\r\n    //   headerTooltip=\"Defence Station-K\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"asK\"\r\n    //   headerName=\"Action Station-K\"\r\n    //   headerTooltip=\"Action Station-K\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   editable={true}\r\n    // />,\r\n    // <AgGridColumn\r\n    //   field=\"parallelC\"\r\n    //   headerName=\"Select Parallel\"\r\n    //   headerTooltip=\"Select Parallel\"\r\n    //   type=\"number\"\r\n    //   width=\"100\"\r\n    //   cellEditorFramework={RenderParallelComponent}\r\n    //   cellEditorParams={{\r\n    //     setParallelIds: setParallelIds,\r\n    //     label: \"Select Parallel Components\",\r\n    //     isMultiple: true,\r\n    //   }}\r\n    //   editable={true}\r\n    // />,\r\n  ];\r\n  const updateFinalRowData = (allRows, id) => {\r\n    if (id) {\r\n      allRows.filter((x) => x.id === id)[0].parallelComponentIds = ParallelIds;\r\n      allRows.filter((x) => x.id === id)[0].N = ParallelIds.length + 1;\r\n    }\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={AIcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AdditionalInfo;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\dutyCycle\\dutyCycle.js",["757","758","759"],"import { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport {v4 as uuid} from 'uuid';\r\nconst DutyCycle = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const rowData = systemData.map((element, index) => {\r\n    return {\r\n      Component: element.name,\r\n      ComponentId:element.id,\r\n      id:uuid(),\r\n      DutyCycle: 1,\r\n    };\r\n  });\r\n\r\n  const DCcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Component\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"DutyCycle\"\r\n      headerName=\"Duty Cycle\"\r\n      type=\"number\"\r\n      width={500}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={DCcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DutyCycle;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\maintenanceInfo\\maintenanceInfo.js",["760","761","762","763","764","765"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../SystemConfiguration.module.css\";\r\nimport { MIrowData } from \"../SystemConfigurationTable.js\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst MaintenanceInfo = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const MaintColumns = [\r\n    <AgGridColumn\r\n      field=\"EquipmentName\"\r\n      headerName=\"Equipment name\"\r\n      headerTooltip=\"Equipment name\"\r\n      width={150}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"RepairType\"\r\n      headerName=\"Repair Type\"\r\n      headerTooltip=\"Repair Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Replaceable\", \"Repairable\"],\r\n      }}\r\n      width={160}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"PreventiveMaintenaceApplicable\"\r\n      headerName=\"Preventive Maintenace Applicable\"\r\n      headerTooltip=\"Preventive Maintenace Applicable\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"PreventiveMaintenaceInterval\"\r\n      headerName=\"Preventive Maintenace Interval (hrs)\"\r\n      headerTooltip=\"Preventive Maintenace Interval (hrs)\"\r\n      type=\"number\"\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ComponentsReplaced\"\r\n      headerName=\"Can be Replaced Ship Staff\"\r\n      headerTooltip=\"Can be Replaced Ship Staff\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      width={200}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ConditionMonitoring\"\r\n      headerName=\"Is System Parameter's Recorded\"\r\n      headerTooltip=\"Is System Parameter's Recorded\"\r\n      width={200}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"No\", \"Yes\"] }}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"ComponentCriticality\"\r\n    //   headerName=\"Criticality\"\r\n    //   width={350}\r\n    //   cellEditor=\"agSelectCellEditor\"\r\n    //   cellEditorParams={{\r\n    //     values: [\r\n    //       \"\",\r\n    //       \"Failure leads to hazard or complete loss of functionality.\",\r\n    //       \"Failure does not lead to hazard but causes partial loss of functionality.\",\r\n    //       \"Failure does not lead hazard or loss of functionality but significant loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but causes rapid deterioration of some other critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but minor loss in efficiency.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality but causes rapid deterioration of some other non-critical component.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to significant inconvenience.\",\r\n    //       \"Failure does not lead to hazard or loss of functionality or loss of efficiency but leads to minor inconvenience.\",\r\n    //     ],\r\n    //   }}\r\n    //   editable={true}\r\n    // />,\r\n  ];\r\n\r\n  const rowData = systemData\r\n    // .filter((x) => x.lmu === 1)\r\n    .map((element) => {\r\n      return {\r\n        id: uuid(),\r\n        component_id: element.id,\r\n        EquipmentName: element.name,\r\n        RepairType: element.repairType,\r\n        PreventiveMaintenaceApplicable: \"No\",\r\n        PreventiveMaintenaceInterval: 0,\r\n        ComponentsReplaced: \"No\",\r\n        ConditionMonitoring: \"No\",\r\n      };\r\n    });\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.systemTable}>\r\n      <Table\r\n        columnDefs={MaintColumns}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceInfo;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\Layout\\layout.js",["766","767","768","769","770"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\CreateMaintenance.js",["771","772","773"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\AddData\\AddData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ModifyandDisplay\\ModifyandDisplayMaintenance.js",["774","775","776","777"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\ShareMaintenance\\ShareMaintenance.js",["778","779","780"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\CreateRCM.js",["781","782","783","784","785"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\RCM\\critical_RCM.js",["786","787","788","789","790","791","792","793","794","795","796","797"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\repairableSubTable.js",["798","799"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\RepairableSubTableMaual.js",["800","801","802","803"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\repairableOverhaul\\custom.js",["804","805","806","807","808","809","810","811","812","813","814"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\OptiQ.js",["815","816","817","818"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\AutoSelect.js",["819","820"],"import { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst LabelStyles = makeStyles({\r\n  root: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n    position: \"unset\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\nconst InputStyles = makeStyles({\r\n  root: {\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n    background: \"#fff\",\r\n    border:'1px solid #0263a1',\r\n    borderRadius: \"5px\",\r\n    // height: 40,\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n});\r\n\r\nexport default function AutoSelect(props) {\r\n  debugger;\r\n  const options = props.fields.map((option) => {\r\n    //const firstLetter = option.parentName.toUpperCase();\r\n    // firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\r\n    return {\r\n      ...option,\r\n    };\r\n  });\r\n  const Labelclasses = LabelStyles();\r\n  const Inputclasses = InputStyles();\r\n  return (\r\n    <Autocomplete\r\n      multiple={props.multiple}\r\n      classes={Inputclasses}\r\n      id=\"grouped-demo\"\r\n      options={options}\r\n      groupBy={(option) => option.parentName}\r\n      // getOptionLabel={(option) => option.name}\r\n      getOptionLabel={(option) => option.name || \"\"}\r\n      //style={{ width: 300 }}\r\n      value={props.value || null}\r\n      onChange={props.onChange}\r\n      renderInput={(params) => <TextField  {...params} InputProps={{...params.InputProps, disableUnderline: true}} />}\r\n    />\r\n  );\r\n}\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\CustomTextInput.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\main\\EqptStructuring\\LabelToolTip\\LabelToolTip.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\failureMode.js",["821","822"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\slider\\NewSlider.js",["823"],"import { React, useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport classes from \"./Slider.module.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"98%\",\r\n    background: \"#ebebeb\",\r\n    height: 70,\r\n    borderRadius: 5,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sliderMarks: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#fff\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    \"&.Mui-disabled\": {\r\n      height: 20,\r\n      width: 20,\r\n      backgroundColor: \"#fff\",\r\n      // marginTop: -4,\r\n      // marginLeft: -4,\r\n      boxShadow:\r\n        \"1px 2px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\",\r\n    },\r\n  },\r\n  active: {},\r\n\r\n  track: {\r\n    marginLeft: \"1%\",\r\n    height: 12,\r\n    borderRadius: 10,\r\n    background:\r\n      \"linear-gradient(90deg, rgba(0,159,251,1) 0%, rgba(42,42,112,1) 60%)\",\r\n  },\r\n  rail: {\r\n    width: \"98%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    height: 12,\r\n    borderRadius: 10,\r\n    background: \"#fff\",\r\n    opacity: 1,\r\n  },\r\n})(Slider);\r\n\r\nexport default function StageSlider(props) {\r\n  const [def, Setdef] = useState(props.default);\r\n  useEffect(() => {\r\n    Setdef(props.default);\r\n  }, [props.default]);\r\n  const styles = useStyles();\r\n  return (\r\n    <div className={classes.slider}>\r\n      <div className={styles.root}>\r\n        <PrettoSlider\r\n          value={def}\r\n          step={null}\r\n          marks={props.marks}\r\n          classes={{\r\n            markLabel: styles.sliderMarks, // Apply the class to the mark labels\r\n          }}\r\n          disabled\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\Table.js",["824","825","826","827","828"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\DataManagerTable.js",["829","830"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\OverhaulTable.js",["831"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\RUL\\RULPredictor.js",["832","833","834","835","836","837"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\sortableTree\\SortableTree.js",["838","839","840","841"],"import React, { useState, useEffect } from \"react\";\r\nimport SortableTree, { getTreeFromFlatData } from \"react-sortable-tree\";\r\nimport FileExplorerTheme from \"react-sortable-tree-theme-full-node-drag\";\r\nimport treeDataT from \"./SortableTreeData\";\r\nimport { treeDataActions } from \"../../store/TreeDataStore\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport 'react-sortable-tree/style.css' \r\n\r\nconst TreeComponent = (props) => {\r\n  debugger;\r\n  const dispatch = useDispatch();\r\n  const fData = useSelector((state) => state.treeData.treeData);\r\n  const tData = useSelector((state) => state.treeData.sortTreeData);\r\n  let treeData = getTreeFromFlatData({\r\n    flatData: fData.map((node) => ({ ...node, title: node.name })),\r\n    getKey: (node) => node.id, // resolve a node's key\r\n    getParentKey: (node) => node.parent, // resolve a node's parent's key\r\n    rootKey: null, // The value of the parent key when there is no parent (i.e., at root level)\r\n  });\r\n  const [treeDataS, setTreeData] = useState(treeData);\r\n  const onChangeTree = (treeD) => {\r\n    dispatch(\r\n      treeDataActions.setOnChangeTreeData({\r\n        treeData: treeD,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ height: props.height }}>\r\n      <SortableTree\r\n        treeData={tData}\r\n        // onChange={(treeDataS) => setTreeData(treeDataS)}\r\n        onChange={(tData) => onChangeTree(tData)}\r\n        theme={FileExplorerTheme}\r\n        isVirtualized={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default TreeComponent;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\CustomSelect.js",["842"],"//Custom Select- Props{id,label,value,onchange,classname,fields}\r\nimport React from \"react\";\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  FormControl,\r\n  InputBase,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst LabelStyles = makeStyles({\r\n  root: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.3rem\",\r\n    position: \"unset\",\r\n    // marginBottom: 10,\r\n  },\r\n});\r\nconst StyledInput = withStyles({\r\n  root: {\r\n    paddingRight: 25,\r\n    paddingLeft: 10,\r\n    background: \"#fff\",\r\n    border: \"1px solid #0263a1\",\r\n    borderRadius: \"5px\",\r\n    width: \"320px\",\r\n    height: \"40px\",\r\n    boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n  },\r\n})(InputBase);\r\nconst CustomSelect = (props) => {\r\n  const Labelclasses = LabelStyles();\r\n\r\n  return (\r\n    <FormControl className={props.className}>\r\n      <InputLabel id={props.id}  classes={Labelclasses} shrink>\r\n        <Typography variant=\"h5\" sx={{fontSize: \"700\"}}>\r\n        {props.label}\r\n        </Typography>\r\n      </InputLabel>\r\n      {props.value ? (\r\n        <Select\r\n          style={props.style}\r\n          labelId={props.id + \"-label\"}\r\n          id={props.id}\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          input={<StyledInput />}\r\n          value={props.value}\r\n        >\r\n          {props.fields.map((data) => (\r\n            <MenuItem value={data}>{data}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      ) : (\r\n        <Select\r\n          style={props.style}\r\n          labelId={props.id + \"-label\"}\r\n          id={props.id}\r\n          name={props.name}\r\n          onChange={props.onChange}\r\n          input={<StyledInput />}\r\n        >\r\n          {props.fields.map((data) => (\r\n            <MenuItem value={data}>{data}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CustomSelect;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\main\\EqptStructuring\\EqptStructuring.js",["843","844","845","846","847","848"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\GroupTable.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\AssignType.js",["849","850","851","852"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\components\\sortableTree\\SortableTreeData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\PM OPTIM\\OptTable.js",["853"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Maintenance Allocation\\CreateMaintenance\\SaveHandler.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\SystemConfigurationTable.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\failureMode\\EquipmentName.js",["854","855","856","857"],"import React, {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  useRef,\r\n  forwardRef,\r\n} from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SystemConfiguration from \"../../systen_configuration/SystemConfiguration\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst EquipmentName = forwardRef((props, ref) => {\r\n  const [value, setValue] = useState([]);\r\n  const refInput = useRef(null);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const location = useLocation();\r\n  const handleChange = (event, newValue) => {\r\n    debugger;\r\n    // alert(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     // focus on the input\r\n  //     //setTimeout(() => refInput.current.focus());\r\n  //     console.log(systemData)\r\n  // }, []);\r\n\r\n  /* Component Editor Lifecycle methods */\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      // the final value to send to the grid, on completion of editing\r\n      getValue() {\r\n        //console.log(value);\r\n        const path = location.pathname;\r\n        props.setId(value.id);\r\n        return value.name;\r\n      },\r\n      isPopup() {\r\n        return true;\r\n      },\r\n      // Gets called once before editing starts, to give editor a chance to\r\n      // cancel the editing before it even starts.\r\n      isCancelBeforeStart() {\r\n        return false;\r\n      },\r\n\r\n      // Gets called once when editing is finished (eg if Enter is pressed).\r\n      // If you return true, then the result of the edit will be ignored.\r\n      // isCancelAfterEnd() {\r\n      //     // our editor will reject any value greater than 1000\r\n      //     return value > 1000;\r\n      // }\r\n    };\r\n  });\r\n\r\n  return (\r\n    // <input type=\"number\"\r\n    //        ref={refInput}\r\n    //        value={value}\r\n    //        onChange={event => setValue(event.target.value)}\r\n    //        style={{width: \"100%\"}}\r\n    // />\r\n    <Autocomplete\r\n      options={systemData}\r\n      //value={value}\r\n      onChange={handleChange}\r\n      groupBy={(option) => option.parentName}\r\n      getOptionLabel={(option) => option.name}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          ref={refInput}\r\n          label=\"Select Equipment\"\r\n          variant=\"outlined\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\nexport default EquipmentName;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\systen_configuration\\redundancy\\RenderParallelComponent.js",["858","859"],"import React, {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  useRef,\r\n  forwardRef,\r\n} from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst RenderParallelComponent = forwardRef((props, ref, isMultiple = true) => {\r\n  const [value, setValue] = useState([]);\r\n  const refInput = useRef(null);\r\n  const location = useLocation();\r\n  //   alert(location.pathname);\r\n  let potentialParallelComponents = [];\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const userSelection = useSelector(\r\n    (state) => state.userSelection.userSelection\r\n  );\r\n  const currentSelection = useSelector(\r\n    (state) => state.userSelection.currentSelection\r\n  );\r\n  const componentsData = useSelector(\r\n    (state) => state.userSelection.componentsData\r\n  );\r\n  const selectedEquipment = props.data.EquipmentName;\r\n  const selectedEquipmentId = props.data.eqId;\r\n\r\n  if (location.pathname === \"/system_config/additional_info\") {\r\n    debugger;\r\n    const currentSelectedPlatform = currentSelection[\"shipName\"];\r\n\r\n    potentialParallelComponents = userSelection[\"equipmentName\"].map((x) => {\r\n      let id = componentsData.filter((c) => c.name === x)[0][\"id\"];\r\n      return {\r\n        name: x,\r\n        parentName: currentSelectedPlatform,\r\n        id: id,\r\n      };\r\n    });\r\n  } else {\r\n    potentialParallelComponents = systemData.filter(\r\n      (x) => x.name !== selectedEquipment\r\n    );\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    debugger;\r\n    setValue(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // focus on the input\r\n  //   //setTimeout(() => refInput.current.focus());\r\n  //   console.log(potentialParallelComponents);\r\n  // }, []);\r\n\r\n  /* Component Editor Lifecycle methods */\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      // the final value to send to the grid, on completion of editing\r\n      getValue() {\r\n        debugger;\r\n        //console.log(value);\r\n        let valueStr = [];\r\n        let ids = [];\r\n        // if (location.pathname === \"/system_config/additional_info\") {\r\n        //   value.forEach((element) => {\r\n        //     valueStr = [...valueStr, element.name];\r\n        //   });\r\n        // } else\r\n        if (location.pathname === \"/system_config/failure_mode\") {\r\n          ids = [value.id];\r\n          valueStr = [value.name];\r\n          props.data[\"rEquipmentId\"] = ids[0];\r\n        } else {\r\n          value.forEach((element) => {\r\n            ids = [...ids, element.id];\r\n            valueStr = [...valueStr, element.name];\r\n          });\r\n          props.setParallelIds(ids);\r\n        }\r\n        return valueStr.toString();\r\n      },\r\n      isPopup() {\r\n        return true;\r\n      },\r\n      // Gets called once before editing starts, to give editor a chance to\r\n      // cancel the editing before it even starts.\r\n      isCancelBeforeStart() {\r\n        return false;\r\n      },\r\n\r\n      // Gets called once when editing is finished (eg if Enter is pressed).\r\n      // If you return true, then the result of the edit will be ignored.\r\n      // isCancelAfterEnd() {\r\n      //     // our editor will reject any value greater than 1000\r\n      //     return value > 1000;\r\n      // }\r\n    };\r\n  });\r\n\r\n  return (\r\n    // <input type=\"number\"\r\n    //        ref={refInput}\r\n    //        value={value}\r\n    //        onChange={event => setValue(event.target.value)}\r\n    //        style={{width: \"100%\"}}\r\n    // />\r\n    <Autocomplete\r\n      id={selectedEquipmentId}\r\n      options={potentialParallelComponents}\r\n      //value={value}\r\n      multiple={props.isMultiple}\r\n      onChange={handleChange}\r\n      groupBy={(option) => option.parentName}\r\n      getOptionLabel={(option) => option.name}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          ref={refInput}\r\n          label={props.label}\r\n          variant=\"outlined\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\nexport default RenderParallelComponent;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\userSelection\\userSelectionData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\Flow\\flow.js",["860","861","862"],"import { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useCallback, useRef, useState } from \"react\";\r\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  removeElements,\r\n  Background,\r\n  ReactFlowProvider,\r\n  Controls,\r\n  isNode,\r\n} from \"react-flow-renderer\";\r\nimport CustomNode from \"../CustomNode/CustomNode\";\r\nimport dagre from \"dagre\";\r\nimport { elementActions } from \"../../../store/elements\";\r\nimport customCSSClasses from \"./flow.module.css\";\r\nimport \"./flow.css\";\r\nimport CustomContextMenu from \"../ContextMenu/contextMenu\";\r\n\r\nconst nodeTypes = {\r\n  systemNode: CustomNode,\r\n};\r\n\r\nconst styles = {\r\n  background: \"#EEEEEE\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 172;\r\nconst nodeHeight = 36;\r\n\r\nconst getLayoutedElements = (elements, direction = \"TB\") => {\r\n \r\n  debugger;\r\n  const isHorizontal = direction === \"LR\";\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n      el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x,\r\n        y: nodeWithPosition.y,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst Flow = ({reactFlowInstance,reactFlowWrapper,setReactFlowInstance}) => {\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setIsSnackbarOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  \r\n  const ielements = useSelector((state) => state.elements.elements);\r\n  const onElementsRemove = (elementsToRemove) => {\r\n    let ele = removeElements(elementsToRemove, ielements);\r\n    dispatch(elementActions.removeElement(ele));\r\n  };\r\n  const onConnect = (params) => {\r\n    params.type = \"smoothstep\";\r\n    params.id = uuid();\r\n    params.dtype = \"edge\";\r\n    let ele = addEdge(params, ielements);\r\n    dispatch(elementActions.onConnect(ele));\r\n  };\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n  const onElementClick = (event, node) => {\r\n    dispatch(elementActions.setNodeDetail(node));\r\n  };\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onLayout = useCallback(\r\n    (direction) => {\r\n      let elements = JSON.parse(JSON.stringify(ielements));\r\n      const layoutedElements = getLayoutedElements(elements, direction);\r\n      dispatch(elementActions.layoutChange({ elements: layoutedElements }));\r\n    },\r\n    [ielements]\r\n  );\r\n\r\n  const onContextMenu = (e) => {\r\n    e.preventDefault();\r\n    return <ContextMenu></ContextMenu>;\r\n  };\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    if (type === \"systemNode\") {\r\n      let isRootNodeExist =\r\n        ielements.filter((x) => x.type === \"systemNode\").length > 0;\r\n      if (isRootNodeExist) {\r\n        alert(\"System already exist!!\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    let style = {};\r\n    if (type === \"output\") {\r\n      style = {\r\n        border: \"2px solid black\",\r\n        borderRadius: \"5px\",\r\n        background: \"#DCFFC0\",\r\n        borderColor: \"black\",\r\n      };\r\n    } else {\r\n      style = {\r\n        border: \"2px solid black\",\r\n        borderRadius: \"5px\",\r\n        background: \"#FFFBDA\",\r\n      };\r\n    }\r\n    const newNode = {\r\n      id: uuid(),\r\n      type,\r\n      position,\r\n      data: { label: `Please Define Name` },\r\n      dtype: \"node\",\r\n      style: style,\r\n    };\r\n    dispatch(elementActions.addElement({ ele: newNode }));\r\n  };\r\n\r\n  const onHoverBegin=(event, node)=>{\r\n    // console.log(node)\r\n    let pc=\"\"\r\n    \r\n    if(\"parallel_comp\" in node.data){\r\n      node.data.parallel_comp.map(\r\n        component=>{\r\n          return(\r\n            pc+=\"<br/>\"+component.label\r\n          )\r\n          \r\n        })\r\n      document.getElementById('tooltip').innerHTML=\r\n      `<h4>${node.data.label}</h4>`+\"<p>Parallel Components:\"+pc+\"</p>\"\r\n      document.getElementById('tooltip').style.opacity = 1\r\n      }\r\n    \r\n  }\r\n  \r\n  const duringHover=(event,node)=>{\r\n    //console.log(event);\r\n    debugger;\r\n    document.getElementById('tooltip').style.left = event.pageX-20+\"px\"\r\n    document.getElementById('tooltip').style.top = event.pageY-110+\"px\"\r\n  }\r\n\r\n  const onHoverEnd=(event, node)=>{\r\n    document.getElementById('tooltip').style.opacity = 0\r\n    document.getElementById('tooltip').innerHTML=null\r\n  }\r\n  const handleClear =()=>{\r\n    dispatch(elementActions.clearCanvas());\r\n    setIsSnackbarOpen(true);\r\n  }\r\n\r\n  return (<>\r\n    <ContextMenuTrigger id=\"same_unique_identifier\">\r\n        \r\n      \r\n    <ReactFlowProvider>\r\n      <div className={customCSSClasses.react_flow_pane_parent}>\r\n        <div style={{ height: \"98vh\", width: \"100%\" }} ref={reactFlowWrapper}>\r\n          <CustomContextMenu/>\r\n          <ReactFlow\r\n            style={styles}\r\n            elements={ielements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            onDrop={onDrop}\r\n            onLoad={onLoad}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n            onElementClick={onElementClick}\r\n            onNodeContextMenu={onContextMenu}\r\n            // onNodeDoubleClick={onDoubleClick}\r\n\r\n            onNodeMouseEnter={onHoverBegin}\r\n            onNodeMouseMove={duringHover}\r\n            onNodeMouseLeave={onHoverEnd}\r\n          >\r\n            <div id=\"tooltip\">\r\n            </div>\r\n            <Controls></Controls>\r\n            <Background></Background>\r\n          </ReactFlow>\r\n        </div>\r\n        <div className={`controls + ' ' + ${customCSSClasses.control_div}`}>\r\n          <button className={customCSSClasses.horizontal} onClick={() => onLayout(\"LR\")}>Horizontal Layout</button>\r\n          <button className={customCSSClasses.vertical} onClick={() => onLayout(\"TB\")}>Vertical Layout</button>\r\n          <button className={customCSSClasses.vertical} onClick={handleClear}>Clear Layout</button>\r\n        </div>\r\n      </div>\r\n    </ReactFlowProvider>\r\n    </ContextMenuTrigger>\r\n    <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <MuiAlert onClose={handleCloseSnackbar} severity=\"success\">\r\n          Canvas cleared!\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Flow;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\SideBar\\Sidebar.js",["863"],"import { Button } from \"@material-ui/core\";\r\nimport classes from \"./Sidebar.module.css\";\r\nconst Sidebar = () => {\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n  return (\r\n    <aside className={classes.parent}>\r\n      {/* <div className={classes.description}>\r\n        You can drag these nodes to the pane below.\r\n      </div> */}\r\n      <div className={classes.nodeparent}>\r\n        <div\r\n          className={`${classes.dndnode} + ' ' + ${classes.system}`}\r\n          onDragStart={(event) => onDragStart(event, \"systemNode\")}\r\n          draggable\r\n        >\r\n          System Node\r\n        </div>\r\n        <div\r\n          className={classes.dndnode}\r\n          onDragStart={(event) => onDragStart(event, \"default\")}\r\n          draggable\r\n        >\r\n          Component Node\r\n        </div>\r\n        <div\r\n          className={`${classes.dndnode} + ' ' + ${classes.output}`}\r\n          onDragStart={(event) => onDragStart(event, \"output\")}\r\n          draggable\r\n        >\r\n          LMU Node\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\ComponentDetails.js",["864","865","866"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ComponentDetails\\GroupData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\ContextMenu\\contextMenu.js",["867","868"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\dragNdrop\\CustomNode\\CustomNode.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\TaskRenderMultipleComponent.js",["869","870","871","872","873"],"import React, {\r\n    useEffect,\r\n    useState,\r\n    useImperativeHandle,\r\n    useRef,\r\n    forwardRef,\r\n  } from \"react\";\r\n  import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n  import TextField from \"@material-ui/core/TextField\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import { useLocation } from \"react-router\";\r\n  \r\n  const RenderMultipleComponent = forwardRef((props, ref, isMultiple = true) => {\r\n    debugger;\r\n    const [value, setValue] = useState([]);\r\n    const refInput = useRef(null);\r\n    const location = useLocation();\r\n    //   alert(location.pathname);\r\n    let potentialParallelComponents = [];\r\n    const systemData = useSelector((state) => state.treeData.treeData);\r\n    const taskData = useSelector((state) => state.taskData.taskData);\r\n    const currentShip = useSelector((state) => state.taskData.currentShip);\r\n    const currentTaskName = useSelector((state) => state.taskData.currentTaskName);\r\n    const filteredData = taskData.tasks_data.filter(x => x.ship_name === currentShip && x.task_name === currentTaskName)\r\n    // console.log(taskData)\r\n    // debugger;\r\n    // const userSelection = useSelector(\r\n    //   (state) => state.userSelection.userSelection\r\n    // );\r\n    // const currentSelection = useSelector(\r\n    //   (state) => state.userSelection.currentSelection\r\n    // );\r\n    // const componentsData = useSelector(\r\n    //   (state) => state.userSelection.componentsData\r\n    // );\r\n    // const selectedEquipment = props.data.EquipmentName;\r\n    debugger;\r\n    const selectedEquipmentId = props.data.id;\r\n    \r\n    // potentialParallelComponents = systemData.filter(\r\n    //   (x) => x.name !== selectedEquipment\r\n    // );\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      // debugger;\r\n      setValue(newValue);\r\n    };\r\n  \r\n    // useEffect(() => {\r\n    //   // focus on the input\r\n    //   //setTimeout(() => refInput.current.focus());\r\n    //   console.log(potentialParallelComponents);\r\n    // }, []);\r\n  \r\n    /* Component Editor Lifecycle methods */\r\n    useImperativeHandle(ref, () => {\r\n      return {\r\n        // the final value to send to the grid, on completion of editing\r\n        getValue() {\r\n          debugger;\r\n          //console.log(value);\r\n          let valueStr = [];\r\n          let ids = [];\r\n          // if (location.pathname === \"/system_config/additional_info\") {\r\n          //   value.forEach((element) => {\r\n          //     valueStr = [...valueStr, element.name];\r\n          //   });\r\n          // } else\r\n          props.data.components = []\r\n          value.forEach((element) => {\r\n            debugger;\r\n            ids = [...ids, element.EquipmentId];\r\n            valueStr = [...valueStr, element.name];\r\n            props.data.components.push(element)\r\n          });\r\n          props.setParallelIds(ids);\r\n          // if (location.pathname === \"/system_config/failure_mode\") {\r\n          //   ids = [value.id];\r\n          //   valueStr = [value.name];\r\n          //   props.data[\"rEquipmentId\"] = ids[0];\r\n          // } else {\r\n            \r\n           \r\n          // }\r\n          return valueStr.toString();\r\n        },\r\n        isPopup() {\r\n          return true;\r\n        },\r\n        // Gets called once before editing starts, to give editor a chance to\r\n        // cancel the editing before it even starts.\r\n        isCancelBeforeStart() {\r\n          return false;\r\n        },\r\n  \r\n        // Gets called once when editing is finished (eg if Enter is pressed).\r\n        // If you return true, then the result of the edit will be ignored.\r\n        // isCancelAfterEnd() {\r\n        //     // our editor will reject any value greater than 1000\r\n        //     return value > 1000;\r\n        // }\r\n      };\r\n    });\r\n  \r\n    return (\r\n      // <input type=\"number\"\r\n      //        ref={refInput}\r\n      //        value={value}\r\n      //        onChange={event => setValue(event.target.value)}\r\n      //        style={{width: \"100%\"}}\r\n      // />\r\n      <Autocomplete\r\n        id={selectedEquipmentId}\r\n        options={filteredData[0].task_data}\r\n        //value={value}\r\n        multiple={props.isMultiple}\r\n        onChange={handleChange}\r\n        // groupBy={(option) => option.name}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            ref={refInput}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  });\r\n  export default RenderMultipleComponent;\r\n  ","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\TaskDashboard\\PaperTable.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\DashboardData.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\MissionSlider.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\EventCalendar.js",["874"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\ReliabilityChart.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Form\\SelectWithLimit.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\CDashboard\\CGraph.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\BarGraph.js",[],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Reliability Dashboard\\CreateProfile.js",["875"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Settings\\ChangePassword.js",["876"],"import React,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Paper,InputBase,Button,InputAdornment,IconButton} from '@material-ui/core'\r\nimport styles from './ChangePass.module.css'\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst InputStyles = makeStyles({\r\n    root: {\r\n        margin:'15px 0px 5px 0px',\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n        background: \"#ebebeb\",\r\n        borderRadius: \"5px\",\r\n        height: 40,\r\n        width: '70%',\r\n        boxShadow: \"2px 3px 5px -1px rgba(0,0,0,0.2)\",\r\n    },\r\n    label:{\r\n        fontWeight: 600\r\n    }\r\n  });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst BackStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background:'linear-gradient(210deg, rgba(41,41,113,0.85) 0%, rgba(4,142,231,0.85) 100%)'\r\n    }\r\n  }));\r\n\r\nconst PassModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const bgClasses= BackStyles();\r\n  \r\n  const InputClasses=InputStyles();\r\n\r\n  const[showPassword,setShowPassword]=useState(false);\r\n\r\n  const[password,setPassword]=useState('');\r\n\r\n  const[confirmPassword,setConfirmPassword]=useState('');\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };  \r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.passModal}\r\n        onClose={props.handlePassClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n          classes:bgClasses\r\n        }}\r\n      >\r\n        <Fade in={props.passModal}>\r\n        <Paper className={styles.PassPaper} elevation={5}>\r\n            <div>\r\n            <img src='/netra-logo.png' width={60} height={60}/>\r\n            <div className={styles.netra}>NETRA</div>\r\n            </div>\r\n            <div style={{textAlign:'center'}}>\r\n            <h5 style={{margin:0}}>Create a strong password</h5>\r\n            </div>\r\n            <InputBase \r\n            classes={InputClasses} \r\n            name='password' \r\n            id='password' \r\n            placeholder='Password' \r\n            type={showPassword ? 'text' : 'password'}\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            required/>\r\n            <InputBase \r\n            classes={InputClasses} \r\n            name='conf-password' \r\n            id='conf-password' \r\n            placeholder='Confirm Password' \r\n            type={showPassword ? 'text' : 'password'}\r\n            value={confirmPassword}\r\n            onChange={(e)=>setConfirmPassword(e.target.value)}\r\n            endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            required/>\r\n            Use 8 or more characters with a mix of letters,numbers & symbols\r\n            <Button variant='contained' style={{backgroundColor:'#1c4199',color:'white'}} >Save Password</Button>\r\n            \r\n            \r\n            \r\n        </Paper>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default PassModal;","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\importData\\importData.js",["877"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst ImportData = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const rows = props.childList.map((x) => {\r\n    return {\r\n      id: x.id,\r\n      ComponentName: x.name,\r\n      ScaleParameter: \"\",\r\n      ShapeParameter: \"\",\r\n    };\r\n  });\r\n  const ImportColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      minWidth={200}\r\n      checkboxSelection={true}\r\n      editable={false}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ScaleParameter\"\r\n      headerName=\"Scale Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ShapeParameter\"\r\n      headerName=\"Shape Parameter\"\r\n      minWidth={200}\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    debugger;\r\n    props.tableUpdate(allRows, \"import_replacable\");\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <Table\r\n        columnDefs={ImportColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rows}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportData;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\maintenanceData.js",["878","879"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nimport EquipmentName from \"./EquipmentName\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst MaintenanceData = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  let finalDataTableData = [];\r\n  const [rowState, setRows] = useState([]);\r\n  let selectedOptionId = \"\";\r\n  // const\r\n  const setIdToDropdownOption = (id) => {\r\n    selectedOptionId = id;\r\n  };\r\n  const MaintColumns = [\r\n    <AgGridColumn\r\n      field=\"LMU\"\r\n      headerName=\"Equipment Name\"\r\n      headerTooltip=\"Equipment Name\"\r\n      cellEditorFramework={EquipmentName}\r\n      minWidth={100}\r\n      editable={true}\r\n      // keyCreator={{ values: systemData.map((x) => x.id) }}\r\n      cellEditorParams={{ setId: setIdToDropdownOption }}\r\n      // cellEditorParams={{ values: systemData.map((x) => x.name) }}\r\n      checkboxSelection={true}\r\n      // cellEditor=\"agSelectCellEditor\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"EventType\"\r\n      headerName=\"EventType\"\r\n      headerTooltip=\"EventType\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Preventive\", \"Breakdown\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Date\"\r\n      headerName=\"Date\"\r\n      headerTooltip=\"Date\"\r\n      width={200}\r\n      cellEditor=\"datePicker\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaintenanceType\"\r\n      headerName=\"Maintenance Type\"\r\n      headerTooltip=\"Maintenance Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Replaced\", \"Repaired\"] }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"ReplaceType\"\r\n      headerName=\"Replace Component Type\"\r\n      headerTooltip=\"Replace Component Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"New\", \"Refurbished\", \"Cannibalised\", \"Duplicate\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={(params) => {\r\n        return params.data.ReplaceType === \"NA\" ? false : true;\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"CannibalisedAge\"\r\n      headerName=\"Cannibalised Age\"\r\n      headerTooltip=\"Cannibalised Age\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={(params) => {\r\n        return params.data.CannibalisedAge === \"NA\" ? false : true;\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaintenanceDuration\"\r\n      headerName=\"Maintenance Duration\"\r\n      headerTooltip=\"Maintenance Duration\"\r\n      type=\"nmber\"\r\n      minWidt={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FM\"\r\n      headerName=\"Failure Mode\"\r\n      headerTooltip=\"Failure Mode\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Failure Mode 1\", \"Failure Mode 2\", \"Failure Mode 3\"],\r\n      }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Remark\"\r\n      headerName=\"Remark\"\r\n      headerTooltip=\"Remark\"\r\n      cellEditor=\"agLargeTextCellEditor\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const AddRow = () => {\r\n    let newRowData = [\r\n      {\r\n        LMU: systemData[0]?.name,\r\n        component_id: systemData[0]?.id,\r\n        EventType: \"Preventive\",\r\n        Date: \"10/08/2021\",\r\n        MaintainanceType: \"Replaced\",\r\n        ReplaceType: \"New\",\r\n        CannibalisedAge: \"NA\",\r\n        MaintenanceDuration: \"0\",\r\n        FM: \"Failure Mode 1\",\r\n        Remark: \"Enter remarks here...\",\r\n        id: uuid(),\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: newRowData,\r\n    });\r\n    onGridAddDeleteSupport();\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    onGridAddDeleteSupport();\r\n  };\r\n  const onGridAddDeleteSupport = () => {\r\n    let allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    tableUpdate(allRowData, undefined);\r\n  };\r\n  const tableUpdate = (data, id) => {\r\n    // alert(id);\r\n    // alert(selectedOptionId);\r\n    finalDataTableData = data;\r\n    if (id) {\r\n      finalDataTableData.filter((x) => x.id === id)[0][\"component_id\"] =\r\n        selectedOptionId;\r\n    }\r\n    props.tableUpdate(finalDataTableData, \"maintData\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columnDefs={MaintColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        // selectedOptionId={selectedOptionId}\r\n        tableUpdate={tableUpdate}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceData;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\HEPData.js",["880"],"import { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\r\n\r\nexport const ELrowData = [\r\n  {\r\n    equipment: \"Fresh Water Cooling\",\r\n    Maintenancepolicy: \"Preventive\",\r\n    Criticality: \"Low\",\r\n    ATNominal: \"1\",\r\n    \"Less than required\": \"2\",\r\n    \"Higher than required\": \"3\",\r\n    \"Very High than required\": \"4\",\r\n    Nominal: \"5\",\r\n    Low: \"6\",\r\n    Extreme: \"7\",\r\n  },\r\n];\r\nexport const ELcolumnDefs = [\r\n  {\r\n    field: \"equipment\",\r\n    headerName: \"Equipment\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Maintenancepolicy\",\r\n    headerName: \"Maintenance Policy\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"Qualitative\", \"Quantitative\"] },\r\n    minWidth: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"Criticality\",\r\n    headerName: \"Criticality\",\r\n    type: \"number\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    headerName: \"PSF-Available Time\",\r\n    children: [\r\n      { field: \"ATNominal\", headerName: \"Nominal\", editable: true },\r\n      { field: \"Less than required\", editable: true },\r\n      { field: \"Higher than required\", editable: true },\r\n      { field: \"Very High than required\", editable: true },\r\n    ],\r\n  },\r\n  {\r\n    headerName: \"PSF-Stress\",\r\n    children: [\r\n      { field: \"Nominal\", editable: true },\r\n      { field: \"Low\", editable: true },\r\n      { field: \"Extreme\", editable: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const CLcolumnDefs = [\r\n  {\r\n    field: \"LMU\",\r\n    headerName: \"Lowest Maintainable Unit (LMU)\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"shipmode\",\r\n    headerName: \"Ship Mode\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfcomplexity\",\r\n    headerName: \"PSF-Complexity\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfergonomics\",\r\n    headerName: \"PSF-Ergonomics\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"psfprocedure\",\r\n    headerName: \"PSF-Procedure Available\",\r\n    cellEditor: \"agSelectCellEditor\",\r\n    cellEditorParams: { values: [\"1\", \"2\"] },\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n];\r\nexport const CLrowData = [\r\n  {\r\n    LMU: \"Water Temperature Gauge\",\r\n    shipmode: \"Docked\",\r\n    psfcomplexity: \"\",\r\n    psfergonomics: \"\",\r\n    psfprocedure: \"\",\r\n  },\r\n];\r\n\r\nexport const SLMcolumnDefs = [\r\n  {\r\n    field: \"component\",\r\n    headerName: \"Component\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"refurbished\",\r\n    headerName: \"Refurbished\",\r\n    minWidth: 100,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"cannibalised\",\r\n    headerName: \"Cannibalised\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"nonOEM\",\r\n    headerName: \"Non-OEM/Duplicate\",\r\n    minWidth: 80,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nexport const SLMrowData = [\r\n  {\r\n    component: \"DA\",\r\n    refurbished: \"1\",\r\n    cannibalised: \"1\",\r\n    nonOEM: \"1\",\r\n  },\r\n];\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\historicalData.js",["881","882"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\parameterEstimation\\parameterEstimation.js",["883","884"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\ComponentLevel\\componentLevel.js",["885","886","887","888"],"import { Fragment } from \"react\";\r\nimport styles from \"../HEP.module.css\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { CLrowData } from \"../HEPData\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst HEPComponentLevel = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.lmu === 1);\r\n  const phaseData = useSelector((state) => state.phase.phase);\r\n  const mData = [\"Preventive\", \"Breakdown\"];\r\n  const rowData = systemData.map((e, i) => {\r\n    return {\r\n      ComponentId:e.id,\r\n      LMU: e.name,\r\n      psfcomplexity: \"Nominal\",\r\n      psfergonomics: \"Nominal\",\r\n      psfprocedure: \"Available\",\r\n      id:uuid(),\r\n    };\r\n  });\r\n  debugger;\r\n  const CLcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"LMU\"\r\n      headerName=\"Lowest Maintainable Unit (LMU)\"\r\n      minWidth={80}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfcomplexity\"\r\n      headerName=\"PSF-Complexity\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Nominal\", \"Moderately Complex\", \"Highly Complex\"],\r\n      }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfergonomics\"\r\n      headerName=\"PSF-Ergonomics\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Nominal\", \"Good\", \"Poor\", \"Misleading\"] }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"psfprocedure\"\r\n      headerName=\"PSF-Procedure Available\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: [\"Available\", \"Available But Poor\", \"Not Available\"],\r\n      }}\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={CLcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HEPComponentLevel;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\CommanHEP\\CommanHEP.js",["889"],"import { FormControl } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Radio } from \"@material-ui/core\";\r\nimport { FormControlLabel } from \"@material-ui/core\";\r\nimport { RadioGroup } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport styles from \"../HEP.module.css\";\r\n\r\nconst radioLabel = makeStyles({\r\n  label: {\r\n    minWidth: 80,\r\n    border: \"rgb(116, 114, 114) 1px solid\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    background: \"#ebebeb\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  labelPlacementStart: {\r\n    marginLeft: 1,\r\n  },\r\n});\r\nconst radioStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    border: \"1px solid black\",\r\n    borderRadius: 5,\r\n    width: 24,\r\n    height: 22,\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    border: \"1px solid black\",\r\n    borderRadius: 5,\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 24,\r\n      height: 22,\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction StyledRadio(props) {\r\n  const radioClasses = radioStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={radioClasses.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={radioClasses.checkedIcon} />}\r\n      icon={<span className={radioClasses.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst CHEP = ({experience,workCulture,fitness,handleExp,handleWC,handleFit}) => {\r\n  const radioLabelStyle = radioLabel();\r\n\r\n  return (\r\n    <div className={styles.midSection}>\r\n      \r\n        <div className={styles.sectionHeader}>\r\n          External Factor/PSF-Experience\r\n        </div>\r\n      <div className={styles.Qcard}>\r\n        <div>\r\n          <div className={styles.QcardHeader}>\r\n            What percentage of time does a maintenance personnel with following\r\n            experience perform the task?\r\n          </div>\r\n          <div className=\"Qcard-content\">\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"expnominal\">Nominal</label>\r\n              <input className='experience' type=\"number\" id=\"expnominal\" value={experience.nominal} onChange={(e)=>handleExp(e,'nominal')}></input>\r\n            </div>\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"explow\">Low</label>\r\n              <input className='experience' type=\"number\" id=\"explow\" value={experience.low} onChange={(e)=>handleExp(e,'low')}></input>\r\n            </div>\r\n            <div className={styles.cardItem}>\r\n              <label className='experience' htmlFor=\"exphigh\">High</label>\r\n              <input className='experience' type=\"number\" id=\"exphigh\" value={experience.high} onChange={(e)=>handleExp(e,'high')}></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sectionHeader}>\r\n        External Factor/PSF-Work Culture\r\n      </div>\r\n      <div className={styles.Qcard}>\r\n        <div className={styles.QcardHeader}>\r\n          How do you rate the work culture of your organisation?\r\n        </div>\r\n        <div className=\"Qcard-content\">\r\n          <FormControl>\r\n            <RadioGroup aria-label=\"work-culture\" value={workCulture} onChange={handleWC} name=\"psf-work-culture\">\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"nominal\"\r\n                control={<StyledRadio />}\r\n                label=\"Nominal\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"low\"\r\n                control={<StyledRadio />}\r\n                label=\"Low\"\r\n                labelPlacement=\"start\"\r\n              />\r\n              <FormControlLabel\r\n                classes={radioLabelStyle}\r\n                value=\"high\"\r\n                control={<StyledRadio />}\r\n                label=\"High\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sectionHeader}>\r\n        External Factor/PSF-Fitness for Duty\r\n      </div>\r\n      <div className={styles.Qcard}>\r\n        <div className={styles.QcardHeader}>\r\n          What percentage of time does a maintenance personnel with following\r\n          fitness level perform the task?\r\n        </div>\r\n        <div className=\"Qcard-content\">\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fitnominal\">Nominal</label>\r\n            <input className='fitness' type=\"number\" id=\"fitnominal\" value={fitness.nominal} onChange={(e)=>handleFit(e,'nominal')}></input>\r\n          </div>\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fitlow\">Low</label>\r\n            <input className='fitness' type=\"number\" id=\"fitlow\" value={fitness.low} onChange={(e)=>handleFit(e,'low')}></input>\r\n          </div>\r\n          <div className={styles.cardItem}>\r\n            <label className='fitness' htmlFor=\"fithigh\">High</label>\r\n            <input className='fitness' type=\"number\" id=\"fithigh\" value={fitness.high} onChange={(e)=>handleFit(e,'high')}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CHEP;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\operationalData\\operationalData.js",["890","891","892","893","894"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\LifeMultiplier\\LifeMultiplier.js",["895","896","897"],"import { Fragment } from \"react\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport styles from \"../HEP.module.css\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst HEPLifeMultiplier = (props) => {\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const colDefs = [\r\n    <AgGridColumn\r\n      field=\"component\"\r\n      headerName=\"Component\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"refurbished\"\r\n      headerName=\"Refurbished\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"cannibalised\"\r\n      headerName=\"Cannibalised\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"nonOEM\"\r\n      headerName=\"Non-OEM/Duplicate\"\r\n      minWidth={80}\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const rowData = systemData.map((ele, index) => {\r\n    return {\r\n      id:uuid(),\r\n      ComponentId:ele.id,\r\n      component: ele.name,\r\n      lmu:ele.lmu,\r\n      refurbished: 1,\r\n      cannibalised: 1,\r\n      nonOEM: 1,\r\n    };\r\n  });\r\n\r\n  const getLmuRowStyle = params => {\r\n    //console.log(params.node);\r\n    if (params.node.data.lmu==1) {\r\n      return { background: '#d8f0f4' };\r\n    }\r\n  };\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {/* <div className={styles.flex2}>\r\n        <div>\r\n          <span style={{ fontSize: \"0.7rem\" }}>\r\n            <LensIcon style={{ color: \"#d8f0f4\" }} />\r\n            LMU-Lowest Maintainable Unit\r\n          </span>\r\n        </div>\r\n      </div> */}\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={colDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n          getRowStyle={getLmuRowStyle}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HEPLifeMultiplier;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\ui\\Table\\Table2.js",["898"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\HEP\\EquipmentLevel\\EquipmentLevel.js",["899","900","901","902"],"import { Fragment } from \"react\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport { ELcolumnDefs, ELrowData } from \"../HEPData\";\r\nimport styles from \"../HEP.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst EquipmentLevelHEP = (props) => {\r\n  let systemData = useSelector((state) => state.treeData.treeData);\r\n  systemData = systemData.filter((x) => x.parent === null);\r\n  const phaseData = useSelector((state) => state.phase.phase);\r\n  const mData = [\"Preventive\", \"Breakdown\"];\r\n  let rowData = [];\r\n  const rData = systemData.map((e, i) => {\r\n    phaseData.map((p_e, p_i) => {\r\n      mData.map((mE, mI) => {\r\n        if (p_e.MType === \"Qualitative\") {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.Status,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        } else {\r\n          rowData.push({\r\n            equipment: e.name,\r\n            phase: p_e.PhaseRange,\r\n            Maintenancepolicy: mE,\r\n            ATNominal: 100,\r\n            Lessthanrequired: 0,\r\n            Higherthanrequired: 0,\r\n            vhtr: 0,\r\n            Nominal: 100,\r\n            Low: 0,\r\n            Extreme: 0,\r\n            id:uuid()\r\n          });\r\n          return null;\r\n        }\r\n      });\r\n      return null;\r\n    });\r\n\r\n    return null;\r\n  });\r\n  const ELcolumnDefs = [\r\n    <AgGridColumn field=\"equipment\" headerName=\"Equipment\" minWidth={80} />,\r\n    <AgGridColumn field=\"phase\" headerName=\"Phase Name\" minWidth={80} />,\r\n    <AgGridColumn\r\n      field=\"Maintenancepolicy\"\r\n      headerName=\"Maintenance Policy\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Preventive\", \"Breakdown\"] }}\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn headerName=\"PSF-Available Time\">\r\n      <AgGridColumn\r\n        field=\"ATNominal\"\r\n        headerName=\"Nominal\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Lessthanrequired\"\r\n        headerName=\"Less Than Required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"Higherthanrequired\"\r\n        headerName=\"Higher than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n      <AgGridColumn\r\n        field=\"vhtr\"\r\n        headerName=\"Very High than required\"\r\n        editable={true}\r\n      ></AgGridColumn>\r\n    </AgGridColumn>,\r\n    <AgGridColumn headerName=\"PSF-Stress\">\r\n      <AgGridColumn field=\"Nominal\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Low\" editable={true}></AgGridColumn>\r\n      <AgGridColumn field=\"Extreme\" editable={true}></AgGridColumn>\r\n    </AgGridColumn>,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={ELcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default EquipmentLevelHEP;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\DCMultiplier\\dcMultiplier.js",["903","904","905","906"],"import Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst DCMultiplier = (props) => {\r\n  const phase = useSelector((state) => state.phase.phase);\r\n  if (phase.length === 0) {\r\n    alert(\"Please add Phases first\");\r\n  }\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const rootSystemData = systemData.filter((x) => x.parent === null);\r\n  let distinctPhaseName = phase.map((element, index) => {\r\n    return element.PhaseName;\r\n  });\r\n  distinctPhaseName = [...new Set(distinctPhaseName)];\r\n  let childColHeaders = [];\r\n  const phaseArr = distinctPhaseName.map((ele, index) => {\r\n    const childArr = phase.filter((x) => x.PhaseName === ele);\r\n    const childAgGrid = childArr.map((ele1, index1) => {\r\n      childColHeaders.push(ele1.PhaseRange + \" \" + ele1.id);\r\n      if (ele1.MeasurementType === \"Quantitative\") {\r\n        return (\r\n          <AgGridColumn\r\n            field={ele1.PhaseRange + \" \" + ele1.id}\r\n            headerName={ele1.PhaseRange}\r\n            editable={true}\r\n          />\r\n        );\r\n      } else {\r\n        return <AgGridColumn field={ele1.Status} editable={true} />;\r\n      }\r\n    });\r\n    return (\r\n      <AgGridColumn field={ele} headerName={ele}>\r\n        {childAgGrid}\r\n      </AgGridColumn>\r\n    );\r\n  });\r\n  // childColHeaders = [...new Set(childColHeaders)];\r\n  const DCMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Component\"\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    ...phaseArr,\r\n  ];\r\n  const rowData = systemData\r\n    .filter((x) => x.parentId === null)\r\n    .map((element, index) => {\r\n      let d = {};\r\n      const phaseD = childColHeaders.map((ele, index) => {\r\n        d[ele] = 1;\r\n        return null;\r\n      });\r\n      return {\r\n        Component: element.name,\r\n        component_id: element.id,\r\n        ...d,\r\n      };\r\n    });\r\n  debugger;\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <div className={styles.phaseTable}>\r\n      <Table\r\n        columnDefs={DCMcolumnDefs}\r\n        rowData={rowData}\r\n        tableUpdate={updateFinalRowData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DCMultiplier;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Add\\AddPhase.js",["907","908","909"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport CustomTextInput from \"../../../ui/Form/CustomTextInput\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { MProwData } from \"../PhasetableData\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nconst PhaseStyles = makeStyles({\r\n  formControl: {\r\n    // margin: '2rem',\r\n    minWidth: \"20%\",\r\n  },\r\n  Submit: {\r\n    // margin: '2rem',\r\n    height: 40,\r\n  },\r\n  Pbuttons: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\nconst AddPhase = (props) => {\r\n  const PhaseClasses = PhaseStyles();\r\n  // const [RangeInput, setRangeInput] = useState([]);\r\n\r\n  // const onAddNewRange = () => {\r\n  //   setRangeInput((prevstate) => {\r\n  //     // const stateLen = prevstate.length;\r\n  //     // // return [...prevstate, stateLen + 1];\r\n  //     return [...prevstate, { Status: \"\", UBound: \"\", LBound: \"\", Desc: \"\" }];\r\n  //   });\r\n  //   console.log(RangeInput);\r\n  // };\r\n  // const onDeleteRange = (index) => {\r\n  //   debugger;\r\n  //   const rangeCopy = [...RangeInput];\r\n  //   rangeCopy.splice(index, 1);\r\n  //   setRangeInput(rangeCopy);\r\n  // };\r\n  // const handleRangeChange = (index, e) => {\r\n  //   let newArr = [...RangeInput];\r\n  //   newArr[index][e.target.name] = e.target.value;\r\n  //   setRangeInput(newArr);\r\n  // };\r\n\r\n  return (\r\n    <div className={styles.addForm}>\r\n      <div>\r\n        <h4>\r\n          Please add only the Medium level phase-range, the system will\r\n          automatically calculate the other two.\r\n        </h4>\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"4rem\" }}>\r\n        <CustomTextInput\r\n          label=\"Parameter Name\"\r\n          id=\"parameter-name\"\r\n          className={PhaseClasses.formControl}\r\n          value={props.paramName}\r\n          onChange={props.handleParamNameChange}\r\n        ></CustomTextInput>\r\n\r\n        <CustomSelect\r\n          className={PhaseClasses.formControl}\r\n          id=\"measurement-type\"\r\n          label=\"Measurement Type\"\r\n          value={props.MType}\r\n          onChange={props.handleMTypeChange}\r\n          fields={[\"Quantitative\", \"Qualitative\"]}\r\n        />\r\n\r\n        <CustomSelect\r\n          className={PhaseClasses.formControl}\r\n          id=\"unit\"\r\n          label=\"Unit\"\r\n          value={props.Unit}\r\n          onChange={props.handleUnitChange}\r\n          fields={[\"Km/hr\", \"M/hr\"]}\r\n        ></CustomSelect>\r\n        {/* <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={PhaseClasses.Submit}\r\n          onClick={() => addRow()}\r\n        >\r\n          Submit\r\n        </Button> */}\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"3rem\" }}>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          {props.MType} Measurement Type - Range\r\n        </Button>\r\n      </div>\r\n      <div className={styles.flex} style={{ marginTop: \"3rem\" }}>\r\n        {props.MType === \"Qualitative\" ? (\r\n          <>\r\n            <CustomTextInput\r\n              style={{ minWidth: \"45%\" }}\r\n              label=\"Status\"\r\n              id=\"status\"\r\n              className={PhaseClasses.formControl}\r\n              value={props.Status}\r\n              onChange={props.handleStatusChange}\r\n            ></CustomTextInput>\r\n            <CustomTextInput\r\n              style={{ minWidth: \"45%\" }}\r\n              label=\"Description\"\r\n              id=\"description\"\r\n              className={PhaseClasses.formControl}\r\n              value={props.desc}\r\n              onChange={props.handleDescChange}\r\n            ></CustomTextInput>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid container>\r\n              <Grid container item spacing={4}>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Phase Range\"\r\n                    id=\"phaserange\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.PRange}\r\n                    onChange={props.handlePRangeChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Lower Bound\"\r\n                    id=\"lowerbound\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.LBound}\r\n                    onChange={props.handleLBoundChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Upper Bound\"\r\n                    id=\"upperbound\"\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.UBound}\r\n                    onChange={props.handleUBoundChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5} style={{ marginTop: \"10px\" }}>\r\n                  <CustomTextInput\r\n                    label=\"Description\"\r\n                    id=\"description\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                    className={PhaseClasses.formControl}\r\n                    value={props.desc}\r\n                    onChange={props.handleDescChange}\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={1} style={{ marginTop: \"35px\" }}>\r\n                  <DeleteIcon\r\n                    fontSize=\"medium\"\r\n                    onClick={() => {\r\n                      onDeleteRange(id);\r\n                    }}\r\n                  />\r\n                </Grid> */}\r\n              </Grid>\r\n            </Grid>\r\n            {/* {props.MType === \"Quantitative\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => onAddNewRange()}\r\n              >\r\n                Add\r\n              </Button>\r\n            )} */}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddPhase;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\LifeMultiplier\\LifeMultiplier.js",["910","911","912","913","914","915","916","917"],"import { Fragment } from \"react\";\r\nimport CustomSelect from \"../../../ui/Form/CustomSelect\";\r\nimport Table from \"../../../ui/Table/Table\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport LensIcon from \"@material-ui/icons/Lens\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { LMrowData, components } from \"../PhasetableData\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst PhaseStyles = makeStyles({\r\n  formControl: {\r\n    minWidth: \"20%\",\r\n  },\r\n  Submit: {\r\n    height: 40,\r\n  },\r\n  Pbuttons: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\nconst LifeMultiplier = (props) => {\r\n  const PhaseClasses = PhaseStyles();\r\n  const phase = useSelector((state) => state.phase.phase);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  let distinctPhaseName = phase.map((element, index) => {\r\n    return element.PhaseName;\r\n  });\r\n  distinctPhaseName = [...new Set(distinctPhaseName)];\r\n  let childColHeaders = [];\r\n  const phaseArr = distinctPhaseName.map((ele, index) => {\r\n    const childArr = phase.filter((x) => x.PhaseName === ele);\r\n    const childAgGrid = childArr.map((ele1, index1) => {\r\n      childColHeaders.push(ele1.PhaseRange + \" \" + ele1.id);\r\n      if (ele1.MeasurementType === \"Quantitative\") {\r\n        return (\r\n          <AgGridColumn\r\n            field={ele1.PhaseRange + \" \" + ele1.id}\r\n            headerName={ele1.PhaseRange}\r\n            index={ele1.id}\r\n            editable={true}\r\n          />\r\n        );\r\n      } else {\r\n        return <AgGridColumn field={ele1.Status} />;\r\n      }\r\n    });\r\n    return (\r\n      <AgGridColumn field={ele} headerName={ele}>\r\n        {childAgGrid}\r\n      </AgGridColumn>\r\n    );\r\n  });\r\n  const LMcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"Component\"\r\n      headerName=\"Component\"\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    ...phaseArr,\r\n  ];\r\n  const rowData = systemData.map((element, index) => {\r\n    let d = {};\r\n    const phaseD = childColHeaders.map((ele, index) => {\r\n      d[ele] = 1;\r\n      return null;\r\n    });\r\n    debugger;\r\n    return {\r\n      Component: element.name,\r\n      component_id: element.id,\r\n      ...d,\r\n    };\r\n  });\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {/* <div className={styles.flex2}>\r\n        <CustomSelect\r\n          style={{ minWidth: \"45%\" }}\r\n          className={PhaseClasses.formControl}\r\n          id=\"parent-component\"\r\n          label=\"Parent Component\"\r\n          fields={components}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={PhaseClasses.Submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <span style={{ fontSize: \"0.7rem\" }}>\r\n          <LensIcon style={{ color: \"#d8f0f4\" }} />\r\n          LMU-Lowest Maintainable Unit\r\n        </span>\r\n      </div> */}\r\n      <div className={styles.LMphaseTable}>\r\n        <Table\r\n          columnDefs={LMcolumnDefs}\r\n          rowData={rowData}\r\n          tableUpdate={updateFinalRowData}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LifeMultiplier;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Phase_Manager\\Home\\Home.js",["918"],"import { AgGridColumn } from \"ag-grid-react\";\r\nimport { Fragment } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"../Phasemanager.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst PhaseManagerHome = (props) => {\r\n  const phases = useSelector((state) => state.phase.phase);\r\n\r\n  const pRow = phases.map((x) => {\r\n    return {\r\n      id: x.id,\r\n      Description: x.Description,\r\n      LowerBound: x.LowerBound,\r\n      MeasurementType: x.MeasurementType,\r\n      PhaseName: x.PhaseName,\r\n      PhaseRange: x.PhaseRange,\r\n      Status: x.Status,\r\n      Unit: x.Unit,\r\n      UpperBound: x.UpperBound,\r\n    };\r\n  });\r\n  // const pRow = [\r\n  //   {\r\n  //     Description: \"Description\",\r\n  //     LowerBound: 0,\r\n  //     MeasurementType: \"Quantitative\",\r\n  //     PhaseName: \"Load\",\r\n  //     PhaseRange: \"L1\",\r\n  //     Status: \"\",\r\n  //     Unit: \"Unit\",\r\n  //     UpperBound: 50,\r\n  //   },\r\n  //   {\r\n  //     Description: \"Description\",\r\n  //     LowerBound: 51,\r\n  //     MeasurementType: \"Quantitative\",\r\n  //     PhaseName: \"Load\",\r\n  //     PhaseRange: \"L2\",\r\n  //     Status: \"\",\r\n  //     Unit: \"Unit\",\r\n  //     UpperBound: 75,\r\n  //   },\r\n  // ];\r\n  const MPcolumnDefs = [\r\n    <AgGridColumn\r\n      field=\"PhaseName\"\r\n      headerName=\"Phase Parameter name\"\r\n      headerTooltip=\"Phase Parameter name\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MeasurementType\"\r\n      headerName=\"Measurement Type\"\r\n      headerTooltip=\"Measurement Type\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Qualitative\", \"Quantitative\"] }}\r\n      minWidth={140}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"LowerBound\"\r\n      headerName=\"Lower Bound\"\r\n      headerTooltip=\"Lower Bound\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"UpperBound\"\r\n      headerName=\"Upper Bound\"\r\n      headerTooltip=\"Upper Bound\"\r\n      type=\"number\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Status\"\r\n    //   headerName=\"Status\"\r\n    //   minWidth={100}\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"PhaseRange\"\r\n      headerName=\"PhaseRange\"\r\n      headerTooltip=\"Phase Range\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Unit\"\r\n      headerName=\"Unit\"\r\n      headerTooltip=\"Unit\"\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{ values: [\"Km/hr\", \"M/hr\"] }}\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Description\"\r\n      headerName=\"Description\"\r\n      headerTooltip=\"Description\"\r\n      minWidth={100}\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.phaseTable}>\r\n        <Table\r\n          columnDefs={MPcolumnDefs}\r\n          rowData={pRow}\r\n          tableUpdate={updateFinalRowData}\r\n          setGrid={props.setGridApi}\r\n          gridApi={props.gridApi}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default PhaseManagerHome;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\maintenanceData\\EquipmentName.js",["919","920","921"],"import React, {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  useRef,\r\n  forwardRef,\r\n} from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SystemConfiguration from \"../../systen_configuration/SystemConfiguration\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst EquipmentName = forwardRef((props, ref) => {\r\n  const [value, setValue] = useState([]);\r\n  const refInput = useRef(null);\r\n  const systemData = useSelector((state) => state.treeData.treeData);\r\n  const location = useLocation();\r\n  const handleChange = (event, newValue) => {\r\n    debugger;\r\n    // alert(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     // focus on the input\r\n  //     //setTimeout(() => refInput.current.focus());\r\n  //     console.log(systemData)\r\n  // }, []);\r\n\r\n  /* Component Editor Lifecycle methods */\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      // the final value to send to the grid, on completion of editing\r\n      getValue() {\r\n        //console.log(value);\r\n        const path = location.pathname;\r\n        if (path === \"/data_manager/maintenance_data\") {\r\n          props.setId(value.id);\r\n        }\r\n        return value.name;\r\n      },\r\n      isPopup() {\r\n        return true;\r\n      },\r\n      // Gets called once before editing starts, to give editor a chance to\r\n      // cancel the editing before it even starts.\r\n      isCancelBeforeStart() {\r\n        return false;\r\n      },\r\n\r\n      // Gets called once when editing is finished (eg if Enter is pressed).\r\n      // If you return true, then the result of the edit will be ignored.\r\n      // isCancelAfterEnd() {\r\n      //     // our editor will reject any value greater than 1000\r\n      //     return value > 1000;\r\n      // }\r\n    };\r\n  });\r\n\r\n  return (\r\n    // <input type=\"number\"\r\n    //        ref={refInput}\r\n    //        value={value}\r\n    //        onChange={event => setValue(event.target.value)}\r\n    //        style={{width: \"100%\"}}\r\n    // />\r\n    <Autocomplete\r\n      options={systemData}\r\n      //value={value}\r\n      onChange={handleChange}\r\n      groupBy={(option) => option.parentName}\r\n      getOptionLabel={(option) => option.name}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          ref={refInput}\r\n          label=\"Select Equipment\"\r\n          variant=\"outlined\"\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\nexport default EquipmentName;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\probabilityFailure.js",["922","923"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(40),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ProbabilityFailure(props) {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      Time: \"120\",\r\n      FailureProbability: \"10\",\r\n    },\r\n  ]);\r\n\r\n  const PFColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      minWidth={100}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Time\"\r\n      headerName=\"Time (T<) hrs\"\r\n      editable={true}\r\n      type=\"number\"\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FailureProbability\"\r\n      headerName=\"Failure Probability\"\r\n      type=\"number\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"prob\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        Time: \"120\",\r\n        FailureProbability: \"10\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          Probabilty of Failure\r\n        </Paper>\r\n      </div>\r\n      <Table\r\n        columnDefs={PFColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProbabilityFailure;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\nprd.js",["924","925","926"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(0),\r\n      // width:\r\n      width: \"50%\",\r\n      height: theme.spacing(5),\r\n      // background: \"#048ee7\",\r\n      color: \"black\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      // justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NPRD = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      FailureRate: \"2\",\r\n      Beta: \"2\",\r\n    },\r\n  ]);\r\n\r\n  const NPRDColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      minWidth={100}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"FailureRate\"\r\n      headerName=\"Failure Rate\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"Beta\"\r\n      headerName=\"β - Shape Parameter\"\r\n      type=\"nmber\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"nprd\");\r\n  };\r\n\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        FailureRate: \"2\",\r\n        Beta: \"2\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <h5>\r\n          *If the beta of the component is not known, use the following\r\n          information: <br />\r\n          1. If Failure of the component is observed in narrow time window use\r\n          beta(β) = 2.5 <br />\r\n          2. If Failure of the component is observed in scattered time window\r\n          use beta(β) = 1.5\r\n        </h5>\r\n      </div>\r\n      <Table\r\n        columnDefs={NPRDColumns}\r\n        rowData={rowState}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NPRD;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\expert.js",["927","928"],"import React, { useState } from \"react\";\r\nimport Table from \"../../../ui/Table/DataManagerTable\";\r\nimport { AgGridColumn } from \"ag-grid-react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../DataManager.module.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(30),\r\n      height: theme.spacing(5),\r\n      background: \"#048ee7\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Expert = (props) => {\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const classes = useStyles();\r\n  const rows = props.childList.map((x) => {\r\n    return { name: x.name, id: x.id };\r\n  });\r\n  const [rowState, setRows] = useState([\r\n    {\r\n      id: rows[0].id,\r\n      ComponentName: rows[0].name,\r\n      MostLikely: \"\",\r\n      MaxLife: \"\",\r\n      MinLife: \"\",\r\n      componentFailure: \"\",\r\n      time_wo_failure: \"\",\r\n    },\r\n  ]);\r\n\r\n  const ExpertColumns = [\r\n    <AgGridColumn\r\n      field=\"ComponentName\"\r\n      headerName=\"Component Name\"\r\n      editable={true}\r\n      width={200}\r\n      checkboxSelection={true}\r\n      cellEditor=\"agSelectCellEditor\"\r\n      cellEditorParams={{\r\n        values: rows.map((x) => x.name),\r\n      }}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MostLikely\"\r\n      headerName=\"Most Likely Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MaxLife\"\r\n      headerName=\"Maximum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"MinLife\"\r\n      headerName=\"Minimum Life\"\r\n      width={150}\r\n      editable={true}\r\n    />,\r\n    // <AgGridColumn\r\n    //   field=\"Replacements\"\r\n    //   headerName=\"No. of Replacements (Acknowledged by Expert)\"\r\n    //   editable={true}\r\n    // />,\r\n    <AgGridColumn\r\n      field=\"componentFailure\"\r\n      headerName=\"Number of Component seen withour Failure\"\r\n      editable={true}\r\n    />,\r\n    <AgGridColumn\r\n      field=\"time_wo_failure\"\r\n      headerName=\"Total time without Failure\"\r\n      editable={true}\r\n    />,\r\n  ];\r\n  const updateFinalRowData = (allRows) => {\r\n    props.tableUpdate(allRows, \"expert\");\r\n  };\r\n  const AddRow = () => {\r\n    const defaultRow = [\r\n      {\r\n        id: rows[0].id,\r\n        ComponentName: rows[0].name,\r\n        MostLikely: \"\",\r\n        MaxLife: \"\",\r\n        MinLife: \"\",\r\n        componentFailure: \"\",\r\n        time_wo_failure: \"\",\r\n      },\r\n    ];\r\n    gridApi.applyTransaction({\r\n      add: defaultRow,\r\n    });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  const deleteRows = () => {\r\n    const selectedRows = gridApi.getSelectedRows();\r\n    gridApi.applyTransaction({ remove: selectedRows });\r\n    const allRowData = [];\r\n    gridApi.forEachNode((node) => allRowData.push(node.data));\r\n    updateFinalRowData(allRowData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper elevation={3} variant=\"outlined\">\r\n          Expert Judgement\r\n        </Paper>\r\n      </div>\r\n      <Table\r\n        columnDefs={ExpertColumns}\r\n        setGrid={setGridApi}\r\n        gridApi={gridApi}\r\n        rowData={rowState}\r\n        tableUpdate={updateFinalRowData}\r\n      ></Table>\r\n      <div className={styles.tableFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => AddRow()}\r\n        >\r\n          Add Row\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DeleteIcon />}\r\n          color=\"secondary\"\r\n          onClick={() => deleteRows()}\r\n        >\r\n          Delete Rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expert;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oem.js",["929","930","931","932"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\failureDataPoint.js",["933","934"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\oemExpert.js",["935","936","937"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\historicalData\\IntervalData.js",["938"],"E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\selectEquipment.js",["939","940","941"],"import React, { useEffect, useState } from \"react\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport MultiSelect from \"./MultiSelect\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nfunction SelectEquipment(props) {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const list = props.list;\r\n\r\n  const handleClearOptions = () => setSelectedOptions([]);\r\n  return (\r\n    <MultiSelect\r\n      items={list}\r\n      getOptionLabel={(option) => `${option.name}`}\r\n      // getOptionDisabled={option => option.name === \"foo\"}\r\n      selectedValues={selectedOptions}\r\n      label=\"Select Equipment\"\r\n      // selectAllLabel=\"Select all\"\r\n      onUpdateSelectedEquipmentList={props.onUpdateSelectedEquipmentList}\r\n      onToggleOption={(selectedOptions) => setSelectedOptions(selectedOptions)}\r\n      onClearOptions={handleClearOptions}\r\n      // onSelectAll={(isSelected) => {\r\n      //   if (isSelected) {\r\n      //     setSelectedOptions(list);\r\n      //     props.onUpdateSelectedEquipmentList(list);\r\n      //   } else {\r\n      //     handleClearOptions();\r\n      //     props.onUpdateSelectedEquipmentList([]);\r\n      //   }\r\n      // }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SelectEquipment;\r\n","E:\\NETRA PROJECT\\Netra\\netra\\src\\pages\\Data Manager\\selectEquipment\\MultiSelect.js",[],{"ruleId":"942","severity":1,"message":"943","line":3,"column":8,"nodeType":"944","messageId":"945","endLine":3,"endColumn":18},{"ruleId":"942","severity":1,"message":"946","line":22,"column":8,"nodeType":"944","messageId":"945","endLine":22,"endColumn":26},{"ruleId":"942","severity":1,"message":"947","line":32,"column":8,"nodeType":"944","messageId":"945","endLine":32,"endColumn":13},{"ruleId":"942","severity":1,"message":"948","line":2,"column":10,"nodeType":"944","messageId":"945","endLine":2,"endColumn":19},{"ruleId":"949","severity":1,"message":"950","line":22,"column":11,"nodeType":"951","endLine":22,"endColumn":74},{"ruleId":"942","severity":1,"message":"952","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":16},{"ruleId":"942","severity":1,"message":"953","line":2,"column":17,"nodeType":"944","messageId":"945","endLine":2,"endColumn":25},{"ruleId":"942","severity":1,"message":"954","line":14,"column":10,"nodeType":"944","messageId":"945","endLine":14,"endColumn":18},{"ruleId":"942","severity":1,"message":"955","line":16,"column":9,"nodeType":"944","messageId":"945","endLine":16,"endColumn":20},{"ruleId":"942","severity":1,"message":"956","line":20,"column":9,"nodeType":"944","messageId":"945","endLine":20,"endColumn":20},{"ruleId":"942","severity":1,"message":"957","line":28,"column":9,"nodeType":"944","messageId":"945","endLine":28,"endColumn":15},{"ruleId":"942","severity":1,"message":"958","line":1,"column":8,"nodeType":"944","messageId":"945","endLine":1,"endColumn":25},{"ruleId":"942","severity":1,"message":"959","line":43,"column":11,"nodeType":"944","messageId":"945","endLine":43,"endColumn":26},{"ruleId":"942","severity":1,"message":"960","line":55,"column":11,"nodeType":"944","messageId":"945","endLine":55,"endColumn":26},{"ruleId":"949","severity":1,"message":"950","line":87,"column":17,"nodeType":"951","endLine":87,"endColumn":68},{"ruleId":"942","severity":1,"message":"961","line":3,"column":38,"nodeType":"944","messageId":"945","endLine":3,"endColumn":48},{"ruleId":"942","severity":1,"message":"962","line":3,"column":50,"nodeType":"944","messageId":"945","endLine":3,"endColumn":56},{"ruleId":"942","severity":1,"message":"963","line":3,"column":58,"nodeType":"944","messageId":"945","endLine":3,"endColumn":68},{"ruleId":"942","severity":1,"message":"964","line":5,"column":10,"nodeType":"944","messageId":"945","endLine":5,"endColumn":19},{"ruleId":"942","severity":1,"message":"965","line":5,"column":21,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"966","line":5,"column":29,"nodeType":"944","messageId":"945","endLine":5,"endColumn":42},{"ruleId":"942","severity":1,"message":"967","line":6,"column":8,"nodeType":"944","messageId":"945","endLine":6,"endColumn":21},{"ruleId":"968","severity":1,"message":"969","line":43,"column":5,"nodeType":"970","messageId":"971","endLine":43,"endColumn":12},{"ruleId":"942","severity":1,"message":"972","line":65,"column":10,"nodeType":"944","messageId":"945","endLine":65,"endColumn":14},{"ruleId":"942","severity":1,"message":"973","line":1,"column":38,"nodeType":"944","messageId":"945","endLine":1,"endColumn":44},{"ruleId":"942","severity":1,"message":"974","line":5,"column":8,"nodeType":"944","messageId":"945","endLine":5,"endColumn":17},{"ruleId":"942","severity":1,"message":"975","line":8,"column":18,"nodeType":"944","messageId":"945","endLine":8,"endColumn":51},{"ruleId":"942","severity":1,"message":"976","line":21,"column":16,"nodeType":"944","messageId":"945","endLine":21,"endColumn":20},{"ruleId":"942","severity":1,"message":"977","line":39,"column":43,"nodeType":"944","messageId":"945","endLine":39,"endColumn":49},{"ruleId":"942","severity":1,"message":"978","line":116,"column":9,"nodeType":"944","messageId":"945","endLine":116,"endColumn":19},{"ruleId":"942","severity":1,"message":"979","line":134,"column":9,"nodeType":"944","messageId":"945","endLine":134,"endColumn":19},{"ruleId":"980","severity":1,"message":"981","line":166,"column":6,"nodeType":"982","endLine":166,"endColumn":29,"suggestions":"983"},{"ruleId":"942","severity":1,"message":"984","line":167,"column":15,"nodeType":"944","messageId":"945","endLine":167,"endColumn":23},{"ruleId":"942","severity":1,"message":"985","line":5,"column":8,"nodeType":"944","messageId":"945","endLine":5,"endColumn":13},{"ruleId":"942","severity":1,"message":"986","line":8,"column":25,"nodeType":"944","messageId":"945","endLine":8,"endColumn":29},{"ruleId":"942","severity":1,"message":"987","line":9,"column":3,"nodeType":"944","messageId":"945","endLine":9,"endColumn":19},{"ruleId":"942","severity":1,"message":"988","line":10,"column":3,"nodeType":"944","messageId":"945","endLine":10,"endColumn":11},{"ruleId":"942","severity":1,"message":"986","line":16,"column":10,"nodeType":"944","messageId":"945","endLine":16,"endColumn":14},{"ruleId":"942","severity":1,"message":"989","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":14},{"ruleId":"942","severity":1,"message":"974","line":7,"column":8,"nodeType":"944","messageId":"945","endLine":7,"endColumn":17},{"ruleId":"942","severity":1,"message":"990","line":13,"column":3,"nodeType":"944","messageId":"945","endLine":13,"endColumn":8},{"ruleId":"942","severity":1,"message":"991","line":14,"column":3,"nodeType":"944","messageId":"945","endLine":14,"endColumn":13},{"ruleId":"942","severity":1,"message":"987","line":15,"column":3,"nodeType":"944","messageId":"945","endLine":15,"endColumn":19},{"ruleId":"942","severity":1,"message":"992","line":16,"column":3,"nodeType":"944","messageId":"945","endLine":16,"endColumn":14},{"ruleId":"942","severity":1,"message":"993","line":17,"column":3,"nodeType":"944","messageId":"945","endLine":17,"endColumn":12},{"ruleId":"942","severity":1,"message":"994","line":21,"column":3,"nodeType":"944","messageId":"945","endLine":21,"endColumn":15},{"ruleId":"942","severity":1,"message":"995","line":22,"column":3,"nodeType":"944","messageId":"945","endLine":22,"endColumn":12},{"ruleId":"942","severity":1,"message":"996","line":23,"column":3,"nodeType":"944","messageId":"945","endLine":23,"endColumn":12},{"ruleId":"942","severity":1,"message":"997","line":24,"column":3,"nodeType":"944","messageId":"945","endLine":24,"endColumn":15},{"ruleId":"942","severity":1,"message":"998","line":25,"column":3,"nodeType":"944","messageId":"945","endLine":25,"endColumn":16},{"ruleId":"942","severity":1,"message":"999","line":26,"column":3,"nodeType":"944","messageId":"945","endLine":26,"endColumn":13},{"ruleId":"942","severity":1,"message":"1000","line":28,"column":8,"nodeType":"944","messageId":"945","endLine":28,"endColumn":16},{"ruleId":"942","severity":1,"message":"1001","line":6,"column":3,"nodeType":"944","messageId":"945","endLine":6,"endColumn":9},{"ruleId":"942","severity":1,"message":"1002","line":8,"column":3,"nodeType":"944","messageId":"945","endLine":8,"endColumn":8},{"ruleId":"942","severity":1,"message":"1003","line":15,"column":10,"nodeType":"944","messageId":"945","endLine":15,"endColumn":14},{"ruleId":"942","severity":1,"message":"1004","line":15,"column":16,"nodeType":"944","messageId":"945","endLine":15,"endColumn":34},{"ruleId":"942","severity":1,"message":"1005","line":15,"column":36,"nodeType":"944","messageId":"945","endLine":15,"endColumn":42},{"ruleId":"942","severity":1,"message":"1006","line":15,"column":44,"nodeType":"944","messageId":"945","endLine":15,"endColumn":52},{"ruleId":"942","severity":1,"message":"1007","line":17,"column":8,"nodeType":"944","messageId":"945","endLine":17,"endColumn":21},{"ruleId":"942","severity":1,"message":"1008","line":20,"column":3,"nodeType":"944","messageId":"945","endLine":20,"endColumn":21},{"ruleId":"1009","severity":1,"message":"1010","line":88,"column":41,"nodeType":"1011","messageId":"971","endLine":88,"endColumn":43},{"ruleId":"942","severity":1,"message":"1012","line":119,"column":25,"nodeType":"944","messageId":"945","endLine":119,"endColumn":41},{"ruleId":"942","severity":1,"message":"1013","line":121,"column":9,"nodeType":"944","messageId":"945","endLine":121,"endColumn":24},{"ruleId":"942","severity":1,"message":"1014","line":11,"column":20,"nodeType":"944","messageId":"945","endLine":11,"endColumn":27},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"987","line":3,"column":48,"nodeType":"944","messageId":"945","endLine":3,"endColumn":64},{"ruleId":"942","severity":1,"message":"988","line":3,"column":66,"nodeType":"944","messageId":"945","endLine":3,"endColumn":74},{"ruleId":"942","severity":1,"message":"1016","line":39,"column":10,"nodeType":"944","messageId":"945","endLine":39,"endColumn":19},{"ruleId":"942","severity":1,"message":"1017","line":39,"column":21,"nodeType":"944","messageId":"945","endLine":39,"endColumn":33},{"ruleId":"942","severity":1,"message":"1018","line":49,"column":10,"nodeType":"944","messageId":"945","endLine":49,"endColumn":22},{"ruleId":"942","severity":1,"message":"1019","line":49,"column":24,"nodeType":"944","messageId":"945","endLine":49,"endColumn":39},{"ruleId":"942","severity":1,"message":"974","line":3,"column":8,"nodeType":"944","messageId":"945","endLine":3,"endColumn":17},{"ruleId":"942","severity":1,"message":"1020","line":11,"column":3,"nodeType":"944","messageId":"945","endLine":11,"endColumn":11},{"ruleId":"942","severity":1,"message":"1021","line":18,"column":8,"nodeType":"944","messageId":"945","endLine":18,"endColumn":18},{"ruleId":"942","severity":1,"message":"1022","line":24,"column":10,"nodeType":"944","messageId":"945","endLine":24,"endColumn":17},{"ruleId":"942","severity":1,"message":"946","line":26,"column":8,"nodeType":"944","messageId":"945","endLine":26,"endColumn":26},{"ruleId":"942","severity":1,"message":"1023","line":38,"column":23,"nodeType":"944","messageId":"945","endLine":38,"endColumn":28},{"ruleId":"942","severity":1,"message":"977","line":38,"column":43,"nodeType":"944","messageId":"945","endLine":38,"endColumn":49},{"ruleId":"942","severity":1,"message":"1024","line":46,"column":10,"nodeType":"944","messageId":"945","endLine":46,"endColumn":19},{"ruleId":"942","severity":1,"message":"1025","line":46,"column":21,"nodeType":"944","messageId":"945","endLine":46,"endColumn":33},{"ruleId":"980","severity":1,"message":"1026","line":110,"column":6,"nodeType":"982","endLine":110,"endColumn":20,"suggestions":"1027"},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"1028","line":6,"column":10,"nodeType":"944","messageId":"945","endLine":6,"endColumn":20},{"ruleId":"942","severity":1,"message":"1029","line":18,"column":24,"nodeType":"944","messageId":"945","endLine":18,"endColumn":39},{"ruleId":"942","severity":1,"message":"1030","line":25,"column":18,"nodeType":"944","messageId":"945","endLine":25,"endColumn":27},{"ruleId":"942","severity":1,"message":"1031","line":67,"column":9,"nodeType":"944","messageId":"945","endLine":67,"endColumn":17},{"ruleId":"942","severity":1,"message":"1032","line":11,"column":9,"nodeType":"944","messageId":"945","endLine":11,"endColumn":28},{"ruleId":"942","severity":1,"message":"1033","line":5,"column":8,"nodeType":"944","messageId":"945","endLine":5,"endColumn":16},{"ruleId":"942","severity":1,"message":"1003","line":11,"column":10,"nodeType":"944","messageId":"945","endLine":11,"endColumn":14},{"ruleId":"942","severity":1,"message":"1004","line":11,"column":16,"nodeType":"944","messageId":"945","endLine":11,"endColumn":34},{"ruleId":"942","severity":1,"message":"1006","line":11,"column":44,"nodeType":"944","messageId":"945","endLine":11,"endColumn":52},{"ruleId":"1009","severity":1,"message":"1010","line":88,"column":41,"nodeType":"1011","messageId":"971","endLine":88,"endColumn":43},{"ruleId":"942","severity":1,"message":"953","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":25},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":27,"nodeType":"944","messageId":"945","endLine":1,"endColumn":36},{"ruleId":"942","severity":1,"message":"952","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":16},{"ruleId":"942","severity":1,"message":"1034","line":3,"column":18,"nodeType":"944","messageId":"945","endLine":3,"endColumn":22},{"ruleId":"942","severity":1,"message":"1035","line":3,"column":24,"nodeType":"944","messageId":"945","endLine":3,"endColumn":32},{"ruleId":"942","severity":1,"message":"1036","line":5,"column":8,"nodeType":"944","messageId":"945","endLine":5,"endColumn":18},{"ruleId":"942","severity":1,"message":"1037","line":6,"column":8,"nodeType":"944","messageId":"945","endLine":6,"endColumn":21},{"ruleId":"949","severity":1,"message":"950","line":85,"column":11,"nodeType":"951","endLine":85,"endColumn":74},{"ruleId":"942","severity":1,"message":"974","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":17},{"ruleId":"942","severity":1,"message":"1038","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":21},{"ruleId":"942","severity":1,"message":"1039","line":30,"column":10,"nodeType":"944","messageId":"945","endLine":30,"endColumn":20},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"974","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":17},{"ruleId":"942","severity":1,"message":"1040","line":6,"column":10,"nodeType":"944","messageId":"945","endLine":6,"endColumn":22},{"ruleId":"942","severity":1,"message":"985","line":7,"column":8,"nodeType":"944","messageId":"945","endLine":7,"endColumn":13},{"ruleId":"942","severity":1,"message":"1041","line":8,"column":30,"nodeType":"944","messageId":"945","endLine":8,"endColumn":34},{"ruleId":"942","severity":1,"message":"1042","line":9,"column":8,"nodeType":"944","messageId":"945","endLine":9,"endColumn":15},{"ruleId":"942","severity":1,"message":"1043","line":10,"column":16,"nodeType":"944","messageId":"945","endLine":10,"endColumn":22},{"ruleId":"942","severity":1,"message":"1044","line":11,"column":8,"nodeType":"944","messageId":"945","endLine":11,"endColumn":18},{"ruleId":"942","severity":1,"message":"1045","line":15,"column":10,"nodeType":"944","messageId":"945","endLine":15,"endColumn":21},{"ruleId":"942","severity":1,"message":"1046","line":23,"column":8,"nodeType":"944","messageId":"945","endLine":23,"endColumn":20},{"ruleId":"942","severity":1,"message":"1047","line":24,"column":8,"nodeType":"944","messageId":"945","endLine":24,"endColumn":18},{"ruleId":"942","severity":1,"message":"976","line":26,"column":16,"nodeType":"944","messageId":"945","endLine":26,"endColumn":20},{"ruleId":"942","severity":1,"message":"1048","line":27,"column":10,"nodeType":"944","messageId":"945","endLine":27,"endColumn":15},{"ruleId":"942","severity":1,"message":"1049","line":52,"column":9,"nodeType":"944","messageId":"945","endLine":52,"endColumn":23},{"ruleId":"942","severity":1,"message":"1050","line":60,"column":7,"nodeType":"944","messageId":"945","endLine":60,"endColumn":12},{"ruleId":"942","severity":1,"message":"1051","line":74,"column":10,"nodeType":"944","messageId":"945","endLine":74,"endColumn":26},{"ruleId":"942","severity":1,"message":"1052","line":86,"column":9,"nodeType":"944","messageId":"945","endLine":86,"endColumn":23},{"ruleId":"942","severity":1,"message":"1053","line":90,"column":9,"nodeType":"944","messageId":"945","endLine":90,"endColumn":18},{"ruleId":"942","severity":1,"message":"1054","line":1,"column":46,"nodeType":"944","messageId":"945","endLine":1,"endColumn":57},{"ruleId":"942","severity":1,"message":"1001","line":3,"column":53,"nodeType":"944","messageId":"945","endLine":3,"endColumn":59},{"ruleId":"942","severity":1,"message":"1002","line":3,"column":61,"nodeType":"944","messageId":"945","endLine":3,"endColumn":66},{"ruleId":"942","severity":1,"message":"1055","line":3,"column":68,"nodeType":"944","messageId":"945","endLine":3,"endColumn":73},{"ruleId":"942","severity":1,"message":"1056","line":4,"column":10,"nodeType":"944","messageId":"945","endLine":4,"endColumn":19},{"ruleId":"942","severity":1,"message":"1057","line":4,"column":21,"nodeType":"944","messageId":"945","endLine":4,"endColumn":25},{"ruleId":"942","severity":1,"message":"1058","line":4,"column":27,"nodeType":"944","messageId":"945","endLine":4,"endColumn":32},{"ruleId":"942","severity":1,"message":"1059","line":4,"column":34,"nodeType":"944","messageId":"945","endLine":4,"endColumn":39},{"ruleId":"942","severity":1,"message":"1060","line":4,"column":41,"nodeType":"944","messageId":"945","endLine":4,"endColumn":54},{"ruleId":"942","severity":1,"message":"1061","line":4,"column":56,"nodeType":"944","messageId":"945","endLine":4,"endColumn":63},{"ruleId":"942","severity":1,"message":"1062","line":4,"column":65,"nodeType":"944","messageId":"945","endLine":4,"endColumn":70},{"ruleId":"942","severity":1,"message":"1063","line":4,"column":72,"nodeType":"944","messageId":"945","endLine":4,"endColumn":85},{"ruleId":"942","severity":1,"message":"1008","line":8,"column":3,"nodeType":"944","messageId":"945","endLine":8,"endColumn":21},{"ruleId":"942","severity":1,"message":"1046","line":16,"column":8,"nodeType":"944","messageId":"945","endLine":16,"endColumn":20},{"ruleId":"942","severity":1,"message":"1064","line":17,"column":8,"nodeType":"944","messageId":"945","endLine":17,"endColumn":24},{"ruleId":"942","severity":1,"message":"1065","line":18,"column":8,"nodeType":"944","messageId":"945","endLine":18,"endColumn":21},{"ruleId":"942","severity":1,"message":"1066","line":19,"column":8,"nodeType":"944","messageId":"945","endLine":19,"endColumn":28},{"ruleId":"942","severity":1,"message":"1067","line":21,"column":8,"nodeType":"944","messageId":"945","endLine":21,"endColumn":14},{"ruleId":"942","severity":1,"message":"1007","line":22,"column":8,"nodeType":"944","messageId":"945","endLine":22,"endColumn":21},{"ruleId":"942","severity":1,"message":"1003","line":23,"column":10,"nodeType":"944","messageId":"945","endLine":23,"endColumn":14},{"ruleId":"942","severity":1,"message":"1004","line":23,"column":16,"nodeType":"944","messageId":"945","endLine":23,"endColumn":34},{"ruleId":"942","severity":1,"message":"1006","line":23,"column":44,"nodeType":"944","messageId":"945","endLine":23,"endColumn":52},{"ruleId":"942","severity":1,"message":"1068","line":24,"column":8,"nodeType":"944","messageId":"945","endLine":24,"endColumn":21},{"ruleId":"942","severity":1,"message":"1069","line":36,"column":7,"nodeType":"944","messageId":"945","endLine":36,"endColumn":18},{"ruleId":"1009","severity":1,"message":"1010","line":97,"column":41,"nodeType":"1011","messageId":"971","endLine":97,"endColumn":43},{"ruleId":"942","severity":1,"message":"1070","line":116,"column":10,"nodeType":"944","messageId":"945","endLine":116,"endColumn":28},{"ruleId":"942","severity":1,"message":"1014","line":117,"column":20,"nodeType":"944","messageId":"945","endLine":117,"endColumn":27},{"ruleId":"942","severity":1,"message":"1071","line":122,"column":7,"nodeType":"944","messageId":"945","endLine":122,"endColumn":18},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"974","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":17},{"ruleId":"942","severity":1,"message":"1038","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":21},{"ruleId":"942","severity":1,"message":"1040","line":6,"column":10,"nodeType":"944","messageId":"945","endLine":6,"endColumn":22},{"ruleId":"942","severity":1,"message":"985","line":7,"column":8,"nodeType":"944","messageId":"945","endLine":7,"endColumn":13},{"ruleId":"942","severity":1,"message":"1041","line":8,"column":30,"nodeType":"944","messageId":"945","endLine":8,"endColumn":34},{"ruleId":"942","severity":1,"message":"1042","line":9,"column":8,"nodeType":"944","messageId":"945","endLine":9,"endColumn":15},{"ruleId":"942","severity":1,"message":"1043","line":10,"column":16,"nodeType":"944","messageId":"945","endLine":10,"endColumn":22},{"ruleId":"942","severity":1,"message":"1044","line":11,"column":8,"nodeType":"944","messageId":"945","endLine":11,"endColumn":18},{"ruleId":"942","severity":1,"message":"1045","line":15,"column":10,"nodeType":"944","messageId":"945","endLine":15,"endColumn":21},{"ruleId":"942","severity":1,"message":"1046","line":23,"column":8,"nodeType":"944","messageId":"945","endLine":23,"endColumn":20},{"ruleId":"942","severity":1,"message":"1047","line":24,"column":8,"nodeType":"944","messageId":"945","endLine":24,"endColumn":18},{"ruleId":"942","severity":1,"message":"976","line":26,"column":16,"nodeType":"944","messageId":"945","endLine":26,"endColumn":20},{"ruleId":"942","severity":1,"message":"1072","line":49,"column":9,"nodeType":"944","messageId":"945","endLine":49,"endColumn":22},{"ruleId":"942","severity":1,"message":"1049","line":51,"column":9,"nodeType":"944","messageId":"945","endLine":51,"endColumn":23},{"ruleId":"942","severity":1,"message":"1050","line":55,"column":7,"nodeType":"944","messageId":"945","endLine":55,"endColumn":12},{"ruleId":"942","severity":1,"message":"1051","line":69,"column":10,"nodeType":"944","messageId":"945","endLine":69,"endColumn":26},{"ruleId":"942","severity":1,"message":"1052","line":81,"column":9,"nodeType":"944","messageId":"945","endLine":81,"endColumn":23},{"ruleId":"942","severity":1,"message":"1053","line":85,"column":9,"nodeType":"944","messageId":"945","endLine":85,"endColumn":18},{"ruleId":"942","severity":1,"message":"1054","line":1,"column":27,"nodeType":"944","messageId":"945","endLine":1,"endColumn":38},{"ruleId":"942","severity":1,"message":"1073","line":33,"column":10,"nodeType":"944","messageId":"945","endLine":33,"endColumn":19},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"974","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":17},{"ruleId":"942","severity":1,"message":"1040","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":22},{"ruleId":"942","severity":1,"message":"985","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":13},{"ruleId":"942","severity":1,"message":"1041","line":9,"column":30,"nodeType":"944","messageId":"945","endLine":9,"endColumn":34},{"ruleId":"942","severity":1,"message":"1042","line":10,"column":8,"nodeType":"944","messageId":"945","endLine":10,"endColumn":15},{"ruleId":"942","severity":1,"message":"1043","line":11,"column":16,"nodeType":"944","messageId":"945","endLine":11,"endColumn":22},{"ruleId":"942","severity":1,"message":"1044","line":12,"column":8,"nodeType":"944","messageId":"945","endLine":12,"endColumn":18},{"ruleId":"942","severity":1,"message":"1045","line":16,"column":10,"nodeType":"944","messageId":"945","endLine":16,"endColumn":21},{"ruleId":"942","severity":1,"message":"1074","line":20,"column":8,"nodeType":"944","messageId":"945","endLine":20,"endColumn":20},{"ruleId":"942","severity":1,"message":"1075","line":23,"column":8,"nodeType":"944","messageId":"945","endLine":23,"endColumn":23},{"ruleId":"942","severity":1,"message":"1047","line":25,"column":8,"nodeType":"944","messageId":"945","endLine":25,"endColumn":18},{"ruleId":"942","severity":1,"message":"976","line":27,"column":16,"nodeType":"944","messageId":"945","endLine":27,"endColumn":20},{"ruleId":"942","severity":1,"message":"1076","line":55,"column":10,"nodeType":"944","messageId":"945","endLine":55,"endColumn":23},{"ruleId":"942","severity":1,"message":"1050","line":56,"column":7,"nodeType":"944","messageId":"945","endLine":56,"endColumn":12},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"1040","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":22},{"ruleId":"942","severity":1,"message":"952","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":16},{"ruleId":"949","severity":1,"message":"950","line":31,"column":9,"nodeType":"951","endLine":31,"endColumn":72},{"ruleId":"942","severity":1,"message":"952","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":16},{"ruleId":"949","severity":1,"message":"950","line":50,"column":9,"nodeType":"951","endLine":50,"endColumn":72},{"ruleId":"942","severity":1,"message":"952","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":14},{"ruleId":"942","severity":1,"message":"1077","line":11,"column":7,"nodeType":"944","messageId":"945","endLine":11,"endColumn":16},{"ruleId":"942","severity":1,"message":"952","line":7,"column":8,"nodeType":"944","messageId":"945","endLine":7,"endColumn":14},{"ruleId":"942","severity":1,"message":"1078","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1079","line":100,"column":9,"nodeType":"944","messageId":"945","endLine":100,"endColumn":19},{"ruleId":"942","severity":1,"message":"1080","line":104,"column":9,"nodeType":"944","messageId":"945","endLine":104,"endColumn":19},{"ruleId":"942","severity":1,"message":"1081","line":108,"column":9,"nodeType":"944","messageId":"945","endLine":108,"endColumn":20},{"ruleId":"942","severity":1,"message":"1015","line":2,"column":3,"nodeType":"944","messageId":"945","endLine":2,"endColumn":12},{"ruleId":"942","severity":1,"message":"1082","line":4,"column":3,"nodeType":"944","messageId":"945","endLine":4,"endColumn":22},{"ruleId":"942","severity":1,"message":"973","line":5,"column":3,"nodeType":"944","messageId":"945","endLine":5,"endColumn":9},{"ruleId":"942","severity":1,"message":"1083","line":6,"column":3,"nodeType":"944","messageId":"945","endLine":6,"endColumn":13},{"ruleId":"942","severity":1,"message":"1084","line":8,"column":10,"nodeType":"944","messageId":"945","endLine":8,"endColumn":21},{"ruleId":"942","severity":1,"message":"952","line":9,"column":10,"nodeType":"944","messageId":"945","endLine":9,"endColumn":16},{"ruleId":"942","severity":1,"message":"1046","line":10,"column":8,"nodeType":"944","messageId":"945","endLine":10,"endColumn":20},{"ruleId":"942","severity":1,"message":"952","line":2,"column":10,"nodeType":"944","messageId":"945","endLine":2,"endColumn":16},{"ruleId":"942","severity":1,"message":"1028","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":20},{"ruleId":"980","severity":1,"message":"1085","line":55,"column":6,"nodeType":"982","endLine":55,"endColumn":8,"suggestions":"1086"},{"ruleId":"942","severity":1,"message":"1087","line":126,"column":9,"nodeType":"944","messageId":"945","endLine":126,"endColumn":30},{"ruleId":"942","severity":1,"message":"952","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":16},{"ruleId":"942","severity":1,"message":"975","line":1,"column":18,"nodeType":"944","messageId":"945","endLine":1,"endColumn":51},{"ruleId":"942","severity":1,"message":"1046","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":20},{"ruleId":"942","severity":1,"message":"1084","line":5,"column":10,"nodeType":"944","messageId":"945","endLine":5,"endColumn":21},{"ruleId":"942","severity":1,"message":"1088","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":31},{"ruleId":"942","severity":1,"message":"1089","line":14,"column":9,"nodeType":"944","messageId":"945","endLine":14,"endColumn":23},{"ruleId":"942","severity":1,"message":"952","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":16},{"ruleId":"942","severity":1,"message":"1046","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":20},{"ruleId":"942","severity":1,"message":"1084","line":5,"column":10,"nodeType":"944","messageId":"945","endLine":5,"endColumn":21},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":19},{"ruleId":"942","severity":1,"message":"953","line":1,"column":21,"nodeType":"944","messageId":"945","endLine":1,"endColumn":29},{"ruleId":"942","severity":1,"message":"1084","line":2,"column":10,"nodeType":"944","messageId":"945","endLine":2,"endColumn":21},{"ruleId":"942","severity":1,"message":"952","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":16},{"ruleId":"942","severity":1,"message":"1046","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":20},{"ruleId":"942","severity":1,"message":"1090","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":19},{"ruleId":"942","severity":1,"message":"1091","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":15},{"ruleId":"942","severity":1,"message":"1092","line":10,"column":28,"nodeType":"944","messageId":"945","endLine":10,"endColumn":34},{"ruleId":"942","severity":1,"message":"1093","line":11,"column":10,"nodeType":"944","messageId":"945","endLine":11,"endColumn":25},{"ruleId":"942","severity":1,"message":"1094","line":18,"column":8,"nodeType":"944","messageId":"945","endLine":18,"endColumn":25},{"ruleId":"942","severity":1,"message":"1095","line":21,"column":10,"nodeType":"944","messageId":"945","endLine":21,"endColumn":16},{"ruleId":"942","severity":1,"message":"991","line":5,"column":17,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"987","line":5,"column":28,"nodeType":"944","messageId":"945","endLine":5,"endColumn":44},{"ruleId":"942","severity":1,"message":"990","line":5,"column":45,"nodeType":"944","messageId":"945","endLine":5,"endColumn":50},{"ruleId":"942","severity":1,"message":"991","line":5,"column":17,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"987","line":5,"column":28,"nodeType":"944","messageId":"945","endLine":5,"endColumn":44},{"ruleId":"942","severity":1,"message":"990","line":5,"column":45,"nodeType":"944","messageId":"945","endLine":5,"endColumn":50},{"ruleId":"942","severity":1,"message":"976","line":11,"column":15,"nodeType":"944","messageId":"945","endLine":11,"endColumn":19},{"ruleId":"942","severity":1,"message":"991","line":5,"column":17,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"987","line":5,"column":28,"nodeType":"944","messageId":"945","endLine":5,"endColumn":44},{"ruleId":"942","severity":1,"message":"990","line":5,"column":45,"nodeType":"944","messageId":"945","endLine":5,"endColumn":50},{"ruleId":"942","severity":1,"message":"991","line":5,"column":17,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"987","line":5,"column":28,"nodeType":"944","messageId":"945","endLine":5,"endColumn":44},{"ruleId":"942","severity":1,"message":"990","line":5,"column":45,"nodeType":"944","messageId":"945","endLine":5,"endColumn":50},{"ruleId":"942","severity":1,"message":"1048","line":10,"column":10,"nodeType":"944","messageId":"945","endLine":10,"endColumn":15},{"ruleId":"942","severity":1,"message":"1096","line":14,"column":8,"nodeType":"944","messageId":"945","endLine":14,"endColumn":18},{"ruleId":"942","severity":1,"message":"991","line":5,"column":17,"nodeType":"944","messageId":"945","endLine":5,"endColumn":27},{"ruleId":"942","severity":1,"message":"987","line":5,"column":28,"nodeType":"944","messageId":"945","endLine":5,"endColumn":44},{"ruleId":"942","severity":1,"message":"990","line":5,"column":45,"nodeType":"944","messageId":"945","endLine":5,"endColumn":50},{"ruleId":"942","severity":1,"message":"1097","line":5,"column":52,"nodeType":"944","messageId":"945","endLine":5,"endColumn":61},{"ruleId":"942","severity":1,"message":"1098","line":6,"column":8,"nodeType":"944","messageId":"945","endLine":6,"endColumn":21},{"ruleId":"942","severity":1,"message":"1048","line":10,"column":10,"nodeType":"944","messageId":"945","endLine":10,"endColumn":15},{"ruleId":"942","severity":1,"message":"1096","line":14,"column":8,"nodeType":"944","messageId":"945","endLine":14,"endColumn":18},{"ruleId":"942","severity":1,"message":"985","line":15,"column":8,"nodeType":"944","messageId":"945","endLine":15,"endColumn":13},{"ruleId":"942","severity":1,"message":"1040","line":16,"column":10,"nodeType":"944","messageId":"945","endLine":16,"endColumn":22},{"ruleId":"942","severity":1,"message":"1099","line":29,"column":28,"nodeType":"944","messageId":"945","endLine":29,"endColumn":47},{"ruleId":"942","severity":1,"message":"1100","line":33,"column":12,"nodeType":"944","messageId":"945","endLine":33,"endColumn":25},{"ruleId":"942","severity":1,"message":"1101","line":35,"column":12,"nodeType":"944","messageId":"945","endLine":35,"endColumn":30},{"ruleId":"942","severity":1,"message":"985","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":13},{"ruleId":"942","severity":1,"message":"1102","line":13,"column":10,"nodeType":"944","messageId":"945","endLine":13,"endColumn":23},{"ruleId":"942","severity":1,"message":"985","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":13},{"ruleId":"942","severity":1,"message":"1084","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":21},{"ruleId":"942","severity":1,"message":"1103","line":7,"column":23,"nodeType":"944","messageId":"945","endLine":7,"endColumn":34},{"ruleId":"942","severity":1,"message":"1102","line":12,"column":10,"nodeType":"944","messageId":"945","endLine":12,"endColumn":23},{"ruleId":"942","severity":1,"message":"1092","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":14},{"ruleId":"942","severity":1,"message":"1035","line":3,"column":8,"nodeType":"944","messageId":"945","endLine":3,"endColumn":16},{"ruleId":"942","severity":1,"message":"1041","line":5,"column":53,"nodeType":"944","messageId":"945","endLine":5,"endColumn":57},{"ruleId":"942","severity":1,"message":"1104","line":25,"column":12,"nodeType":"944","messageId":"945","endLine":25,"endColumn":26},{"ruleId":"942","severity":1,"message":"1105","line":25,"column":28,"nodeType":"944","messageId":"945","endLine":25,"endColumn":45},{"ruleId":"942","severity":1,"message":"1106","line":26,"column":12,"nodeType":"944","messageId":"945","endLine":26,"endColumn":24},{"ruleId":"942","severity":1,"message":"1107","line":27,"column":12,"nodeType":"944","messageId":"945","endLine":27,"endColumn":30},{"ruleId":"942","severity":1,"message":"1108","line":29,"column":12,"nodeType":"944","messageId":"945","endLine":29,"endColumn":20},{"ruleId":"942","severity":1,"message":"1109","line":29,"column":22,"nodeType":"944","messageId":"945","endLine":29,"endColumn":33},{"ruleId":"942","severity":1,"message":"1110","line":30,"column":12,"nodeType":"944","messageId":"945","endLine":30,"endColumn":25},{"ruleId":"942","severity":1,"message":"1111","line":30,"column":27,"nodeType":"944","messageId":"945","endLine":30,"endColumn":43},{"ruleId":"942","severity":1,"message":"1112","line":2,"column":29,"nodeType":"944","messageId":"945","endLine":2,"endColumn":35},{"ruleId":"942","severity":1,"message":"1113","line":2,"column":37,"nodeType":"944","messageId":"945","endLine":2,"endColumn":48},{"ruleId":"942","severity":1,"message":"1114","line":2,"column":50,"nodeType":"944","messageId":"945","endLine":2,"endColumn":63},{"ruleId":"942","severity":1,"message":"1115","line":2,"column":65,"nodeType":"944","messageId":"945","endLine":2,"endColumn":78},{"ruleId":"942","severity":1,"message":"1116","line":1,"column":22,"nodeType":"944","messageId":"945","endLine":1,"endColumn":31},{"ruleId":"942","severity":1,"message":"1117","line":35,"column":9,"nodeType":"944","messageId":"945","endLine":35,"endColumn":21},{"ruleId":"980","severity":1,"message":"1118","line":32,"column":6,"nodeType":"982","endLine":32,"endColumn":8,"suggestions":"1119"},{"ruleId":"942","severity":1,"message":"1120","line":36,"column":7,"nodeType":"944","messageId":"945","endLine":36,"endColumn":23},{"ruleId":"942","severity":1,"message":"1078","line":5,"column":10,"nodeType":"944","messageId":"945","endLine":5,"endColumn":20},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"1121","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":16},{"ruleId":"942","severity":1,"message":"1097","line":9,"column":10,"nodeType":"944","messageId":"945","endLine":9,"endColumn":19},{"ruleId":"942","severity":1,"message":"1078","line":9,"column":21,"nodeType":"944","messageId":"945","endLine":9,"endColumn":31},{"ruleId":"942","severity":1,"message":"1102","line":97,"column":10,"nodeType":"944","messageId":"945","endLine":97,"endColumn":23},{"ruleId":"942","severity":1,"message":"1078","line":13,"column":3,"nodeType":"944","messageId":"945","endLine":13,"endColumn":13},{"ruleId":"942","severity":1,"message":"1122","line":59,"column":9,"nodeType":"944","messageId":"945","endLine":59,"endColumn":19},{"ruleId":"942","severity":1,"message":"1122","line":21,"column":9,"nodeType":"944","messageId":"945","endLine":21,"endColumn":19},{"ruleId":"942","severity":1,"message":"1097","line":3,"column":3,"nodeType":"944","messageId":"945","endLine":3,"endColumn":12},{"ruleId":"942","severity":1,"message":"1123","line":21,"column":10,"nodeType":"944","messageId":"945","endLine":21,"endColumn":19},{"ruleId":"942","severity":1,"message":"1124","line":26,"column":23,"nodeType":"944","messageId":"945","endLine":26,"endColumn":37},{"ruleId":"942","severity":1,"message":"1125","line":36,"column":10,"nodeType":"944","messageId":"945","endLine":36,"endColumn":12},{"ruleId":"942","severity":1,"message":"1126","line":36,"column":14,"nodeType":"944","messageId":"945","endLine":36,"endColumn":19},{"ruleId":"942","severity":1,"message":"1127","line":37,"column":27,"nodeType":"944","messageId":"945","endLine":37,"endColumn":45},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":27,"nodeType":"944","messageId":"945","endLine":1,"endColumn":36},{"ruleId":"942","severity":1,"message":"1128","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":17},{"ruleId":"942","severity":1,"message":"1129","line":20,"column":10,"nodeType":"944","messageId":"945","endLine":20,"endColumn":19},{"ruleId":"942","severity":1,"message":"1130","line":20,"column":21,"nodeType":"944","messageId":"945","endLine":20,"endColumn":32},{"ruleId":"942","severity":1,"message":"1097","line":11,"column":3,"nodeType":"944","messageId":"945","endLine":11,"endColumn":12},{"ruleId":"942","severity":1,"message":"973","line":9,"column":27,"nodeType":"944","messageId":"945","endLine":9,"endColumn":33},{"ruleId":"942","severity":1,"message":"1046","line":16,"column":8,"nodeType":"944","messageId":"945","endLine":16,"endColumn":20},{"ruleId":"942","severity":1,"message":"1131","line":22,"column":8,"nodeType":"944","messageId":"945","endLine":22,"endColumn":13},{"ruleId":"942","severity":1,"message":"1132","line":38,"column":9,"nodeType":"944","messageId":"945","endLine":38,"endColumn":32},{"ruleId":"942","severity":1,"message":"1133","line":76,"column":15,"nodeType":"944","messageId":"945","endLine":76,"endColumn":23},{"ruleId":"942","severity":1,"message":"1134","line":76,"column":25,"nodeType":"944","messageId":"945","endLine":76,"endColumn":37},{"ruleId":"942","severity":1,"message":"986","line":18,"column":10,"nodeType":"944","messageId":"945","endLine":18,"endColumn":14},{"ruleId":"942","severity":1,"message":"1135","line":29,"column":33,"nodeType":"944","messageId":"945","endLine":29,"endColumn":57},{"ruleId":"942","severity":1,"message":"1136","line":33,"column":9,"nodeType":"944","messageId":"945","endLine":33,"endColumn":14},{"ruleId":"980","severity":1,"message":"1137","line":53,"column":6,"nodeType":"982","endLine":53,"endColumn":43,"suggestions":"1138"},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"1015","line":2,"column":3,"nodeType":"944","messageId":"945","endLine":2,"endColumn":12},{"ruleId":"942","severity":1,"message":"1084","line":10,"column":10,"nodeType":"944","messageId":"945","endLine":10,"endColumn":21},{"ruleId":"942","severity":1,"message":"1139","line":11,"column":8,"nodeType":"944","messageId":"945","endLine":11,"endColumn":27},{"ruleId":"942","severity":1,"message":"1140","line":37,"column":15,"nodeType":"944","messageId":"945","endLine":37,"endColumn":19},{"ruleId":"942","severity":1,"message":"1015","line":2,"column":3,"nodeType":"944","messageId":"945","endLine":2,"endColumn":12},{"ruleId":"942","severity":1,"message":"1084","line":10,"column":10,"nodeType":"944","messageId":"945","endLine":10,"endColumn":21},{"ruleId":"942","severity":1,"message":"973","line":2,"column":30,"nodeType":"944","messageId":"945","endLine":2,"endColumn":36},{"ruleId":"980","severity":1,"message":"1141","line":113,"column":5,"nodeType":"982","endLine":113,"endColumn":16,"suggestions":"1142"},{"ruleId":"1143","severity":1,"message":"1144","line":176,"column":36,"nodeType":"1011","messageId":"1145","endLine":176,"endColumn":37},{"ruleId":"942","severity":1,"message":"952","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":16},{"ruleId":"942","severity":1,"message":"1146","line":51,"column":9,"nodeType":"944","messageId":"945","endLine":51,"endColumn":15},{"ruleId":"942","severity":1,"message":"1147","line":55,"column":9,"nodeType":"944","messageId":"945","endLine":55,"endColumn":20},{"ruleId":"942","severity":1,"message":"1148","line":76,"column":9,"nodeType":"944","messageId":"945","endLine":76,"endColumn":13},{"ruleId":"942","severity":1,"message":"1149","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":16},{"ruleId":"942","severity":1,"message":"1150","line":3,"column":33,"nodeType":"944","messageId":"945","endLine":3,"endColumn":51},{"ruleId":"942","severity":1,"message":"1015","line":2,"column":5,"nodeType":"944","messageId":"945","endLine":2,"endColumn":14},{"ruleId":"942","severity":1,"message":"1084","line":10,"column":12,"nodeType":"944","messageId":"945","endLine":10,"endColumn":23},{"ruleId":"942","severity":1,"message":"1151","line":17,"column":11,"nodeType":"944","messageId":"945","endLine":17,"endColumn":19},{"ruleId":"942","severity":1,"message":"1152","line":19,"column":9,"nodeType":"944","messageId":"945","endLine":19,"endColumn":36},{"ruleId":"942","severity":1,"message":"1153","line":20,"column":11,"nodeType":"944","messageId":"945","endLine":20,"endColumn":21},{"ruleId":"942","severity":1,"message":"1154","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":28},{"ruleId":"942","severity":1,"message":"1044","line":11,"column":8,"nodeType":"944","messageId":"945","endLine":11,"endColumn":18},{"ruleId":"949","severity":1,"message":"950","line":87,"column":13,"nodeType":"951","endLine":87,"endColumn":64},{"ruleId":"942","severity":1,"message":"1000","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":16},{"ruleId":"942","severity":1,"message":"961","line":6,"column":8,"nodeType":"944","messageId":"945","endLine":6,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":16,"column":20,"nodeType":"944","messageId":"945","endLine":16,"endColumn":27},{"ruleId":"942","severity":1,"message":"1040","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":22},{"ruleId":"942","severity":1,"message":"952","line":3,"column":8,"nodeType":"944","messageId":"945","endLine":3,"endColumn":14},{"ruleId":"942","severity":1,"message":"1155","line":23,"column":8,"nodeType":"944","messageId":"945","endLine":23,"endColumn":16},{"ruleId":"942","severity":1,"message":"961","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1044","line":9,"column":8,"nodeType":"944","messageId":"945","endLine":9,"endColumn":18},{"ruleId":"942","severity":1,"message":"996","line":4,"column":10,"nodeType":"944","messageId":"945","endLine":4,"endColumn":19},{"ruleId":"942","severity":1,"message":"1084","line":6,"column":23,"nodeType":"944","messageId":"945","endLine":6,"endColumn":34},{"ruleId":"942","severity":1,"message":"1156","line":12,"column":9,"nodeType":"944","messageId":"945","endLine":12,"endColumn":18},{"ruleId":"942","severity":1,"message":"1157","line":13,"column":9,"nodeType":"944","messageId":"945","endLine":13,"endColumn":14},{"ruleId":"942","severity":1,"message":"953","line":6,"column":10,"nodeType":"944","messageId":"945","endLine":6,"endColumn":18},{"ruleId":"942","severity":1,"message":"1158","line":5,"column":10,"nodeType":"944","messageId":"945","endLine":5,"endColumn":21},{"ruleId":"942","severity":1,"message":"961","line":7,"column":8,"nodeType":"944","messageId":"945","endLine":7,"endColumn":18},{"ruleId":"942","severity":1,"message":"1084","line":10,"column":23,"nodeType":"944","messageId":"945","endLine":10,"endColumn":34},{"ruleId":"942","severity":1,"message":"976","line":11,"column":16,"nodeType":"944","messageId":"945","endLine":11,"endColumn":20},{"ruleId":"942","severity":1,"message":"1014","line":48,"column":18,"nodeType":"944","messageId":"945","endLine":48,"endColumn":25},{"ruleId":"942","severity":1,"message":"1000","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":16},{"ruleId":"942","severity":1,"message":"1084","line":6,"column":23,"nodeType":"944","messageId":"945","endLine":6,"endColumn":34},{"ruleId":"1009","severity":1,"message":"1010","line":51,"column":29,"nodeType":"1011","messageId":"971","endLine":51,"endColumn":31},{"ruleId":"942","severity":1,"message":"1159","line":37,"column":7,"nodeType":"944","messageId":"945","endLine":37,"endColumn":20},{"ruleId":"942","severity":1,"message":"1160","line":1,"column":10,"nodeType":"944","messageId":"945","endLine":1,"endColumn":18},{"ruleId":"942","severity":1,"message":"994","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":22},{"ruleId":"942","severity":1,"message":"995","line":3,"column":24,"nodeType":"944","messageId":"945","endLine":3,"endColumn":33},{"ruleId":"942","severity":1,"message":"1161","line":15,"column":9,"nodeType":"944","messageId":"945","endLine":15,"endColumn":14},{"ruleId":"942","severity":1,"message":"1084","line":4,"column":23,"nodeType":"944","messageId":"945","endLine":4,"endColumn":34},{"ruleId":"942","severity":1,"message":"976","line":5,"column":16,"nodeType":"944","messageId":"945","endLine":5,"endColumn":20},{"ruleId":"942","severity":1,"message":"1162","line":12,"column":9,"nodeType":"944","messageId":"945","endLine":12,"endColumn":23},{"ruleId":"942","severity":1,"message":"1163","line":54,"column":13,"nodeType":"944","messageId":"945","endLine":54,"endColumn":19},{"ruleId":"942","severity":1,"message":"953","line":3,"column":10,"nodeType":"944","messageId":"945","endLine":3,"endColumn":18},{"ruleId":"942","severity":1,"message":"948","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":19},{"ruleId":"942","severity":1,"message":"1044","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1046","line":2,"column":8,"nodeType":"944","messageId":"945","endLine":2,"endColumn":20},{"ruleId":"942","severity":1,"message":"1000","line":5,"column":8,"nodeType":"944","messageId":"945","endLine":5,"endColumn":16},{"ruleId":"942","severity":1,"message":"1164","line":7,"column":10,"nodeType":"944","messageId":"945","endLine":7,"endColumn":19},{"ruleId":"942","severity":1,"message":"1028","line":7,"column":21,"nodeType":"944","messageId":"945","endLine":7,"endColumn":31},{"ruleId":"942","severity":1,"message":"1084","line":9,"column":23,"nodeType":"944","messageId":"945","endLine":9,"endColumn":34},{"ruleId":"942","severity":1,"message":"976","line":10,"column":16,"nodeType":"944","messageId":"945","endLine":10,"endColumn":20},{"ruleId":"942","severity":1,"message":"1165","line":23,"column":9,"nodeType":"944","messageId":"945","endLine":23,"endColumn":21},{"ruleId":"942","severity":1,"message":"1163","line":65,"column":11,"nodeType":"944","messageId":"945","endLine":65,"endColumn":17},{"ruleId":"942","severity":1,"message":"976","line":6,"column":16,"nodeType":"944","messageId":"945","endLine":6,"endColumn":20},{"ruleId":"942","severity":1,"message":"1015","line":2,"column":3,"nodeType":"944","messageId":"945","endLine":2,"endColumn":12},{"ruleId":"942","severity":1,"message":"1084","line":10,"column":10,"nodeType":"944","messageId":"945","endLine":10,"endColumn":21},{"ruleId":"942","severity":1,"message":"1139","line":11,"column":8,"nodeType":"944","messageId":"945","endLine":11,"endColumn":27},{"ruleId":"942","severity":1,"message":"961","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":34,"column":20,"nodeType":"944","messageId":"945","endLine":34,"endColumn":27},{"ruleId":"942","severity":1,"message":"1055","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":13},{"ruleId":"942","severity":1,"message":"961","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":36,"column":20,"nodeType":"944","messageId":"945","endLine":36,"endColumn":27},{"ruleId":"942","severity":1,"message":"961","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":34,"column":20,"nodeType":"944","messageId":"945","endLine":34,"endColumn":27},{"ruleId":"942","severity":1,"message":"1055","line":4,"column":8,"nodeType":"944","messageId":"945","endLine":4,"endColumn":13},{"ruleId":"942","severity":1,"message":"1002","line":5,"column":18,"nodeType":"944","messageId":"945","endLine":5,"endColumn":23},{"ruleId":"942","severity":1,"message":"961","line":8,"column":8,"nodeType":"944","messageId":"945","endLine":8,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":76,"column":20,"nodeType":"944","messageId":"945","endLine":76,"endColumn":27},{"ruleId":"942","severity":1,"message":"961","line":6,"column":8,"nodeType":"944","messageId":"945","endLine":6,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":15,"column":20,"nodeType":"944","messageId":"945","endLine":15,"endColumn":27},{"ruleId":"942","severity":1,"message":"973","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":23},{"ruleId":"942","severity":1,"message":"961","line":9,"column":8,"nodeType":"944","messageId":"945","endLine":9,"endColumn":18},{"ruleId":"942","severity":1,"message":"1014","line":100,"column":20,"nodeType":"944","messageId":"945","endLine":100,"endColumn":27},{"ruleId":"942","severity":1,"message":"1014","line":13,"column":20,"nodeType":"944","messageId":"945","endLine":13,"endColumn":27},{"ruleId":"942","severity":1,"message":"1015","line":1,"column":17,"nodeType":"944","messageId":"945","endLine":1,"endColumn":26},{"ruleId":"942","severity":1,"message":"1166","line":6,"column":7,"nodeType":"944","messageId":"945","endLine":6,"endColumn":11},{"ruleId":"942","severity":1,"message":"1167","line":7,"column":7,"nodeType":"944","messageId":"945","endLine":7,"endColumn":18},"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'RepairableOverhaul' is defined but never used.","'Login' is defined but never used.","'MProwData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'useState' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Logout' is assigned a value but never used.","'AccountCircleTcon' is defined but never used.","'toggleSysConfig' is assigned a value but never used.","'toggleDashboard' is assigned a value but never used.","'IconButton' is defined but never used.","'Avatar' is defined but never used.","'ButtonBase' is defined but never used.","'ExitToApp' is defined but never used.","'VpnKey' is defined but never used.","'AccountCircle' is defined but never used.","'EqualizerIcon' is defined but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","'open' is assigned a value but never used.","'useRef' is defined but never used.","'NewModule' is defined but never used.","'unstable_createMuiStrictModeTheme' is defined but never used.","'uuid' is defined but never used.","'height' is assigned a value but never used.","'CheckStage' is assigned a value but never used.","'nextModule' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NextStage', 'PreviousStage', and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["1168"],"'setMarks' is assigned a value but never used.","'Table' is defined but never used.","'Link' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Table2' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'ELcolumnDefs' is defined but never used.","'ELrowData' is defined but never used.","'CLrowData' is defined but never used.","'CLcolumnDefs' is defined but never used.","'SLMcolumnDefs' is defined but never used.","'SLMrowData' is defined but never used.","'LensIcon' is defined but never used.","'Switch' is defined but never used.","'Input' is defined but never used.","'data' is defined but never used.","'subSystemLevelData' is defined but never used.","'events' is defined but never used.","'mainData' is defined but never used.","'EventCalendar' is defined but never used.","'KeyboardDatePicker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'setSubSystemData' is assigned a value but never used.","'saveTempMission' is assigned a value but never used.","'setRows' is assigned a value but never used.","'useEffect' is defined but never used.","'keepLogin' is assigned a value but never used.","'setKeepLogin' is assigned a value but never used.","'showSnackBar' is assigned a value but never used.","'setShowSnackBar' is assigned a value but never used.","'Redirect' is defined but never used.","'ImportData' is defined but never used.","'isAllOf' is defined but never used.","'width' is assigned a value but never used.","'isLoadEqt' is assigned a value but never used.","'setIsLoadEqt' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NextStage', 'PreviousStage', and 'history'. Either include them or remove the dependency array.",["1169"],"'components' is defined but never used.","'setPlatformName' is assigned a value but never used.","'setEqData' is assigned a value but never used.","'onChange' is assigned a value but never used.","'detailRowAutoHeight' is assigned a value but never used.","'BarGraph' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'UserSelection' is defined but never used.","'currMinMax' is assigned a value but never used.","'AgGridColumn' is defined but never used.","'Grid' is defined but never used.","'AddIcon' is defined but never used.","'uuidv4' is defined but never used.","'DeleteIcon' is defined but never used.","'userActions' is defined but never used.","'CustomSelect' is defined but never used.","'AutoSelect' is defined but never used.","'Route' is defined but never used.","'selectedInputs' is assigned a value but never used.","'fData' is assigned a value but never used.","'parentFiledValue' is assigned a value but never used.","'parentOnChange' is assigned a value but never used.","'clearForm' is assigned a value but never used.","'useCallback' is defined but never used.","'Paper' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Tooltip' is defined but never used.","'Label' is defined but never used.","'ReferenceLine' is defined but never used.","'ReliabilityChart' is defined but never used.","'MissionSlider' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'Loader' is defined but never used.","'ReactCardFlip' is defined but never used.","'MissionData' is assigned a value but never used.","'missionProfileData' is assigned a value but never used.","'ParallelIds' is assigned a value but never used.","'SystemClasses' is assigned a value but never used.","'isRulOpen' is assigned a value but never used.","'LabelToolTip' is defined but never used.","'CustomTextInput' is defined but never used.","'disableButton' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Typography' is defined but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1170"],"'onEquipmentCodeChange' is assigned a value but never used.","'RenderParallelComponent' is defined but never used.","'setParallelIds' is assigned a value but never used.","'MIrowData' is defined but never used.","'Sidebar' is defined but never used.","'Select' is defined but never used.","'treeDataActions' is defined but never used.","'DialogContentText' is defined but never used.","'filter' is defined but never used.","'AssignType' is defined but never used.","'TextField' is defined but never used.","'TreeComponent' is defined but never used.","'setquestionsOptions' is assigned a value but never used.","'questionsCost' is assigned a value but never used.","'questionsContinous' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'useSelector' is defined but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'selectedShip' is assigned a value but never used.","'selectedEquipments' is assigned a value but never used.","'currShip' is assigned a value but never used.","'setCurrShip' is assigned a value but never used.","'currEquipment' is assigned a value but never used.","'setCurrEquipment' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'InputBase' is defined but never used.","'Labelclasses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'failureModesData', 'props.matchingId', and 'systemData'. Either include them or remove the dependency array.",["1171"],"'selectedOptionId' is assigned a value but never used.","'ReactDom' is defined but never used.","'monthNames' is assigned a value but never used.","'Container' is defined but never used.","'setSensorValue' is assigned a value but never used.","'T0' is assigned a value but never used.","'setT0' is assigned a value but never used.","'setConfidenceLevel' is assigned a value but never used.","'treeDataT' is defined but never used.","'treeDataS' is assigned a value but never used.","'setTreeData' is assigned a value but never used.","'xData' is defined but never used.","'systemConfigurationData' is assigned a value but never used.","'platform' is assigned a value but never used.","'platformType' is assigned a value but never used.","'setDegradationWearLevels' is assigned a value but never used.","'hello' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addVisualActionRows'. Either include it or remove the dependency array.",["1172"],"'SystemConfiguration' is defined but never used.","'path' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1173"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'edgesN' is assigned a value but never used.","'groupDataKN' is assigned a value but never used.","'data' is assigned a value but never used.","'ReactDOM' is defined but never used.","'ContextMenuTrigger' is defined but never used.","'location' is assigned a value but never used.","'potentialParallelComponents' is assigned a value but never used.","'systemData' is assigned a value but never used.","'ModeCommentTwoTone' is defined but never used.","'treeData' is defined but never used.","'phaseData' is assigned a value but never used.","'mData' is assigned a value but never used.","'AgGridReact' is defined but never used.","'getDatePicker' is assigned a value but never used.","'Fragment' is defined but never used.","'rData' is assigned a value but never used.","'rootSystemData' is assigned a value but never used.","'phaseD' is assigned a value but never used.","'LMrowData' is defined but never used.","'PhaseClasses' is assigned a value but never used.","'icon' is assigned a value but never used.","'checkedIcon' is assigned a value but never used.",{"desc":"1174","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1178","fix":"1179"},{"desc":"1180","fix":"1181"},{"desc":"1182","fix":"1183"},{"desc":"1184","fix":"1185"},"Update the dependencies array to be: [locationKeys, history, location.pathname, NextStage, PreviousStage]",{"range":"1186","text":"1187"},"Update the dependencies array to be: [NextStage, PreviousStage, history, locationKeys]",{"range":"1188","text":"1189"},"Update the dependencies array to be: [dispatch]",{"range":"1190","text":"1191"},"Update the dependencies array to be: [failureModesData, props.matchingId, systemData]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [VisualWearRows, VisualCorrosionRows, addVisualActionRows]",{"range":"1194","text":"1195"},"Update the dependencies array to be: [dispatch, ielements]",{"range":"1196","text":"1197"},[5074,5097],"[locationKeys, history, location.pathname, NextStage, PreviousStage]",[3492,3506],"[NextStage, PreviousStage, history, locationKeys]",[1751,1753],"[dispatch]",[1409,1411],"[failureModesData, props.matchingId, systemData]",[1981,2018],"[VisualWearRows, VisualCorrosionRows, addVisualActionRows]",[3665,3676],"[dispatch, ielements]"]